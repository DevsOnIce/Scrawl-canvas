{
    "project": {
        "name": "scrawl-canvas",
        "description": "Responsive, integrated and interactive HTML5 canvas elements",
        "version": "6.0.0",
        "url": "http://scrawl.rikweb.org.uk"
    },
    "files": {
        "source\\scrawlAnimation.js": {
            "name": "source\\scrawlAnimation.js",
            "modules": {
                "scrawlAnimation": 1
            },
            "classes": {
                "window.scrawl_Animation": 1,
                "Ticker": 1,
                "Action": 1,
                "Tween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlBlock.js": {
            "name": "source\\scrawlBlock.js",
            "modules": {
                "scrawlBlock": 1
            },
            "classes": {
                "window.scrawl_Block": 1,
                "Block": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlCollisions.js": {
            "name": "source\\scrawlCollisions.js",
            "modules": {
                "scrawlCollisions": 1
            },
            "classes": {
                "window.scrawl_Collisions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlColor.js": {
            "name": "source\\scrawlColor.js",
            "modules": {
                "scrawlColor": 1
            },
            "classes": {
                "window.scrawl_Color": 1,
                "Color": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlCore.js": {
            "name": "source\\scrawlCore.js",
            "modules": {
                "scrawlCore": 1
            },
            "classes": {
                "window.scrawl": 1,
                "Vector": 1,
                "Base": 1,
                "Device": 1,
                "Position": 1,
                "PageElement": 1,
                "Pad": 1,
                "Cell": 1,
                "Context": 1,
                "Group": 1,
                "Entity": 1,
                "Design": 1,
                "Gradient": 1,
                "RadialGradient": 1,
                "Animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlFilters.js": {
            "name": "source\\scrawlFilters.js",
            "modules": {
                "scrawlFilters": 1
            },
            "classes": {
                "window.scrawl_Filters": 1,
                "Filter": 1,
                "GreyscaleFilter": 1,
                "InvertFilter": 1,
                "BrightnessFilter": 1,
                "SaturationFilter": 1,
                "ThresholdFilter": 1,
                "ChannelsFilter": 1,
                "ChannelStepFilter": 1,
                "TintFilter": 1,
                "MatrixFilter": 1,
                "PixelateFilter": 1,
                "BlurFilter": 1,
                "LeachFilter": 1,
                "SeparateFilter": 1,
                "NoiseFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlFrame.js": {
            "name": "source\\scrawlFrame.js",
            "modules": {
                "scrawlFrame": 1
            },
            "classes": {
                "window.scrawl_Frame": 1,
                "FramePoint": 1,
                "Frame": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlImageLoad.js": {
            "name": "source\\scrawlImageLoad.js",
            "modules": {},
            "classes": {
                "Image": 1,
                "SpriteAnimation": 1,
                "Video": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlImages.js": {
            "name": "source\\scrawlImages.js",
            "modules": {
                "scrawlImages": 1
            },
            "classes": {
                "window.scrawl_Images": 1,
                "Pattern": 1,
                "Picture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPath.js": {
            "name": "source\\scrawlPath.js",
            "modules": {
                "scrawlPath": 1
            },
            "classes": {
                "window.scrawl_Path": 1,
                "Path": 1,
                "Point": 1,
                "Link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPathFactories.js": {
            "name": "source\\scrawlPathFactories.js",
            "modules": {
                "scrawlPathFactories": 1
            },
            "classes": {
                "window.scrawl_Factories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPhrase.js": {
            "name": "source\\scrawlPhrase.js",
            "modules": {
                "scrawlPhrase": 1
            },
            "classes": {
                "window.scrawl_Phrase": 1,
                "Phrase": 1,
                "Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPhysics.js": {
            "name": "source\\scrawlPhysics.js",
            "modules": {
                "scrawlPhysics": 1
            },
            "classes": {
                "window.scrawl_Physics": 1,
                "Particle": 1,
                "Spring": 1,
                "Force": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlQuaternion.js": {
            "name": "source\\scrawlQuaternion.js",
            "modules": {},
            "classes": {
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlSaveLoad.js": {
            "name": "source\\scrawlSaveLoad.js",
            "modules": {
                "scrawlSaveLoad": 1
            },
            "classes": {
                "window.scrawl_SaveLoad": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlShape.js": {
            "name": "source\\scrawlShape.js",
            "modules": {
                "scrawlShape": 1
            },
            "classes": {
                "window.scrawl_Shape": 1,
                "Shape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlStacks.js": {
            "name": "source\\scrawlStacks.js",
            "modules": {
                "scrawlStacks": 1
            },
            "classes": {
                "window.scrawl_Stacks": 1,
                "Stack": 1,
                "Element": 1,
                "ElementGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlWheel.js": {
            "name": "source\\scrawlWheel.js",
            "modules": {
                "scrawlWheel": 1
            },
            "classes": {
                "window.scrawl_Wheel": 1,
                "Wheel": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "scrawlAnimation": {
            "name": "scrawlAnimation",
            "submodules": {},
            "classes": {
                "window.scrawl_Animation": 1,
                "Ticker": 1,
                "Action": 1,
                "Tween": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlAnimation.js",
            "line": 2138,
            "description": "# scrawlAnimation\n\n## Purpose and features\n\nThe Animation module adds support for animation and tweening to the core\n\n* Adds and starts an animation loop to the core\n* Defines the Animation object, used to program animation sequences\n* Defines the Tween object - a specialized form of animation which has pre-determined start and end points, durations and easing options\n* Adds functionality to various core objects and functions so they can take advantage of the animation object"
        },
        "scrawlBlock": {
            "name": "scrawlBlock",
            "submodules": {},
            "classes": {
                "window.scrawl_Block": 1,
                "Block": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlBlock.js",
            "line": 76,
            "description": "# scrawlBlock\n\n## Purpose and features\n\nThe Block extension adds Block entitys - squares and rectangles - to the core module\n\n* Defines 'rect' objects for displaying on a Cell's canvas\n* Performs 'rect' based drawing operations on canvases"
        },
        "scrawlCollisions": {
            "name": "scrawlCollisions",
            "submodules": {},
            "classes": {
                "window.scrawl_Collisions": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlCollisions.js",
            "line": 38,
            "description": "# scrawlCollisions\n\n## Purpose and features\n\nThe Collisions extension adds support for detecting collisions between entitys\n\n* Adds functionality to various core objects and functions so they can take detect collisions"
        },
        "scrawlColor": {
            "name": "scrawlColor",
            "submodules": {},
            "classes": {
                "window.scrawl_Color": 1,
                "Color": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlColor.js",
            "line": 63,
            "description": "# scrawlColor\n\n## Purpose and features\n\nThe Color extension adds a controllable color object that can be used with entity fillStyle and strokeStyle attributes"
        },
        "scrawlCore": {
            "name": "scrawlCore",
            "submodules": {},
            "classes": {
                "window.scrawl": 1,
                "Vector": 1,
                "Base": 1,
                "Device": 1,
                "Position": 1,
                "PageElement": 1,
                "Pad": 1,
                "Cell": 1,
                "Context": 1,
                "Group": 1,
                "Entity": 1,
                "Design": 1,
                "Gradient": 1,
                "RadialGradient": 1,
                "Animation": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlCore.js",
            "line": 8568,
            "description": "# scrawlCore\n\n## Version 6.0.0 - 31 December 2016\n\nDeveloped by Rik Roots - <rik.roots@gmail.com>, <rik@rikweb.org.uk>\n\nScrawl demo website: <http://scrawl.rikweb.org.uk>\n\n## Purpose and features\n\nThe core module is the only essential file in Scrawl. It must always be directly, and completely, loaded into the web page before any Scrawl extensions are added to it. \n\n* Defines the Scrawl scope - __window.scrawl__\n\n* Defines a number of utility methods used throughout Scrawl.js\n\n* Defines the Scrawl library - all significant objects created by Scrawl can be found here\n\n* Searches the DOM for &lt;canvas&gt; elements, and imports them into the Scrawl library\n\n* Instantiates controllers (Pad objects) and wrappers (Cell objects) for each &lt;canvas&gt; element\n\n* Instantiates Context engine objects for each Cell object\n\n* Defines mouse functionality in relation to &lt;canvas&gt; elements\n\n* Defines the core functionality for Entity objects to be displayed on &lt;canvas&gt; elements; the different types of Entitys are defined in separate extensions which need to be loaded into the core\n\n* Defines Group objects, used to group entitys together for display and interaction purposes\n\n* Defines Design objects - Gradient and RadialGradient - which can be used by Entity objects for their _fill_ and _stroke_ styles; additional Design objects (Pattern, Color) are defined in separate extensions\n\n## Loading the module",
            "example": [
                "\n    <script src=\"path/to/scrawlCore-min.js\"></script>"
            ]
        },
        "scrawlFilters": {
            "name": "scrawlFilters",
            "submodules": {},
            "classes": {
                "window.scrawl_Filters": 1,
                "Filter": 1,
                "GreyscaleFilter": 1,
                "InvertFilter": 1,
                "BrightnessFilter": 1,
                "SaturationFilter": 1,
                "ThresholdFilter": 1,
                "ChannelsFilter": 1,
                "ChannelStepFilter": 1,
                "TintFilter": 1,
                "MatrixFilter": 1,
                "PixelateFilter": 1,
                "BlurFilter": 1,
                "LeachFilter": 1,
                "SeparateFilter": 1,
                "NoiseFilter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlFilters.js",
            "line": 2617,
            "description": "# scrawlFilters\n\n## Purpose and features\n\nThe Filters extension adds a set of filter algorithms to the scrawl-canvas library"
        },
        "scrawlFrame": {
            "name": "scrawlFrame",
            "submodules": {},
            "classes": {
                "window.scrawl_Frame": 1,
                "FramePoint": 1,
                "Frame": 1,
                "Image": 1,
                "SpriteAnimation": 1,
                "Video": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlImageLoad.js",
            "line": 851,
            "description": "# scrawlFrame\n\n## Purpose and features\n\nThe Frame module adds 'Frame' entitys to the core module:\n\n* Replicates functionality of Picture entity\n* Can use &lt;img&gt;, &lt;canvas&gt; or &lt;video&gt; for source image\n* Simulates 3d perspective in a 2d canvas element\n* Corners can be moved independently of each other\n* Alternatively, frame can be locked to a stack element which can then be manipulated in 3d space \n\nNote that Frame entity code, being a combination of classic entity and stack element functionalities, bypasses the existing Core code. Thus much of the frame code replicates Position, Cell, Context and Entity code. Changes to the code for these core Objects MUST be ported over to the frame code, where applicable. Changes are made to the frame code will also need to be checked against core code to see if that, too, needs to be updated."
        },
        "scrawlImages": {
            "name": "scrawlImages",
            "submodules": {},
            "classes": {
                "window.scrawl_Images": 1,
                "Pattern": 1,
                "Picture": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlImages.js",
            "line": 541,
            "description": "# scrawlImages\n\n## Purpose and features\n\nThe Images module adds support for displaying images on canvas elements\n\n* Defines the Picture entity, which can be used to display file images (including animated entity sheets), other &lt;canvas&gt; elements, and &lt;video&gt; elements (experimental)\n* Defines the Pattern design, which uses images for entity fillStyle and strokeStyle attributes"
        },
        "scrawlPath": {
            "name": "scrawlPath",
            "submodules": {},
            "classes": {
                "window.scrawl_Path": 1,
                "Path": 1,
                "Point": 1,
                "Link": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPath.js",
            "line": 1832,
            "description": "# scrawlPath\n\n## Purpose and features\n\nThe Path extension adds Path entitys - path-based objects - to the core module\n\n* Defines a entity composed of lines, quadratic and bezier curves, etc\n* Can act as a path along which other entitys can be positioned and animated\n* See also Shape object, which achieves a similar thing in a different way"
        },
        "scrawlPathFactories": {
            "name": "scrawlPathFactories",
            "submodules": {},
            "classes": {
                "window.scrawl_Factories": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPathFactories.js",
            "line": 37,
            "description": "# scrawlPathFactories\n\n## Purpose and features\n\nThe Factories extension adds a set of factory functions to the scrawl-canvas library, which can be used to generate both Path and Shape entitys"
        },
        "scrawlPhrase": {
            "name": "scrawlPhrase",
            "submodules": {},
            "classes": {
                "window.scrawl_Phrase": 1,
                "Phrase": 1,
                "Text": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPhrase.js",
            "line": 906,
            "description": "# scrawlPhrase\n\n## Purpose and features\n\nThe Phrase extension adds Phrase entitys - single and multi-line text objects - to the core module\n\n* Defines text objects for displaying on a Cell's canvas\n* Handles all related font functionality\n* Performs text drawing operations on canvases"
        },
        "scrawlPhysics": {
            "name": "scrawlPhysics",
            "submodules": {},
            "classes": {
                "window.scrawl_Physics": 1,
                "Particle": 1,
                "Spring": 1,
                "Force": 1,
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlQuaternion.js",
            "line": 58,
            "description": "# scrawlPhysics\n\n## Purpose and features\n\nAdds an (experimental) physics engine to the core\n\n* Adds Particle, Spring and Force objects to the mix\n* Defines a number of engines for calculating interactions between these objects"
        },
        "scrawlSaveLoad": {
            "name": "scrawlSaveLoad",
            "submodules": {},
            "classes": {
                "window.scrawl_SaveLoad": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlSaveLoad.js",
            "line": 39,
            "description": "# scrawlSaveLoad\n\n## Purpose and features\n\nAdds the ability to save and load Scrawl objects and scenes as JSON strings\n\n_This extension is experimental and thus likely to change significantly as scrawl-canvas evolves_"
        },
        "scrawlShape": {
            "name": "scrawlShape",
            "submodules": {},
            "classes": {
                "window.scrawl_Shape": 1,
                "Shape": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlShape.js",
            "line": 73,
            "description": "# scrawlShape\n\n## Purpose and features\n\nThe Shape extension adds Shape entitys - path-based objects - to the core module\n\n* Defines a entity composed of lines, quadratic and bezier curves, etc\n* See also Path object, which achieves a similar thing in a different way"
        },
        "scrawlStacks": {
            "name": "scrawlStacks",
            "submodules": {},
            "classes": {
                "window.scrawl_Stacks": 1,
                "Stack": 1,
                "Element": 1,
                "ElementGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlStacks.js",
            "line": 3181,
            "description": "# scrawlStacks\n\n## Purpose and features\n\nThe Stacks extension adds support for CSS3 3d transformations to visible &lt;canvas&gt;, and other, elements\n\n* Significantly amends the PageElement object and functions\n* Adds core functions for detecting and including scrawl-canvas stacks and associated elements in the library\n* Defines the Stack object, which contains all DOM elements to be manipulated by this stack\n* Defines the Element object, which wrap DOM elements (excluding &lt;canvas&gt; elements) included in a stack"
        },
        "scrawlWheel": {
            "name": "scrawlWheel",
            "submodules": {},
            "classes": {
                "window.scrawl_Wheel": 1,
                "Wheel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlWheel.js",
            "line": 81,
            "description": "# scrawlWheel\n\n## Purpose and features\n\nThe Wheel extension adds Wheel entitys - circles, segments and filled arcs - to the core module\n\n* Defines 'arc' objects for displaying on a Cell's canvas\n* Performs 'arc' based drawing operations on canvases"
        }
    },
    "classes": {
        "window.scrawl_Animation": {
            "name": "window.scrawl_Animation",
            "shortname": "window.scrawl_Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 41,
            "description": "# window.scrawl\n\nscrawlAnimation extension adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.tween - for Tween and Action objects\n\n## New default attributes\n\n* Position.delta - default: {x:0,y:0,z:0};\n* Position.deltaPathPlace - default: 0;\n* Position.pathSpeedConstant - default: true;\n* Position.tweenLock - default: false;\n\n* Cell.sourceDelta - default: {x:0, y:0, z:0};\n* Cell.sourceMinWidth - default: 0;\n* Cell.sourceMaxWidth - default: 0;\n* Cell.sourceMinHeight - default: 0;\n* Cell.sourceMaxHeight - default: 0;\n\n* PageElement.tweenLock - default: false;\n\n* Design.roll - default: 0;\n* Design.autoUpdate - default: false;"
        },
        "Ticker": {
            "name": "Ticker",
            "shortname": "Ticker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 986,
            "description": "# Ticker\n\n## Instantiation\n\n* scrawl.makeTicker()\n\n## Purpose\n\n* Defines a linear time sequence to which tweens and other actions can subscribe\n\n## Access\n\n* scrawl.animation.TICKERNAME - for the Ticker object\n\n## Ticker functions\n\n* Start a Ticker from 0 by calling the __run()__ function on it.\n* Tickers can be stopped by calling the __halt()__ function on it.\n* Start a Ticker from the point at which it was previously halted by calling the __resume()__ function on it.\n* A Ticker can have its current tick amended by calling the __seekTo()__ function on it.\n* A Ticker can be deleted by calling the __kill()__ function on it.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Action": {
            "name": "Action",
            "shortname": "Action",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 1642,
            "description": "# Action\n\n## Instantiation\n\n* scrawl.makeAction()\n\n## Purpose\n\n* Defines a reversible function which can subscribe to a ticker so that it gets invoked at a particular moment after the ticker starts to run\n\nActions only really make sense when they are associated with a Ticker object. They have no duration as such (unless their action/revert functions include asynchronous activities, in which case - you're on your own!). The action() function should define a set of near-instant actions; the revert() function should mirror the action, to allow the Action object to be reversible.\n\nAction and revert functions are not expected to take any arguments - they are expected to act on the objects assigned to their __targets__ Array\n\nTo access the Action functions directly, assign it to a variable, or call it from the library: \n\n* scrawl.tween[ACTIONNAME].action()\n* scrawl.tween[ACTIONNAME].revert()\n\n## Access\n\n* scrawl.tween.ACTIONNAME - for the Action object\n\n## Action functions\n\n* An Action can be invoked by calling its __action()__ function.\n* An Action can be reversed by calling its __revert()__ function.\n* An Action can be deleted by calling the __kill()__ function on it.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 2138,
            "description": "# Tween\n\n## Instantiation\n\n* scrawl.makeTween()\n\n## Purpose\n\n* Defines a set of attribute update definitions for objects\n\n## Access\n\n* scrawl.tween.TWEENNAME - for the Tween object\n\n## Tween functions\n\n* A Tween can be deleted by calling the __kill()__ function on it.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Block": {
            "name": "window.scrawl_Block",
            "shortname": "window.scrawl_Block",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlBlock",
            "namespace": "",
            "file": "source\\scrawlBlock.js",
            "line": 39,
            "description": "# window.scrawl\n\nscrawlBlock extension adaptions to the scrawl-canvas library object"
        },
        "Block": {
            "name": "Block",
            "shortname": "Block",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlBlock",
            "namespace": "",
            "file": "source\\scrawlBlock.js",
            "line": 76,
            "description": "# Block\n\n## Instantiation\n\n* scrawl.makeBlock()\n\n## Purpose\n\n* Defines 'rect' objects for displaying on a Cell's canvas\n* Performs 'rect' based drawing operations on canvases\n\n## Access\n\n* scrawl.entity.BLOCKNAME - for the Block entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Collisions": {
            "name": "window.scrawl_Collisions",
            "shortname": "window.scrawl_Collisions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCollisions",
            "namespace": "",
            "file": "source\\scrawlCollisions.js",
            "line": 38,
            "description": "# window.scrawl\n\nscrawlCollisions extension adaptions to the scrawl-canvas library object\n\n## New default attributes\n\n* Position.delta - default: {x:0,y:0,z:0};\n* Cell.fieldLabel - default: '';\n* Entity.fieldChannel - default: 'anycolor';\n* Entity.fieldTest - default: 0;\n* Entity.collisionVectors - default: [];\n* Entity.collisionPoints - default: [];"
        },
        "window.scrawl_Color": {
            "name": "window.scrawl_Color",
            "shortname": "window.scrawl_Color",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlColor",
            "namespace": "",
            "file": "source\\scrawlColor.js",
            "line": 37,
            "description": "# window.scrawl\n\nscrawlColor extension adaptions to the scrawl-canvas library object"
        },
        "Color": {
            "name": "Color",
            "shortname": "Color",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlColor",
            "namespace": "",
            "file": "source\\scrawlColor.js",
            "line": 63,
            "description": "# Color\n\n## Instantiation\n\n* scrawl.makeColor()\n\n## Purpose\n\n* Defines a color object\n* Used with entity.strokeStyle and entity.fillStyle attributes\n\n## Access\n\n* scrawl.design.COLORNAME - for the Color design object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl": {
            "name": "window.scrawl",
            "shortname": "window.scrawl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 75,
            "description": "# window.scrawl\n\nThe Scrawl library object. All objects, attributes and functions contained in the library can be accessed by any other JavaScript code running on the web page.\n\nThe library will expand and change as Scrawl extensions load.\n\n## Purpose:\n\n* Holds links to every substantive object created by Scrawl.js and user code\n* Also holds links to key DOM objects\n* Functions for loading canvas elements on initialization, and for dynamically creating canvases on the web page\n* Shorthand functions for rendering canvases\n* Some general helper functions for testing variables that can be used by coders \n\nCore creates the following sections in the library:\n\n* scrawl.__object__ - Contains key:value pairs for storing miscellaneous objects, for instance handles to DOM image elements imported into scrawl via scrawl.getImagesByClass()\n* scrawl.__pad__ - Contains PADNAME:Object pairs for each instantiated Pad canvas controller object\n* scrawl.__cell__ - Contains CELLNAME:Object pairs for each instantiated Cell canvas wrapper object\n* scrawl.__canvas__ - Contains CELLNAME:object pairs linking to each Cell object's DOM &lt;canvas&gt; element\n* scrawl.__context__ - Contains CELLNAME:Object pairs linking to each &lt;canvas&gt; element's context engine\n* scrawl.__ctx__ - Contains CONTEXTNAME:Object pairs linking to each instantiated Scrawl Context object (used by Cell and Entity objects)\n* scrawl.__imageData__ - Contains key:value pairs linking to JavaScript image data objects\n* scrawl.__group__ - Contains GROUPNAME:Object pairs linking to each instantiated Group object\n* scrawl.__design__ - Contains DESIGNNAME:Object pairs for each instantiated design object (Gradient, RadialGradient, Pattern, Color)\n* scrawl.__dsn__ - Contains DESIGNNAME:precompiled gradient/pattern context object pairs (Gradient, RadialGradient, Pattern)\n* scrawl.__entity__ - Contains SPRITENAME:Object pairs for each instantiated entity object (Block, Phrase, Picture, Wheel, Path, Shape, Particle)"
        },
        "Vector": {
            "name": "Vector",
            "shortname": "Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 1898,
            "description": "# Vector\n\n## Instantiation\n\n* scrawl.makeVector()\n\n## Purpose\n\n* To hold vector (coordinate, movement) data",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Base": {
            "name": "Base",
            "shortname": "Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2328,
            "description": "# Base \n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* the root object for all other Scrawl objects (except Vectors, Quaternions)\n* gives every object its (unique) name attribute\n* also supplies title and comment attributes (very basic assistive technology)\n* provides basic getter and setter functions, and a JSON-based toString function\n* sets out the cloning strategy for other objects, and restricts which object types can be cloned",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Device": {
            "name": "Device",
            "shortname": "Device",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2510,
            "description": "# Device\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Wraps the browser's viewport, and includes basic information about the device",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Position": {
            "name": "Position",
            "shortname": "Position",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2909,
            "description": "# Position\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* supplies objects with basic positional and scaling attributes, and methods for manipulating them\n* start coordinates are relative to the top left corner of the object's Cell\n* handle coordinates are relative to the object's start coordinate\n\nCertain Scrawl extensions will add functionality to this object, for instance scrawlAnimation adds delta attributes which can be used to automatically update the position of a Scrawl entity.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "PageElement": {
            "name": "PageElement",
            "shortname": "PageElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 3757,
            "description": "# PageElement\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* supplies DOM elements with basic dimensional, positional and scaling attributes, and methods for manipulating them\n\nThe core implementation of this object is a stub that supplies Pad objects with basic mouse position support. The stacks extension will substantially modify it to provide CSS3 3d positioning and animation functionality for Stack, Element and Pad objects.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Pad": {
            "name": "Pad",
            "shortname": "Pad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 4369,
            "description": "# Pad\n\n## Instantiation\n\n* created automatically for any &lt;canvas&gt; element found on the web page when it loads\n* also, scrawl.addCanvasToPage()\n* should not be instantiated directly by users\n\n## Purpose\n\n* controller (not wrapper) object for canvas elements included in the DOM\n* coordinates activity between visible canvas element and other (non-DOM) canvas elements that contribute to it\n\nBecause the Pad constructor calls the Cell constructor as part of the construction process (Cell objects __wrap__ &lt;canvas&gt; elements; Pad objects __control__ &lt;canvas&gt; elements), Cell attributes can be included in the Pad constructor object and picked up by the resultant Cell objects.\n\n## Access\n\n* scrawl.pad.PADNAME - for the Pad object\n* scrawl.canvas.PADNAME - for the Pad object's visible (display) &lt;canvas&gt; element\n* scrawl.context.PADNAME - for the visible (display) &ltcanvas&gt; element's 2d context engine (CanvasRenderingContext2D interface)\n* scrawl.cell[scrawl.pad.PADNAME.display] - for the Pad object's display cell\n* scrawl.cell[scrawl.pad.PADNAME.base] - for the Pad object's base cell",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 4859,
            "description": "# Cell\n\n## Instantiation\n\n* created automatically for any &lt;canvas&gt; element found on the web page when it loads\n* scrawl.addCanvasToPage()\n* scrawl.addNewCell()\n* Pad.addNewCell()\n* should not be instantiated directly by users\n\n## Purpose\n\n* Acts as a wrapper for each &lt;canvas&gt; element - whether that canvas is part of the DOM or not\n* Oversees manipulation of the &lt;canvas&gt; element's context engine\n* Responsible clearing &lt;canvas&gt; elements, and for copying one &lt;canvas&gt; to another\n* Includes functionality to pivot, path, flip, lock and roll cell positioning in the display scene\n* Controls scrolling and zoom effects between &lt;canvas&gt; elements\n* Builds &lt;canvas&gt; element collision fields from entity data\n* Undertakes collision detection between entitys and a collision field\n\n_Note: A Cell is entirely responsible for determining what portion of its &lt;canvas&gt; element's content will be copied to another &lt;canvas&gt; and where that copy will appear on the destination &lt;canvas&gt;._\n\n## Access\n\n* scrawl.cell.CELLNAME - for the Cell object\n* scrawl.pad[scrawl.cell.CELLNAME.pad] - for the Cell object's Pad object",
            "is_constructor": 1,
            "extends": "Position",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Context": {
            "name": "Context",
            "shortname": "Context",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Entity"
            ],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 6336,
            "description": "# Context\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* wraps a given context for a Cell or Entity object\n* responsible for comparing contexts and listing changes that need to be made for successful Entity stamping on a canvas\n* all updates to a Context object's attributes should be performed via the Entity object's set() function",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Group": {
            "name": "Group",
            "shortname": "Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 6696,
            "description": "# Group\n\n## Instantiation\n\n* scrawl.makeGroup()\n\n## Purpose\n\n* associates entity objects with a cell object, for stamping/compiling the &lt;canvas&gt; scene\n* groups Entity objects for specific purposes\n* (with collisions extension) plays a key role in collision detection between Entitys\n\n## Access\n\n* scrawl.group.GROUPNAME - for the Group object\n* scrawl.cell[scrawl.group.GROUPNAME.cell] - for the Group object's default Cell object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 7181,
            "description": "# Entity\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Supplies the common methodology for all Scrawl entitys: Phrase, Block, Wheel, Picture, Path, Shape\n* Sets up the attributes for holding a entity's current state: position, visibility, rotation, drawing order, context\n* Describes how entitys should be stamped onto a Cell's canvas\n* Provides drag-and-drop functionality\n\n__Scrawl core does not include any entity type constructors.__ Each entity type used on a web page canvas needs to be added to the core by loading its associated extension:\n\n* __Block__ entitys are defined in the _scrawlBlock_ extension (alias: block)\n* __Wheel__ entitys are defined in the _scrawlWheel_ extension (alias: wheel)\n* __Phrase__ entitys are defined in the _scrawlPhrase_ extension (alias: phrase)\n* __Picture__ entitys are defined as part of the _scrawlImages_ extension (alias: images)\n* __Path__ entitys are defined in the _scrawlPath_ extension (alias: path)\n* __Shape__ entitys are defined in the _scrawlShape_ extension (alias: shape)\n* additional factory functions for defining common Path and Shape objects (lines, curves, ovals, triangles, stars, etc) are supplied by the _scrawlPathFactories_ extension (alias: factories)",
            "is_constructor": 1,
            "extends": "Position",
            "uses": [
                "Context"
            ],
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Design": {
            "name": "Design",
            "shortname": "Design",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 7946,
            "description": "# Design\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Defines gradients and radial gradients used with entity objects' strokeStyle and fillStyle attributes",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Gradient": {
            "name": "Gradient",
            "shortname": "Gradient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 8359,
            "description": "# Gradient\n\n## Instantiation\n\n* scrawl.makeGradient()\n\n## Purpose\n\n* Defines a linear gradient\n* Used with entity.strokeStyle and entity.fillStyle attributes\n\n## Access\n\n* scrawl.design.GRADIENTNAME - for the Gradient object",
            "is_constructor": 1,
            "extends": "Design",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "RadialGradient": {
            "name": "RadialGradient",
            "shortname": "RadialGradient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 8400,
            "description": "# RadialGradient\n\n## Instantiation\n\n* scrawl.makeRadialGradient()\n\n## Purpose\n\n* Defines a radial gradient\n* Used with entity.strokeStyle and entity.fillStyle attributes\n\n## Access\n\n* scrawl.design.RADIALGRADIENTNAME - for the RadialGradient object",
            "is_constructor": 1,
            "extends": "Design",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 8568,
            "description": "# Animation\n\n## Instantiation\n\n* scrawl.makeAnimation()\n\n## Purpose\n\n* Defines an animation function to be run by the scrawl.animationLoop() function\n\n## Access\n\n* scrawl.animation.ANIMATIONNAME - for the Animation object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Filters": {
            "name": "window.scrawl_Filters",
            "shortname": "window.scrawl_Filters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 37,
            "description": "# window.scrawl\n\nscrawlFilters extension adaptions to the scrawl-canvas library object\n\n## New library sections\n\n* scrawl.filter - for filter objects"
        },
        "Filter": {
            "name": "Filter",
            "shortname": "Filter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 766,
            "description": "# Filter\n\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Adds a filter effect to an Entity\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the Filter object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "GreyscaleFilter": {
            "name": "GreyscaleFilter",
            "shortname": "GreyscaleFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 874,
            "description": "# GreyscaleFilter\n\n## Instantiation\n\n* scrawl.makeGreyscaleFilter()\n\n## Purpose\n\n* Adds a greyscale filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the GreyscaleFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "InvertFilter": {
            "name": "InvertFilter",
            "shortname": "InvertFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 948,
            "description": "# InvertFilter\n\n## Instantiation\n\n* scrawl.makeInvertFilter()\n\n## Purpose\n\n* Adds an invert filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the InvertFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "BrightnessFilter": {
            "name": "BrightnessFilter",
            "shortname": "BrightnessFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1019,
            "description": "# BrightnessFilter\n\n## Instantiation\n\n* scrawl.makeBrightnessFilter()\n\n## Purpose\n\n* Adds a brightness filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the BrightnessFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "SaturationFilter": {
            "name": "SaturationFilter",
            "shortname": "SaturationFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1103,
            "description": "# SaturationFilter\n\n## Instantiation\n\n* scrawl.makeSaturationFilter()\n\n## Purpose\n\n* Adds a saturation filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the SaturationFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "ThresholdFilter": {
            "name": "ThresholdFilter",
            "shortname": "ThresholdFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1187,
            "description": "# ThresholdFilter\n\n## Instantiation\n\n* scrawl.makeThresholdFilter()\n\n## Purpose\n\n* Adds a threshold filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the ThresholdFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "ChannelsFilter": {
            "name": "ChannelsFilter",
            "shortname": "ChannelsFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1275,
            "description": "# ChannelsFilter\n\n## Instantiation\n\n* scrawl.makeChannelsFilter()\n\n## Purpose\n\n* Adds a channels filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the ChannelsFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "ChannelStepFilter": {
            "name": "ChannelStepFilter",
            "shortname": "ChannelStepFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1384,
            "description": "# ChannelStepFilter\n\n## Instantiation\n\n* scrawl.makeChannelStepFilter()\n\n## Purpose\n\n* Adds a channel step filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the ChannelStepFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "TintFilter": {
            "name": "TintFilter",
            "shortname": "TintFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1501,
            "description": "# TintFilter\n\n## Instantiation\n\n* scrawl.makeTintFilter()\n\n## Purpose\n\n* Adds a tint filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the TintFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "MatrixFilter": {
            "name": "MatrixFilter",
            "shortname": "MatrixFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1662,
            "description": "# MatrixFilter\n\n## Instantiation\n\n* scrawl.makeMatrixFilter()\n\n## Purpose\n\n* Adds a matrix filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the MatrixFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "PixelateFilter": {
            "name": "PixelateFilter",
            "shortname": "PixelateFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 1953,
            "description": "# PixelateFilter\n\n## Instantiation\n\n* scrawl.makePixelateFilter()\n\n## Purpose\n\n* Adds a pixelate filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the PixelateFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "BlurFilter": {
            "name": "BlurFilter",
            "shortname": "BlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 2118,
            "description": "# BlurFilter\n\n## Instantiation\n\n* scrawl.makeBlurFilter()\n\n## Purpose\n\n* Adds a blur filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the BlurFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "LeachFilter": {
            "name": "LeachFilter",
            "shortname": "LeachFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 2386,
            "description": "# LeachFilter\n\n## Instantiation\n\n* scrawl.makeLeachFilter()\n\n## Purpose\n\n* Adds a leach filter effect to an Entity or cell. Leaching turns certain color ranges to transparency\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the LeachFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "SeparateFilter": {
            "name": "SeparateFilter",
            "shortname": "SeparateFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 2503,
            "description": "# SeparateFilter\n\n## Instantiation\n\n* scrawl.makeSeparateFilter()\n\n## Purpose\n\n* Separate colours to show primary or secondary colour channels only\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the SeparateFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "NoiseFilter": {
            "name": "NoiseFilter",
            "shortname": "NoiseFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 2617,
            "description": "# NoiseFilter\n\n## Instantiation\n\n* scrawl.makeNoiseFilter()\n\n## Purpose\n\n* Adds a noise filter effect to an Entity or cell\n\n## Access\n\n* scrawl.filter.FILTERNAME - for the NoiseFilter object",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Frame": {
            "name": "window.scrawl_Frame",
            "shortname": "window.scrawl_Frame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlFrame.js",
            "line": 44,
            "description": "# window.scrawl\n\nscrawlFrame module adaptions to the Scrawl library object"
        },
        "FramePoint": {
            "name": "FramePoint",
            "shortname": "FramePoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlFrame.js",
            "line": 88,
            "description": "# FramePoint\n\n## Instantiation\n\n* scrawl.makeFramePoint()\n\n## Purpose\n\n* Defines the corner points for a Frame entity\n\n## Access\n\n* none - like Vectors, only stored locally",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Frame": {
            "name": "Frame",
            "shortname": "Frame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlFrame.js",
            "line": 452,
            "description": "# Frame\n\n## Instantiation\n\n* scrawl.makeFrame()\n\n## Purpose\n\n* Defines a Frame entity\n\n## Access\n\n* scrawl.entity.FRAMENAME - for the Frame entity object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Images": {
            "name": "window.scrawl_Images",
            "shortname": "window.scrawl_Images",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 41,
            "description": "# window.scrawl\n\nscrawlImages module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.image - for ScrawlImage objects\n* scrawl.img - linking to copies of DOM &lt;img&gt; elements - links to the original elements are stored in scrawl.object\n* scrawl.anim - for AnimSheet objects"
        },
        "Image": {
            "name": "Image",
            "shortname": "Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlImageLoad.js",
            "line": 252,
            "description": "# Image\n\n## Instantiation\n\n* scrawl.getImagesByClass()\n\n## Purpose\n\n* Wraps DOM &lt;img&gt; elements imported into the scrawl-canvas library\n* Used by __Picture__ entitys and __Pattern__ designs\n\n## Access\n\n* scrawl.image.IMAGENAME - for the Image object\n* scrawl.asset.IMAGENAME - for a link to the original &lt;img&gt; element",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "SpriteAnimation": {
            "name": "SpriteAnimation",
            "shortname": "SpriteAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlImageLoad.js",
            "line": 620,
            "description": "# SpriteAnimation\n\n## Instantiation\n\n* scrawl.makeSpriteAnimation()\n\n## Purpose\n\n* wraps a entity sheet image\n* acts as the link between a Picture object and the entity images on the entity sheet\n* holds data about cells in the entitysheet animation\n* controls the animation playback\n\n## Access\n\n* scrawl.spriteanimation.SPRITEANIMATIONNAME\n* scrawl.spriteanimation.[scrawl.entity.PICTURENAME.spriteAnimation]\n\nSpriteAnimation attributes can also be set and retrieved directly using Picture.get() and Picture.set() functions, where a Picture entity is associated with the SpriteAnimation object via its .animSheet attribute",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Video": {
            "name": "Video",
            "shortname": "Video",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFrame",
            "namespace": "",
            "file": "source\\scrawlImageLoad.js",
            "line": 851,
            "description": "# Video\n\n## Instantiation\n\n* scrawl.getVideoById()\n* scrawl.makeVideo()\n\n## Purpose\n\n* Wraps DOM &lt;video&gt; elements imported into the scrawl-canvas library\n* Used by __Picture__ entitys and __Pattern__ designs\n\n## Access\n\n* scrawl.video.VIDEONAME - for the Video object\n* scrawl.asset.IMAGENAME - for a link to the original &lt;video&gt; element",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Pattern": {
            "name": "Pattern",
            "shortname": "Pattern",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 341,
            "description": "# Pattern\n\n## Instantiation\n\n* scrawl.makePattern()\n\n## Purpose\n\n* Defines a pattern\n* Used with entity.strokeStyle and entity.fillStyle attributes\n\nNote that a pattern image will always start at the entity's rotation/reflection (start vector) position, extending in all directions. To move a entity over a 'static' (cell-bound) pattern, more inventive solutions need to be found - for instance a combination of Picture entitys, dedicated cells and the 'source-in' globalCompositeOperation attribute.\n\nPatterns are not restricted to images. A pattern can also be sourced from another cell (canvas element) or even a video element.\n\n## Access\n\n* scrawl.design.PATTERNNAME - for the Pattern design object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Picture": {
            "name": "Picture",
            "shortname": "Picture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 541,
            "description": "# Picture\n\n## Instantiation\n\n* scrawl.makePicture()\n\n## Purpose\n\n* Defines rectangular image-based objects for displaying on a Cell's canvas\n* Used to display both static and entity sheet image animations\n* Links to details of an image's data; can use image data (rgba data) during collision detection\n* Can handle video input (experimental)\n* Performs 'rect' and 'drawImage' drawing operations on canvases\n\n## Access\n\n* scrawl.entity.PICTURENAME - for the Picture entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "uses": [
                "AnimSheet"
            ],
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Path": {
            "name": "window.scrawl_Path",
            "shortname": "window.scrawl_Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 74,
            "description": "# window.scrawl\n\nscrawlPath module adaptions to the scrawl-canvas library object\n\n## New library sections\n\n* scrawl.point \n* scrawl.link \n\n## New default attributes\n\n* Position.pathPlace - default: 0\n* Position.pathRoll - default: 0;\n* Position.addPathRoll - default: false;\n* Position.path - default: '';"
        },
        "Path": {
            "name": "Path",
            "shortname": "Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 689,
            "description": "# Path\n\n## Instantiation\n\n* scrawl.makePath() - Irregular, path-based shapes\n\nAdditional factory functions to instantiate Path objects are available in the __pathFactoryFunctions__ module\n\n## Purpose\n\n* Defines a entity composed of lines, quadratic and bezier curves, etc\n* Makes use of, but doesn't contain, Point and Link objects to define the entity\n* Can be used as a path for placing and animating other entitys\n* Point objects can be used as pivots by other entitys\n\n## Access\n\n* scrawl.entity.PATHNAME - for the Path entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 1465,
            "description": "# Point\n\n## Instantiation\n\n* Objects created via Path factories\n* scrawl.makeCartesianPoints() - deprecated\n* scrawl.makePolarPoints() - deprecated\n\n## Purpose\n\n* Defines a movable point within a Path entity object\n* Acts as a coordinate vector for Link drawing\n\nPath creation factories will all create Point objects automatically as part of the generation process. Point objects will be named regularly, depending on the factory:\n\n* scrawl.makeLine(): SPRITENAME_p1 (start point), SPRITENAME_p2 (end point)\n* scrawl.makeQuadratic(): SPRITENAME_p1 (start point), SPRITENAME_p2 (control point), SPRITENAME_p3 (end point)\n* scrawl.makeBezier(): SPRITENAME_p1 (start point), SPRITENAME_p2 (first control point), SPRITENAME_p3 (second control point), SPRITENAME_p4 (end point)\n* scrawl.makeRegularShape(): each angle point is numbered consecutively, starting at SPRITENAME_p1\n* scrawl.makePath(): points are numbered consecutively, beginning from SPRITENAME_p1 at the start of the path; the end point of a line, quadratic curve or bezier curve will also act as the start point for the next line or curve\n\n## Access\n\n* scrawl.point.POINTNAME - for the Point object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Link": {
            "name": "Link",
            "shortname": "Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 1832,
            "description": "# Link\n\n## Instantiation\n\n* Objects created via Path factories\n\n## Purpose\n\n* Defines the type of line to be drawn between two Point objects\n* Can be of the form (species): line, bezier, quadratic\n* Posesses actions: 'add', 'move' (to not draw a line), 'close' (end Point is Path object's startPoint), 'end' (for non-closed Path objects)\n* Makes use of additional control points to determine curves\n\n## Access\n\n* scrawl.link.LINKNAME - for the Link object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "window.scrawl_Factories": {
            "name": "window.scrawl_Factories",
            "shortname": "window.scrawl_Factories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPathFactories",
            "namespace": "",
            "file": "source\\scrawlPathFactories.js",
            "line": 37,
            "description": "# window.scrawl\n\nscrawlPathFactories extension adaptions to the scrawl-canvas library object"
        },
        "window.scrawl_Phrase": {
            "name": "window.scrawl_Phrase",
            "shortname": "window.scrawl_Phrase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 41,
            "description": "# window.scrawl\n\nscrawlPhrase extension adaptions to the scrawl-canvas library object\n\n## New library sections\n\n* scrawl.text"
        },
        "Phrase": {
            "name": "Phrase",
            "shortname": "Phrase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 82,
            "description": "# Phrase\n\n## Instantiation\n\n* scrawl.makePhrase()\n\n## Purpose\n\n* Defines text objects for displaying on a Cell's canvas\n* Handles all related font functionality\n* Performs text drawing operations on canvases\n\n## Access\n\n* scrawl.entity.PHRASENAME - for the Phrase entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Text": {
            "name": "Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 906,
            "description": "# Text\n\n## Instantiation\n\n* This object should never be instantiated by users\n* Objects created via Phrase object\n\n## Purpose\n\n* Display single lines of text within a Phrase, or along a Shape path\n* Each time the Phrase object text changes, the associated Text objects are destroyed and regenerated from scratch",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "window.scrawl_Physics": {
            "name": "window.scrawl_Physics",
            "shortname": "window.scrawl_Physics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 40,
            "description": "# window.scrawl\n\nscrawlPhysics extension adaptions to the scrawl-canvas library object\n\n## New library sections\n\n* scrawl.force - for Force objects\n* scrawl.spring - for Spring objects\n* scrawl.physics - an area for storing physics constants and variables that affect multiple particles\n\nParticle objects are treated like entitys, and stored in the scrawl.entity section of the library"
        },
        "Particle": {
            "name": "Particle",
            "shortname": "Particle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 220,
            "description": "# Particle\n\n## Instantiation\n\n* scrawl.makeParticle()\n\n## Purpose\n\n* Defines Particle object, for physics simulations\n\n## Access\n\n* scrawl.entity.PARTICLENAME - for the Animation object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Spring": {
            "name": "Spring",
            "shortname": "Spring",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 808,
            "description": "# Spring\n\n## Instantiation\n\n* scrawl.makeSpring()\n* Particle.addSpring()\n\n## Purpose\n\n* Defines a Spring object connecting two Particle objects\n\n## Access\n\n* scrawl.spring.SPRINGNAME - for the Spring object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Force": {
            "name": "Force",
            "shortname": "Force",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 973,
            "description": "# Force\n\n## Instantiation\n\n* scrawl.makeForce()\n\n## Purpose\n\n* Defines a Force function that can calculate forces on Particle objects\n\nTwo forces are pre-defined by scrawl-canvas:\n\n* __scrawl.force.gravity__ - calculates the gravitational force acting on a Particle, as determined by the _scrawl.physics.gravity_ value and the Particle's _mass_\n* __scrawl.force.drag__ - calculates the air drag force acting on a Particle, as determined by the scrawl.physics.airDensity value, and the Particle's _area_ and _drag_ attribute values",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlQuaternion.js",
            "line": 58,
            "description": "# Quaternion\n\n## Instantiation\n\n* scrawl.makeQuaternion()\n\n## Purpose\n\n* To hold quaternion (3d rotation) data",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_SaveLoad": {
            "name": "window.scrawl_SaveLoad",
            "shortname": "window.scrawl_SaveLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlSaveLoad",
            "namespace": "",
            "file": "source\\scrawlSaveLoad.js",
            "line": 39,
            "description": "# window.scrawl\n\nscrawlSaveLoad extension adaptions to the scrawl-canvas library object"
        },
        "window.scrawl_Shape": {
            "name": "window.scrawl_Shape",
            "shortname": "window.scrawl_Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlShape",
            "namespace": "",
            "file": "source\\scrawlShape.js",
            "line": 40,
            "description": "# window.scrawl\n\nscrawlShape extension adaptions to the scrawl-canvas library object"
        },
        "Shape": {
            "name": "Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlShape",
            "namespace": "",
            "file": "source\\scrawlShape.js",
            "line": 73,
            "description": "# Shape\n\n## Instantiation\n\n* scrawl.makeShape() - Irregular, path-based shapes\n\nAdditional factory functions to instantiate Shape objects are available in the __pathFactoryFunctions__ module\n\n## Purpose\n\n* Defines a entity composed of lines, quadratic and bezier curves, etc\n* See also Path object, which achieves a similar thing in a different way\n\n## Access\n\n* scrawl.entity.SHAPENAME - for the Shape entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Stacks": {
            "name": "window.scrawl_Stacks",
            "shortname": "window.scrawl_Stacks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 42,
            "description": "# window.scrawl\n\nscrawlStacks extension adaptions to the scrawl-canvas library object\n\n## New library sections\n\n* scrawl.stack - for Stack objects\n* scrawl.stk - for handles to DOM stack containers\n* scrawl.element - for Element objects\n* scrawl.elm - for handles to DOM elements within a stack\n\n## New default attributes\n\n* PageElement.start - default: {x:0,y:0,z:0};\n* PageElement.delta - default: {x:0,y:0,z:0};\n* PageElement.translate - default: {x:0,y:0,z:0};\n* PageElement.handle - default: {x:'center',y:'center',z:0};\n* PageElement.pivot - default: '';\n* PageElement.stack - default: '';\n* PageElement.path - default: '';\n* PageElement.pathPlace - default: 0;\n* PageElement.deltaPathPlace - default: 0;\n* PageElement.pathSpeedConstant - default: true;\n* PageElement.pathRoll - default: 0;\n* PageElement.addPathRoll - default: false;\n* PageElement.lockX - default: false;\n* PageElement.lockY - default: false;\n* PageElement.rotation - default: {n:1,v:{x:0,y:0,z:0}};\n* PageElement.deltaRotation - default: {n:1,v:{x:0,y:0,z:0}};\n* PageElement.rotationTolerance - default: 0.001;\n* PageElement.visibility - default: true;\n* Device.transform - default: false;"
        },
        "Stack": {
            "name": "Stack",
            "shortname": "Stack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 2594,
            "description": "# Stack\n\n## Instantiation\n\n* scrawl.addStackToPage()\n\n## Purpose\n\n* add/manipulate perspective data to a DOM element\n\n## Access\n\n* scrawl.stack.STACKNAME - for the Stack object\n* scrawl.stk.STACKNAME - for a handle to the DOM stack element",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Element": {
            "name": "Element",
            "shortname": "Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 3095,
            "description": "# Element\n\n## Instantiation\n\n* Stack.addElementById()\n* Stack.addElementsByClassNames()\n\n## Purpose\n\n* provide a wrapper object for a DOM element\n\n## Access\n\n* scrawl.element.ELEMENTNAME - for the Element object\n* scrawl.elm.ELEMENTNAME - for a handle to the DOM element",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "ElementGroup": {
            "name": "ElementGroup",
            "shortname": "ElementGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 3181,
            "description": "# ElementGroup\n\n## Instantiation\n\n* scrawl.makeElementGroup()\n\n## Purpose\n\n* associates DOM elements with a Stack object, for rendering the stack scene\n* groups DOM elements for specific purposes\n\n## Access\n\n* scrawl.group.GROUPNAME - for the ElementGroup object\n* scrawl.stack[scrawl.group.ELEMENTGROUPNAME.stack] - for the ElementGroup object's default Stack object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Wheel": {
            "name": "window.scrawl_Wheel",
            "shortname": "window.scrawl_Wheel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlWheel",
            "namespace": "",
            "file": "source\\scrawlWheel.js",
            "line": 38,
            "description": "# window.scrawl\n\nscrawlWheel extension adaptions to the scrawl-canvas library object"
        },
        "Wheel": {
            "name": "Wheel",
            "shortname": "Wheel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlWheel",
            "namespace": "",
            "file": "source\\scrawlWheel.js",
            "line": 81,
            "description": "# Wheel\n\n## Instantiation\n\n* scrawl.makeWheel()\n\n## Purpose\n\n* Defines 'arc' objects for displaying on a Cell's canvas\n* Performs 'arc' based drawing operations on canvases\n\n## Access\n\n* scrawl.entity.WHEELNAME - for the Wheel entity object",
            "is_constructor": 1,
            "extends": "Entity",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "source\\scrawlAnimation.js",
            "line": 112,
            "description": "Convert a time into its component properties\n\nExpected values:\n* Number - time value in milliseconds\n* String number+% - will always return a Number time value of 0\n* String number+ms - returns a Number time value in milliseconds\n* String number+s - converts and returns a Number time value in milliseconds",
            "itemtype": "method",
            "name": "convertTime",
            "return": {
                "description": "[String timeUnit, Number timeValue]"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 148,
            "description": "A __utility__ function that adds two numbers between 0 and 1, keeping them within bounds",
            "itemtype": "method",
            "name": "addWithinBounds",
            "params": [
                {
                    "name": "a",
                    "description": "first number",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "second number",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "result of calculation"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 166,
            "description": "Position constructor hook function\n\nAdds a __delta__ (deltaX, deltaY) Vector to the object, used to give an object a 'velocity'",
            "itemtype": "method",
            "name": "animationPositionInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 187,
            "description": "Position.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionGet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 207,
            "description": "Position.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionSet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 217,
            "description": "Augments Position.set(), to allow users to set the delta attributes using delta, deltaX, deltaY\n\nThe scrawlAnimation module adds a __delta__ attribute to Cells and Entitys - this is an inbuilt delta vector which can be used to automatically animate the start vector of these objects - via the updateStart, revertStart and reverse functions - as part of the animation cycle.\n\nBe aware that this is different to the Position.setDelta() function inherited by Cells and Entitys. setDelta is used to add a supplied argument value to the existing values of any numerical attribute of a Cell or Entity object, and is thus not limited to the animation cycle.",
            "itemtype": "method",
            "name": "setDeltaAttribute",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 242,
            "description": "Position.clone hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionClone",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 256,
            "description": "Adds delta values to the start vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x\n* 'y' - delta.y added to start.y\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Position.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 278,
            "description": "updateStart helper object",
            "itemtype": "method",
            "name": "Position.updateStartActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 306,
            "description": "Subtracts delta values from the start vector; subtracts deltaPathPlace from pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x\n* 'y' - delta.y subtracted from start.y\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Position.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 328,
            "description": "revertStart helper object",
            "itemtype": "method",
            "name": "Position.revertStartActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 356,
            "description": "Swaps the values of an attribute between two objects",
            "itemtype": "method",
            "name": "Position.exchange",
            "params": [
                {
                    "name": "obj",
                    "description": "Object with which this object will swap attribute values",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Attribute to be swapped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 373,
            "description": "Changes the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "Position.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 385,
            "description": "reverse helper object",
            "itemtype": "method",
            "name": "Position.reverseActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 418,
            "description": "Cell constructor hook function\n\nAdds a __sourceDelta__ (sourceDeltaX, sourceDeltaY) Vector to the cell, used to give it a 'velocity'",
            "itemtype": "method",
            "name": "animationCellInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 434,
            "description": "Cell.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellGet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 451,
            "description": "Cell.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellSet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 465,
            "description": "Adds delta values to the start vector; adds sourceDelta values to the source vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x; deltaSource.x added to source.x\n* 'y' - delta.y added to start.y; deltaSource.y added to source.y\n* 'start', 'target' - delta added to start\n* 'source' - deltaSource added to source\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Cell.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 486,
            "description": "updateStart helper object",
            "itemtype": "method",
            "name": "Cell.updateStartActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 554,
            "description": "Subtracts delta values from the start vector; subtracts sourceDelta values from the source vector; subtracts deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x; deltaSource.x subtracted from source.x\n* 'y' - delta.y subtracted from start.y; deltaSource.y subtracted from source.y\n* 'start', 'target' - delta subtracted from start\n* 'source' - deltaSource subtracted from source\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Cell.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 575,
            "description": "revertStart helper object",
            "itemtype": "method",
            "name": "Cell.revertStartActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 642,
            "description": "Zooms one cell in relation to another cell",
            "itemtype": "method",
            "name": "Cell.zoom",
            "params": [
                {
                    "name": "item",
                    "description": "Number of pixels to amend the zoomed cell's start and dimensions by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 708,
            "description": "Perform a splice-shift-join operation on the &lt;canvas&gt; element's current scene\n\nArgument is an Object in the form:\n\n* {edge:String, strip:Number}\n\nPermitted values for the argument Object's attributes are:\n\n* __edge__ - one from 'horizontal', 'vertical', 'top', 'bottom', 'left', 'right'\n* __strip__ - a width/height Number (in pixels) of the strip that is to be moved from the named edge of the &lt;canvas&gt; to the opposite edge\n* __shiftSource__ - boolean - when true, will automatically shift the sourceX and sourceY coordinates; default: false\n\n_Note that this function is only effective in achieving a parallax effect if the user never clears or updates the cell's &lt;canvas&gt; element, and takes steps to shift the cell's source vector appropriately each time the splice operation is performed_",
            "itemtype": "method",
            "name": "Cell.spliceCell",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing data for the splice operation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 804,
            "description": "Ask all entitys in the Group to perform an updateStart() operation\n\nEach entity will add their delta values to their start Vector, and/or add deltaPathPlace from pathPlace",
            "itemtype": "method",
            "name": "Group.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 821,
            "description": "Ask all entitys in the Group to perform a revertStart() operation\n\nEach entity will subtract their delta values to their start Vector, and/or subtract deltaPathPlace from pathPlace",
            "itemtype": "method",
            "name": "Group.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 838,
            "description": "Ask all entitys in the group to perform a reverse() operation\n\nEach entity will change the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "Group.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 855,
            "description": "A value for shifting the color stops (was __roll__ in versions prior to v4.0)",
            "itemtype": "property",
            "name": "shift",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 862,
            "description": "A flag to indicate that stop color shifts should be automatically applied",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 874,
            "description": "Creates the gradient\n\n_This function replaces the one in the core module_",
            "itemtype": "method",
            "name": "Design.update",
            "params": [
                {
                    "name": "entity",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 890,
            "description": "Gradient builder helper function - sorts color attribute Objects by their stop attribute values, after adding the roll value to them",
            "itemtype": "method",
            "name": "Design.sortStops",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 920,
            "description": "A __factory__ function to generate new Ticker objects",
            "itemtype": "method",
            "name": "makeTicker",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Ticker object"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 929,
            "description": "Alias for makeTween()",
            "itemtype": "method",
            "name": "newTween",
            "deprecated": true,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 937,
            "description": "A __factory__ function to generate new Tween objects",
            "itemtype": "method",
            "name": "makeTween",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Tween object"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 946,
            "description": "Alias for makeAction()",
            "itemtype": "method",
            "name": "newAction",
            "deprecated": true,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 954,
            "description": "A __factory__ function to generate new Action objects",
            "itemtype": "method",
            "name": "makeAction",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Action object"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 963,
            "description": "Locate a target object",
            "itemtype": "method",
            "name": "locateTarget",
            "params": [
                {
                    "name": "OBJECTNAME",
                    "description": "string of required target",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "target Object; false if not found"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1041,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Ticker'",
            "final": 1,
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1050,
            "description": "Animation order\n\nObjects in the animation loop are sorted by their order values, and run as part of the animation loop from lowest to highest order value. There is no guarantee in which order objects with the same order value will run during each animation loop",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1059,
            "description": "Ticker length, in milliseconds\n\nIf no duration is set, Ticker will set the last subscribed object's end time as its effective duration",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "0",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1068,
            "description": "Array of String names of tween and action subscribers to this Ticker",
            "itemtype": "property",
            "name": "subscribers",
            "type": "Array",
            "default": "[]",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1076,
            "description": "When set to true, Ticker will delete itself and any associated tweens from the scrawl library",
            "itemtype": "property",
            "name": "killOnComplete",
            "type": "Boolean",
            "default": "false",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1084,
            "description": "Number of times to cycle the ticker:\n\n* 0 - the ticker will repeat until stopped\n* > 0 - the ticker will repeat the given number of cycles, then stop\n\nDefault action is to run the ticker once, then stop it",
            "itemtype": "property",
            "name": "cycles",
            "type": "Number",
            "default": "1",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1097,
            "description": "Event choke value\n\nA ticker will trigger a __timeupdate__ event on the document object as it runs, with details of the ticker's current state including:\n\n* __name__\n* __tick__ (milliseconds)\n\nIf the eventChoke attribute is set to 0 (default), no tickerupdate events are fired as the ticker runs - thus this value needs to be set explicitly to make the Ticker emit events. Otherwise, this value represents the time between each event emission",
            "itemtype": "property",
            "name": "eventChoke",
            "type": "Number",
            "default": "0",
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1114,
            "description": "Make a new tickerupdate customEvent object",
            "itemtype": "method",
            "name": "makeTickerUpdateEvent",
            "return": {
                "description": "customEvent object, or null if browser does not support custom events"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1143,
            "description": "Add a Tween or Action's name to the Ticker's .subscribers array",
            "itemtype": "method",
            "name": "subscribe",
            "params": [
                {
                    "name": "items",
                    "description": "Array containing String name values, or Objects with a .name attribute; alternatively can be a single String or Object",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1175,
            "description": "Remove a Tween or Action's name from the Ticker's .subscribers array",
            "itemtype": "method",
            "name": "unsubscribe",
            "params": [
                {
                    "name": "items",
                    "description": "Array containing String name values, or Tween/Action Objects with a .name attribute; alternatively can be a single String or Object",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1207,
            "description": "Recalculate the ticker's effective duration",
            "itemtype": "method",
            "name": "recalculateEffectiveDuration",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1233,
            "description": "Set the ticker's effective duration from this.duration",
            "itemtype": "method",
            "name": "setEffectiveDuration",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1256,
            "description": "Order subscriber tweens by their time attributes, lowest to highest",
            "itemtype": "method",
            "name": "sortSubscribers",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1267,
            "description": "Set attributes - restricted so that only subscribers, order, duration and cycles attributes can be amended",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing key:value parameters for updating",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1314,
            "description": "Animation function",
            "itemtype": "method",
            "name": "fn",
            "chainable": 1,
            "params": [
                {
                    "name": "reverseOrder",
                    "description": "when true, perform update from last subscriber to first; default false",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1398,
            "description": "Change the supplied attributes for each subscribed tween and action",
            "itemtype": "method",
            "name": "updateSubscribers",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing key:value parameters for updating",
                    "type": "Object"
                },
                {
                    "name": "reversed",
                    "description": "when true, perform update from last subscriber to first; default false",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1418,
            "description": "Bulk-change the playing direction for all subscribed tweens and actions",
            "itemtype": "method",
            "name": "changeSubscriberDirection",
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1434,
            "description": "Start ticker from 0",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1454,
            "description": "Reset ticker to initial conditions",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1474,
            "description": "Reset ticker to final conditions",
            "itemtype": "method",
            "name": "complete",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1494,
            "description": "Reverse tracker direction and continue playing",
            "itemtype": "method",
            "name": "reverse",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1513,
            "description": "Halt ticker",
            "itemtype": "method",
            "name": "halt",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1525,
            "description": "Resume ticker",
            "itemtype": "method",
            "name": "resume",
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1545,
            "description": "seekTo a different specific point on the ticker",
            "itemtype": "method",
            "name": "seekTo",
            "params": [
                {
                    "name": "seekto",
                    "description": "time in milliseconds from start of ticker; default 0 - effectively sets ticker back to starting conditions",
                    "type": "Number"
                },
                {
                    "name": "resume",
                    "description": "- flag - when true, the resume() function will trigger; false (default) triggers a single call to the fn() function",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1577,
            "description": "seekFor a different relative point on the ticker",
            "itemtype": "method",
            "name": "seekFor",
            "params": [
                {
                    "name": "seekfor",
                    "description": "time in milliseconds from current tick; default 0 - no change",
                    "type": "Number"
                },
                {
                    "name": "resume",
                    "description": "- flag - when true, the resume() function will trigger; false (default) triggers a single call to the fn() function",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1608,
            "description": "Remove this Ticker from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1623,
            "description": "Remove this Ticker from the scrawl library (if argument is true), alongside any tweens associated with it",
            "itemtype": "method",
            "name": "killTweens",
            "return": {
                "description": "true if argument is true; this otherwise (default)"
            },
            "class": "Ticker",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1704,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Action'",
            "final": 1,
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1713,
            "description": "Ticker name\nIf an Action object is associated with a ticker, it will fire (or revert) at the appropriate point in the course of the ticker's run.",
            "itemtype": "property",
            "name": "ticker",
            "type": "String",
            "default": "''",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1721,
            "description": "Array of Objects on which this Action will perform its action and revert functions; if the array includes Strings, the constructor, set and clone functions will search for the Objects in the Scrawl library, checking sections (if they currently exist) in the following order: \n\n* entity, cell, pad, stack, element, point, group, design, animation, tween, anim, filter, image, force, spring, physics\n\nThis attribute can also accept a single Object or String as its value in the",
            "itemtype": "property",
            "name": "targets",
            "type": "Array",
            "default": "[]",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1733,
            "description": "Action function",
            "itemtype": "property",
            "name": "action",
            "type": "Function",
            "default": "function(){}",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1740,
            "description": "Revert function - should reverse the actions of the .action function",
            "itemtype": "property",
            "name": "revert",
            "type": "Function",
            "default": "function(){}",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1747,
            "description": "Time - point (in milliseconds) following the start of the Action's ticker when the action function will trigger",
            "itemtype": "property",
            "name": "time",
            "type": "Number",
            "default": "0",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1754,
            "description": "Reversable flag - when true, the action will alternate the tick and reverseTick values as the ticker cycles",
            "itemtype": "property",
            "name": "reverseOnCycleEnd",
            "type": "Boolean",
            "default": "false",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1761,
            "description": "Reversed - when true, the action is using reverseTick value",
            "itemtype": "property",
            "name": "reversed",
            "type": "Boolean",
            "default": "false",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1768,
            "description": "Sort order - for Actions that share the same time value on a given Ticker. Without a sort order, there will be no guarantee which actions with the same time value will be performed first",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1777,
            "description": "Get the effective (millisecond number) time when action will trigger",
            "itemtype": "method",
            "name": "calculateEffectiveTime",
            "params": [
                {
                    "name": "item",
                    "description": "new time value; defaults to this.time",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1806,
            "description": "Add action to given ticker\n\nIf action is already subscribed to a different ticker, the function will automatically unsubscribe from that ticker before subscribing to the new ticker",
            "itemtype": "method",
            "name": "addToTicker",
            "params": [
                {
                    "name": "item",
                    "description": "TICKERNAME to which this Action will subscribe",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1831,
            "description": "Remove action from given ticker",
            "itemtype": "method",
            "name": "removeFromTicker",
            "params": [
                {
                    "name": "item",
                    "description": "TICKERNAME to which this Action will unsubscribe",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1850,
            "description": "retrieve the completion time for the action",
            "itemtype": "method",
            "name": "getEndTime",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Number"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1859,
            "description": "Investigate the data supplied by the ticker and, if necessary, invoke the action or revert functions, as appropriate\n\nThe object passed by the ticker has the following attributes:\n\n* tick - milliseconds since ticker started its run\n* reverseTick - milliseconds before ticker reaches the end of its run\n* willLoop - boolean indicating whether ticker is about to restart\n* next - boolean indicating whether this is the ticker's last update",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "items",
                    "description": "Object sent by ticker",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "always true"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1914,
            "description": "Set attributes",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "Object",
                    "description": "containing key:value attributes",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1972,
            "description": "Set targets attribute - assumes that the supplied Array will replace, not amend, any existing targets array",
            "itemtype": "method",
            "name": "setTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2004,
            "description": "Add Objects to targets attribute - assumes that the supplied Array will augment any existing targets array",
            "itemtype": "method",
            "name": "addToTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2030,
            "description": "Remove Objects from targets attribute - will not remove an object with no name and/or type attributes",
            "itemtype": "method",
            "name": "removeFromTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2082,
            "description": "Create a clone of this Action\n\nNote: strongly advise every call to this function includes newly created anonymous functions for the action and revert attributes in the argument object - Scrawl's clone functionality does not clone function attributes!",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "Object",
                    "description": "containing key:value attributes",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "a new copy of the Action object"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2112,
            "description": "Remove this Action from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2125,
            "description": "Update target attributes",
            "itemtype": "method",
            "name": "updateTargets",
            "params": [
                {
                    "name": "items",
                    "description": "- containing key:value attributes to be forwarded to target set() functions",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Action",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2210,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Tween'",
            "final": 1,
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2219,
            "description": "Ticker name\nIf a Tween object is associated with a ticker, it will fire (or revert) at the appropriate point in the course of the ticker's run.",
            "itemtype": "property",
            "name": "ticker",
            "type": "String",
            "default": "''",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2227,
            "description": "Array of Objects on which this Tween will perform its action and revert functions; if the array includes Strings, the constructor, set and clone functions will search for the Objects in the Scrawl library, checking sections (if they currently exist) in the following order: \n\n* entity, cell, pad, stack, element, point, group, design, animation, tween, anim, filter, image, force, spring, physics\n\nThis attribute can also accept a single Object or String as its value in the",
            "itemtype": "property",
            "name": "targets",
            "type": "Array",
            "default": "[]",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2239,
            "description": "Array of Objects which define the actions this tween will take. The Objects must include the following attributes: \n* attribute - (required) a String of the attribute key value\n* start - (required) a Number or String value determining the point on the Ticker at which the tween will activate (eg: 100, '10%', '2px')\n* end - (required) a Number or String value determining the point on the Ticker at which the tween will deactivate (eg: 900, '90%', '50px')\n* engine - (optional) a String value supplying the name of the easing engine to use; default 'linear'\n* integer - (optional) a Boolean: when true, the calculated value will have Math.round() applied before targets are set; default false\n\nThis attribute can also accept a single Object as its value",
            "itemtype": "property",
            "name": "definitions",
            "type": "Array",
            "default": "[]",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2254,
            "description": "Time - point (in milliseconds) following the start of the Tween's ticker when the tween will trigger",
            "itemtype": "property",
            "name": "time",
            "type": "Number",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2261,
            "description": "Function to be called at the end of each tween recalculation - takes no arguments",
            "itemtype": "property",
            "name": "action",
            "type": "Function",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2268,
            "description": "Duration - time required for tween to run",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2275,
            "description": "Reversable flag - when true, the tween will reverse its direction of play as each ticker cycle completes; default false (will go back to beginning and play in the current direction)",
            "itemtype": "property",
            "name": "reverseOnCycleEnd",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2282,
            "description": "Reversed - determines the directin in which the tween will run - true means that reverseTick values will be used for calculations; default false",
            "itemtype": "property",
            "name": "reversed",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2289,
            "description": "Sort order - for Actions that share the same time value on a given Ticker. Without a sort order, there will be no guarantee which actions with the same time value will be performed first",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2298,
            "description": "retrieve the completion time for the action",
            "itemtype": "method",
            "name": "getEndTime",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Number"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2307,
            "description": "Get the effective (millisecond number) time when tween will trigger",
            "itemtype": "method",
            "name": "calculateEffectiveTime",
            "params": [
                {
                    "name": "item",
                    "description": "new time value; defaults to this.time",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2319,
            "description": "Get the effective (millisecond number) duration for the tween",
            "itemtype": "method",
            "name": "calculateEffectiveDuration",
            "params": [
                {
                    "name": "item",
                    "description": "new time value; defaults to this.time",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2348,
            "description": "Add tween to given ticker\n\nIf tween is already subscribed to a different ticker, the function will automatically unsubscribe from that ticker before subscribing to the new ticker",
            "itemtype": "method",
            "name": "addToTicker",
            "params": [
                {
                    "name": "item",
                    "description": "TICKERNAME to which this Tween will subscribe",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2362,
            "description": "Remove action from given ticker",
            "itemtype": "method",
            "name": "removeFromTicker",
            "params": [
                {
                    "name": "item",
                    "description": "TICKERNAME to which this Tween will unsubscribe",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2373,
            "description": "Investigate the data supplied by the ticker and, if necessary, invoke the action or revert functions, as appropriate\n\nThe object passed by the ticker has the following attributes:\n\n* tick - milliseconds since ticker started its run\n* reverseTick - milliseconds before ticker reaches the end of its run\n* willLoop - boolean indicating whether ticker is about to restart\n* next - boolean indicating whether this is the ticker's last update",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "items",
                    "description": "Object sent by ticker",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2443,
            "description": "Perform a simple update",
            "itemtype": "method",
            "name": "doSimpleUpdate",
            "params": [
                {
                    "name": "items",
                    "description": "Object sent by ticker",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2498,
            "description": "update cleanup",
            "itemtype": "method",
            "name": "updateCleanup",
            "params": [
                {
                    "name": "items",
                    "description": "Object sent by ticker",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2513,
            "description": "Tween engine helper object",
            "itemtype": "method",
            "name": "engineActions",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2582,
            "description": "Set attributes",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "Object",
                    "description": "containing key:value attributes",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2619,
            "description": "Calculate the effective values for definitions",
            "itemtype": "method",
            "name": "setDefinitionsValues",
            "params": [
                {
                    "name": "Object",
                    "description": "containing key:value attributes",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2644,
            "description": "setDefinitionsValues helper function",
            "itemtype": "method",
            "name": "parseDefinitionsValue",
            "params": [
                {
                    "name": "value",
                    "description": "to be parsed; can also be a Number",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Array of parsed values in the form ['Suffix', Number]"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2670,
            "description": "Set targets attribute - assumes that the supplied Array will replace, not amend, any existing targets array",
            "itemtype": "method",
            "name": "setTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2682,
            "description": "Add Objects to targets attribute - assumes that the supplied Array will augment any existing targets array",
            "itemtype": "method",
            "name": "addToTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2693,
            "description": "Remove Objects from targets attribute - will not remove an object with no name and/or type attributes",
            "itemtype": "method",
            "name": "removeFromTargets",
            "params": [
                {
                    "name": "items",
                    "description": "Array of Objects and/or Strings, can also be single Object or string",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2704,
            "description": "Create a clone of this Tween\n\nNote: strongly advise every call to this function includes newly created anonymous functions for the action and revert attributes in the argument object - Scrawl's clone functionality does not clone function attributes!",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "Object",
                    "description": "containing key:value attributes",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "a new copy of the Tween object"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2722,
            "description": "Start the tween's ticker from 0",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2735,
            "description": "Halt the tween's ticker",
            "itemtype": "method",
            "name": "halt",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2748,
            "description": "Resume the tween's ticker",
            "itemtype": "method",
            "name": "resume",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2761,
            "description": "seekTo a different specific point on the tween's ticker",
            "itemtype": "method",
            "name": "seekTo",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2774,
            "description": "seekFor a different relative point on the tween's ticker",
            "itemtype": "method",
            "name": "seekFor",
            "return": {
                "description": "this"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 2787,
            "description": "Remove this Tween from the scrawl library (including any self-created ticker associated with the tween)",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 47,
            "description": "Alias for makeBlock()",
            "itemtype": "method",
            "name": "newBlock",
            "deprecated": true,
            "class": "window.scrawl_Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 55,
            "description": "A __factory__ function to generate new Block entitys",
            "itemtype": "method",
            "name": "makeBlock",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Block object"
            },
            "example": [
                "\n\tscrawl.makeBlock({\n\t\twidth: 100,\n\t\theight: 50,\n\t\tstartX: 150,\n\t\tstartY: 60,\n\t\tfillStyle: 'blue',\n\t\tstrokeStyle: 'red',\n\t\troll: 30,\n\t\tmethod: 'sinkInto',\n\t\t});"
            ],
            "class": "window.scrawl_Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 111,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Block'",
            "final": 1,
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 120,
            "description": "Block display - width, in pixels",
            "itemtype": "property",
            "name": "localWidth",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 128,
            "description": "Block display - height, in pixels",
            "itemtype": "property",
            "name": "localHeight",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 138,
            "description": "Augments Entity.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 152,
            "description": "Augments Entity.set()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 166,
            "description": "Augments Entity.set() - sets the local dimensions",
            "itemtype": "method",
            "name": "setLocalDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 188,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 205,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 221,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 248,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 264,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 280,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 298,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 316,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 333,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 350,
            "description": "Stamp helper function - perform a 'none' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 362,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 55,
            "description": "Collision vectors, for use in collision detection calculations\n\n_Note: at some point in the future, this object needs to be moved into the scrawl.work object, for consistency_",
            "itemtype": "property",
            "name": "scrawl.workcols",
            "type": "Object",
            "value": "Object containing three vectors - v1, v2, v3",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 75,
            "description": "A __general__ function which asks Cell objects to generate field collision tables",
            "itemtype": "method",
            "name": "scrawl.buildFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 96,
            "description": "Orders all Cell objects associated with this Pad to (re)create their field collision image maps",
            "itemtype": "method",
            "name": "Pad.buildFields",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 111,
            "description": "Cell constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Cell.collisionsCellInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 136,
            "description": "Builds a collision map image from entitys, for use in entity field collision detection functions",
            "itemtype": "method",
            "name": "Cell.buildField",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 195,
            "description": "Cell field collision detection function\n\nArgument should be in the form of:\n\n* {channel:String, test:Number, coordinates:Array of Vectors, x:Number, y:Number}\n\nWhere:\n\n* __channel__ (optional) can be 'red', 'green', 'blue', 'alpha', or 'anycolor' (default)\n* __test__ (optional) can be a value between 0 and 254 (default: 0)\n* __coordinates__ (optional) is an array of Vector coordinates, in pixels, relative to the Cell's &lt;canvas&gt; element's top left corner\n* __x__ (optional) is the horizontal coordinate, in pixels, relative to the Cell's top left corner\n* __y__ (optional) is the vertical coordinate, in pixels, relative to the Cell's top left corner\n\nEither include a single coordinate (x, y), or an array of coordinate Vectors\n\nTest will return: \n* false if it encounters a coordinate outside the bounds of its image map\n* true if all coordinates exceed the test level (thus a entity testing in the red channel will report true if it is entirely within a red part of the collision map\n* the first coordinate that falls below, or equals, the test level",
            "itemtype": "method",
            "name": "Cell.checkFieldAt",
            "params": [
                {
                    "name": "items",
                    "description": "Argument containing details of how and where to check the cell's collision map image",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector of first the first coordinates to 'pass' the test"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 256,
            "description": "checkFieldAt helper object",
            "itemtype": "method",
            "name": "Cell.checkFieldAtActions (not a function)",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 304,
            "description": "Check all entitys in the Group to see if they are colliding with the supplied entity object. An Array of all entity objects colliding with the reference entity will be returned",
            "itemtype": "method",
            "name": "Group.getEntitysCollidingWith",
            "params": [
                {
                    "name": "entity",
                    "description": "SPRITENAME String of the reference entity; alternatively the entity Object itself can be passed as the argument",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of visible entity Objects currently colliding with the reference entity"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 366,
            "description": "Check all entitys in the Group against each other to see if they are in collision",
            "itemtype": "method",
            "name": "Group.getInGroupEntityHits",
            "return": {
                "description": "Array of [ENTITYNAME, ENTITYNAME] Arrays, one for each pair of entitys currently in collision"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 426,
            "description": "Check all entitys in this Group against all entitys in the argument Group, to see if they are in collision",
            "itemtype": "method",
            "name": "Group.getBetweenGroupEntityHits",
            "params": [
                {
                    "name": "g",
                    "description": "GROUPNAME of Group to be checked against this group; alternatively, the Group object itself can be supplied as the argument",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of [ENTITYNAME, ENTITYNAME] Arrays, one for each pair of entitys currently in collision"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 510,
            "description": "Check all entitys in this Group against a &lt;canvas&gt; element's collision field image\n\nIf no argument is supplied, the Group's default Cell's &lt;canvas&gt; element will be used for the check\n\nAn Array of Arrays is returned, with each constituent array consisting of the the SPRITENAME of the entity that has reported a positive hit, alongside a coordinate Vector of where the collision is occuring",
            "itemtype": "method",
            "name": "Group.getFieldEntityHits",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME of Cell whose &lt;canvas&gt; element is to be used for the check",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of [ENTITYNAME, Vector] Arrays"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 562,
            "description": "Recalculate the current collision point positions for all entitys in the group",
            "itemtype": "method",
            "name": "Group.resetCollisionPoints",
            "return": {
                "description": "this"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 577,
            "description": "Entity constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Entity.collisionsEntityConstructor",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 591,
            "description": "Entity.registerInLibrary hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Entity.collisionsEntityRegisterInLibrary",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 602,
            "description": "Entity.set hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Entity.collisionsEntitySet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 628,
            "description": "Recalculate the entity's current collision point positions\n\nThis will be triggered automatically when changing the following attributes via set ort setDelta:\n\n* for set() - start, startX, startY, handle, handleX, handleY, scale, roll, collisionPoints, width, height, radius, pasteWidth, pasteHeight\n* for setDelta() - start, startX, startY, handle, handleX, handleY, scale, roll, width, height, radius, pasteWidth, pasteHeight",
            "itemtype": "method",
            "name": "Entity.resetCollisionPoints",
            "return": {
                "description": "this"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 644,
            "description": "Entity.setDelta hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Entity.collisionsEntitySetDelta",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 658,
            "description": "Add this entity to a (range of) Cell object field groups",
            "itemtype": "method",
            "name": "Entity.addEntityToCellFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 678,
            "description": "Add this entity to a (range of) Cell object fence groups",
            "itemtype": "method",
            "name": "Entity.addEntityToCellFences",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 698,
            "description": "Remove this entity from a (range of) Cell object field groups",
            "itemtype": "method",
            "name": "Entity.removeEntityFromCellFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 718,
            "description": "Remove this entity from a (range of) Cell object fence groups",
            "itemtype": "method",
            "name": "Entity.removeEntityFromCellFences",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 738,
            "description": "Check this entity's collision Vectors against a Cell object's collision field image to see if any of them are colliding with the Cell's field entitys",
            "itemtype": "method",
            "name": "Entity.checkField",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String of the Cell to be checked against",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "First Vector coordinate to 'pass' the Cell.checkFieldAt() function's test; true if none pass; false if the test parameters are out of bounds"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 756,
            "description": "Calculate the current positions of this entity's collision Vectors, taking into account the entity's current position, roll and scale",
            "itemtype": "method",
            "name": "Entity.getCollisionPoints",
            "return": {
                "description": "Array of coordinate Vectors"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 795,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the entity's collision points",
            "itemtype": "method",
            "name": "Entity.buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 885,
            "description": "Collision detection helper function\n\nParses user input for the collisionPoint attribute",
            "itemtype": "method",
            "name": "Entity.parseCollisionPoints",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 45,
            "description": "Alias for makeColor()",
            "itemtype": "method",
            "name": "newColor",
            "deprecated": true,
            "class": "window.scrawl_Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 53,
            "description": "A __factory__ function to generate new Color objects",
            "itemtype": "method",
            "name": "makeColor",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Color object"
            },
            "class": "window.scrawl_Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 100,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Color'",
            "final": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 109,
            "description": "Red channel value: 0 - 255",
            "itemtype": "property",
            "name": "r",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 116,
            "description": "Green channel value: 0 - 255",
            "itemtype": "property",
            "name": "g",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 123,
            "description": "Blue channel value: 0 - 255",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 130,
            "description": "Alpha channel value: 0 - 1",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "default": "1",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 137,
            "description": "Red channel delta value",
            "itemtype": "property",
            "name": "rShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 144,
            "description": "Green channel delta value",
            "itemtype": "property",
            "name": "gShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 151,
            "description": "Blue channel delta value",
            "itemtype": "property",
            "name": "bShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 158,
            "description": "Alpha channel delta value",
            "itemtype": "property",
            "name": "aShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 165,
            "description": "Red channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "rMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 172,
            "description": "Green channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "gMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 179,
            "description": "Blue channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "bMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 186,
            "description": "Alpha channel maximum permitted value: 0 - 1",
            "itemtype": "property",
            "name": "aMax",
            "type": "Number",
            "default": "1",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 193,
            "description": "Red channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "rMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 200,
            "description": "Green channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "gMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 207,
            "description": "Blue channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "bMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 214,
            "description": "Alpha channel minimum permitted value: 0 - 1",
            "itemtype": "property",
            "name": "aMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 221,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "rBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 228,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "gBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 235,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "bBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 242,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "aBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 249,
            "description": "Requires Color object to recalculate its attribute values before each display cycle commences",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 256,
            "description": "Generation flag - if true, Color object will set itself to a random color within minimum and maximum attributes\n\nThis attribute is not retained by the color object, and can only be used in the __scrawl.makeColor()__ and __Color.set()__ functions",
            "itemtype": "property",
            "name": "random",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 266,
            "description": "Augments Base.get()\n\n* If called with no argument, will return the current color String\n* if called with the String argument 'random', will generate a random color (within permitted limits) and return that",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value, or CSS color string"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 287,
            "description": "Augments Base.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned Color object"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 308,
            "description": "Returns current color, or next color value in sequence if .autoUpdate is true",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "CSS color String"
            },
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 321,
            "description": "Generates a random color\n\nArgument can include preset color channel values (0-255, 0-1 for alpha): {r:Number, g:Number, b:Number, a:Number}",
            "itemtype": "method",
            "name": "generateRandomColor",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 350,
            "description": "Checks that color channel values are of the permitted form (integer vs float) and within permitted ranges",
            "itemtype": "method",
            "name": "checkValues",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 368,
            "description": "Augments Base.set()\n\nIn addition to setting any native color object attribute, the .set() function also accepts the following keys:\n\n* __random__ (boolean) - when set to true, a random color (within minimum and maximum bounds) will be generated\n* __color__ (string) - any legitimate CSS color string (including color names as defined in the SVGTiny standard)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 395,
            "description": "Update the current color, taking into account shift and bounce attribute values",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 433,
            "description": "Add values to Number attributes - limited to altering __r__, __g__, __b__ and __a__ attributes",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 451,
            "description": "Convert a CSS color string value into native attribute values. \n\nConverts: '#nnn', '#nnnnnn', 'rgb(n, n, n)', 'rgba(n, n, n, a), color keywords.\n\nDoes not convert hsl() or hsla() strings.\n\nColor keywords harvested from https://developer.mozilla.org/en/docs/Web/CSS/color_value (13 Dec 2015).",
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "items",
                    "description": "CSS color String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 1412,
            "description": "Convert a decimal Number to its hexidecimal String value",
            "itemtype": "method",
            "name": "toHex",
            "params": [
                {
                    "name": "items",
                    "description": "decimal value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Hexidecimal String"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 1421,
            "description": "Convert a hexidecimal String to its decimal Number value",
            "itemtype": "method",
            "name": "toDecimal",
            "params": [
                {
                    "name": "Hexidecimal",
                    "description": "String value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Decimal Number"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 1430,
            "description": "Delete this Color object from the scrawl-canvas library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 107,
            "description": "Scrawl.js version number",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "default": "6.0.0",
            "final": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 115,
            "description": "Array of array object keys used to define the sections of the Scrawl library",
            "itemtype": "property",
            "name": "nameslist",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 123,
            "description": "Array of objects which define the sections of the Scrawl library",
            "itemtype": "property",
            "name": "sectionlist",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 130,
            "description": "For converting between degrees and radians",
            "itemtype": "property",
            "name": "radian",
            "type": "{Number}",
            "default": "Math.PI/180",
            "final": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 138,
            "description": "Flag - Promise API is supported by browser",
            "itemtype": "property",
            "name": "promise",
            "type": "{Boolean}",
            "default": "null",
            "final": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 146,
            "description": "An Object containing OBJECTTYPE:Object pairs which in turn contain default attribute values for each Scrawl object constructor",
            "itemtype": "property",
            "name": "d",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 153,
            "description": "Work vector, for calculations",
            "itemtype": "property",
            "name": "v",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 160,
            "description": "Work vector, for calculations",
            "itemtype": "property",
            "name": "colv1",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 167,
            "description": "Work vector, for calculations",
            "itemtype": "property",
            "name": "colv2",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 174,
            "description": "Default empty object - passed to various functions, to prevent them generating superfluous objects",
            "itemtype": "property",
            "name": "o",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 181,
            "description": "Work quaternions, for calculations",
            "itemtype": "property",
            "name": "workquat",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 188,
            "description": "DOM document fragment",
            "itemtype": "property",
            "name": "f",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 195,
            "description": "Key:value pairs of extension alias:filename Strings, used by scrawl.loadExtensions()",
            "itemtype": "property",
            "name": "loadAlias",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 220,
            "description": "Array of loaded extensions arrays",
            "itemtype": "property",
            "name": "extensions",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 227,
            "description": "Array of loaded extensions arrays (name changed from modules to extensions because Scrawl 'modules' are not modules)",
            "itemtype": "property",
            "name": "modules",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 235,
            "description": "Device object - holds details about the browser environment and viewport",
            "itemtype": "property",
            "name": "device",
            "type": "{Object}",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 241,
            "description": "Key:value pairs of extension alias:Array, used by scrawl.loadExtensions()",
            "itemtype": "property",
            "name": "loadDependencies",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 266,
            "description": "A __general__ function that initializes (or resets) the Scrawl library and populates it with data, including existing &lt;canvas&gt; element data in the web page",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.init();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 287,
            "description": "scrawl.init hook function - modified by stacks extension",
            "itemtype": "method",
            "name": "pageInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 297,
            "description": "scrawl.init hook function - modified by physics extension",
            "itemtype": "method",
            "name": "physicsInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 303,
            "description": "scrawl.init hook function - modified by filters extension",
            "itemtype": "method",
            "name": "filtersInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 309,
            "description": "scrawl.init hook function - modified by stacks extension",
            "itemtype": "method",
            "name": "pageInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 333,
            "description": "A __general__ function that resets the Scrawl library to empty arrays and objects",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.reset();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 350,
            "description": "A __general__ function for loading img, css and js files\n\nCopied and pasted (a terrible example - don't do this!) from https://davidwalsh.name/javascript-loader\n\nAll assets are added to the body tag in the DOM\n\nThis function auto-runs when scrawl.core loads",
            "itemtype": "method",
            "name": "simpleLoader",
            "return": {
                "description": "Javascript object containing .css(), .js() and .img() load functions"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 397,
            "description": "A __general__ function that checks to see if the Promise API is supported by the browser",
            "itemtype": "method",
            "name": "checkForPromise",
            "return": {
                "description": "true if Promise is supported natively; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 416,
            "description": "A __general__ function that loads supporting extensions and integrates them into the core\n\nExtension names are supplied as an array of Strings, each of which should be an _alias_ string, as follows:\n\nScrawl currently supports the following extensions:\n* __scrawlAnimation.js__ - alias __animation__ - adds animation and tween functionality to the core\n* __scrawlBlock.js__ - alias __block__ - adds _Block_ (square and rectangle) entitys to the core\n* __scrawlCollisions.js__ - alias __collisions__ - adds entity collision detection functionality to the core\n* __scrawlColor.js__ - alias __color__ - adds the _Color_ Design object to the core\n* __scrawlFilters.js__ - alias __filters__ - adds image filter functionality to the core\n* __scrawlFrame.js__ - alias __frame__ - enhanced Picture entity\n* __scrawlImages.js__ - alias __images__ - adds all image functionality, including static and animated _Picture_ entitys and the _Pattern_ Design object, to the core\n* __scrawlPath.js__ - alias __path__ - adds _Path_ (SVGTiny path data) entitys to the core\n* __scrawlPathFactories.js__ - alias __factories__ - adds user-friendly Path and Shape factory functions (for lines, quadratic and bezier curves, ellipses, round-corner rectangles, regular shapes such as stars, triangles, etc) to the core\n* __scrawlPhrase.js__ - alias __phrase__ - adds _Phrase_ (single and multiline text) entitys to the core\n* __scrawlPerspective.js__ - alias __perspective__ - adds _Perspective_ functionality to the core (experimental)\n* __scrawlPhysics.js__ - alias __physics__ - adds a physics engine to the core (experimental)\n* __scrawlSaveLoad.js__ - alias __saveload__ - adds JSON object save and load functionality to the core (experimental)\n* __scrawlShape.js__ - alias __shape__ - adds _Shape_ (path-like shapes) entitys to the core\n* __scrawlStacks.js__ - alias __stacks__ - adds the ability to position, manipulate and animate &lt;canvas&gt; and other DOM elements in a 3d space on the web page\n* __scrawlWheel.js__ - alias __wheel__ - adds _Wheel_ (circle and segment) entitys to the core\n* __scrawlImageLoad.js__ - alias __imageload__ - adds the ability to load img elements into the library\n* __scrawlQuaternion.js__ - alias __quaternion__ - adds quaternion maths functionality to the core\n\nWhere permitted, Scrawl will load extensions asynchronously. Extensions have no external dependencies beyond their need for the core module, and can be loaded in any order.\n\nAny supplied callback function will only be run once all extensions have been loaded.\n\nThe argument object can include the following attributes:\n\n* __path__ - String path-to-directory/folder where scrawl extension files are kept (default: '')\n* __minified__ - Boolean - if true (default) minified extensions will be loaded; false for source extensions\n* __extensions__ - an Array of extension alias Strings\n* __callback__ - Function to run once all extension files have been loaded (defaults to an empty function)\n* __error__ - Function to run if one or more extension files fails to load (defaults to an empty function)",
            "example": [
                "\n    <!DOCTYPE html>\n    <html>\n        <head></head>\n        <body>\n            <canvas></canvas>\n            <script src=\"js/scrawlCore-min.js\"></script>\n            <script>\n                var mycode = function(){\n                    scrawl.makeWheel({\n                        startX: 50,\n                        startY: 50,\n                        radius: 40,\n                        });\n                    scrawl.render();\n                    };\n                scrawl.loadExtensions({\n                    path: 'js/',\n                    extensions: ['wheel'],\n                    callback: function(){\n                        window.addEventListener('load', function(){\n                            scrawl.init();\n                            mycode();\n                            }, false);\n                        }\n                    });\n            </script>\n        </body>\n    </html>"
            ],
            "itemtype": "method",
            "name": "loadExtensions",
            "params": [
                {
                    "name": "items",
                    "description": "- JavaScript object containing key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 496,
            "description": "loadExtensions helper function",
            "itemtype": "method",
            "name": "loadExtensionsUsingVanilla",
            "params": [
                {
                    "name": "items",
                    "description": "- JavaScript object containing key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 551,
            "description": "loadExtensions helper function - uses the new Promise api, if it is available",
            "itemtype": "method",
            "name": "loadExtensionsUsingPromise",
            "params": [
                {
                    "name": "items",
                    "description": "- JavaScript object containing key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 578,
            "description": "loadExtensions helper function",
            "itemtype": "method",
            "name": "loadExtensionsConcatenator",
            "params": [
                {
                    "name": "items",
                    "description": "- JavaScript object containing key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Array of extension aliases"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 607,
            "description": "A __general__ function that loads supporting extensions and integrates them into the core\n\n(function name changed from loadModules to loadExtensions because Scrawl 'modules' are not modules)",
            "itemtype": "method",
            "name": "loadModules",
            "params": [
                {
                    "name": "items",
                    "description": "- JavaScript object containing key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 619,
            "description": "A __utility__ function that adds the attributes of the additive object to those of the reference object, where those attributes don't already exist in the reference object",
            "itemtype": "method",
            "name": "mergeInto",
            "params": [
                {
                    "name": "o1",
                    "description": "reference object",
                    "type": "Object"
                },
                {
                    "name": "o2",
                    "description": "additive object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Merged object"
            },
            "example": [
                "\n    var old = {\n            name: 'Peter',\n            age: 42,\n            job: 'lawyer'\n            },\n        new = {\n            age: 32,\n            job: 'coder',\n            pet: 'cat'\n            };\n    scrawl.mergeInto(old, new);\n    //result is {\n    //  name: 'Peter',\n    //  age: 42,\n    //  job: 'lawyer'\n    //  pet: 'cat'\n    //  }"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 652,
            "description": "A __utility__ function that adds the attributes of the additive object to those of the reference object, overwriting attributes where necessary",
            "itemtype": "method",
            "name": "mergeOver",
            "params": [
                {
                    "name": "o1",
                    "description": "reference object",
                    "type": "Object"
                },
                {
                    "name": "o2",
                    "description": "additive object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Merged object"
            },
            "example": [
                "\n    var old = {\n            name: 'Peter',\n            age: 42,\n            job: 'lawyer'\n            },\n        new = {\n            age: 32,\n            job: 'coder',\n            pet: 'cat'\n            };\n    scrawl.mergeOver(old, new);\n    //result is {\n    //  name: 'Peter',\n    //  age: 32,\n    //  job: 'coder'\n    //  pet: 'cat'\n    //  }"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 685,
            "description": "A __utility__ function that checks an array to see if it contains a given value",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "k",
                    "description": "value to be checked",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if value is in array; false otherwise"
            },
            "example": [
                "\n    var myarray = ['apple', 'orange'];\n    scrawl.contains(myarray, 'apple');  //true\n    scrawl.contains(myarray, 'banana'); //false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 702,
            "description": "A __utility__ function to convert strings (such as percentages) to integer values",
            "itemtype": "method",
            "name": "toInt",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Integer number; 0 on error"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 714,
            "description": "A __utility__ function that adds a value to an array if the array doesn't already contain an element with that value",
            "itemtype": "method",
            "name": "pushUnique",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "o",
                    "description": "value to be added to array",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Amended array"
            },
            "example": [
                "\n    var myarray = ['apple', 'orange'];\n    scrawl.pushUnique(myarray, 'apple');    //returns ['apple', 'orange']\n    scrawl.pushUnique(myarray, 'banana');   //returns ['apple', 'orange', 'banana']"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 731,
            "description": "A __utility__ function that removes a value from an array",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "o",
                    "description": "value to be removed from array",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Amended array"
            },
            "example": [
                "\n    var myarray = ['apple', 'orange'];\n    scrawl.removeItem(myarray, 'banana');   //returns ['apple', 'orange']\n    scrawl.removeItem(myarray, 'apple');    //returns ['orange']"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 749,
            "description": "A __utility__ function that checks to see if a number is between two other numbers",
            "itemtype": "method",
            "name": "isBetween",
            "params": [
                {
                    "name": "no",
                    "description": "Reference number",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "Minimum or maximum number",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "Maximum or minimum number",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "If true, reference number can equal maximum/minimum number; on false, number must lie between the maximum and minimum (default: false)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if value is between maximum and minimum; false otherwise"
            },
            "example": [
                "\n    scrawl.isBetween(3, 1, 5);          //returns true\n    scrawl.isBetween(3, 3, 5);          //returns false\n    scrawl.isBetween(3, 3, 5, true);    //returns true"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 782,
            "description": "A __utility__ function for variable type checking\n\nValid identifier Strings include:\n\n* __num__ for numbers\n* __str__ for strings\n* __bool__ for booleans\n* __fn__ for Function objects\n* __arr__ for Array objects\n* __obj__ for Object objects (excluding DOM objects)\n* __dom__ for DOM objects\n* __event__ for DOM event objects\n* __date__ for Date objects\n* __vector__ for Scrawl Vector objects\n* __quaternion__ for Scrawl Quaternion objects",
            "itemtype": "method",
            "name": "isa",
            "params": [
                {
                    "name": "item",
                    "description": "Primative or object for identification",
                    "type": "Mixed"
                },
                {
                    "name": "identifier",
                    "description": "Identifier String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if item type matches the identifier"
            },
            "example": [
                "\n    var mystring = 'string',\n        myboolean = false;\n    scrawl.isa(mystring, 'bool');   //returns false\n    scrawl.isa(mystring, 'str');    //returns true\n    scrawl.isa(myboolean, 'bool');  //returns true\n    scrawl.isa(myboolean, 'str');   //returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 868,
            "description": "Check to see if variable is an Object",
            "itemtype": "method",
            "name": "safeObject",
            "params": [
                {
                    "name": "items",
                    "description": "Variable for checking",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Parameter being checked, if it is an object; returns an empty object on failure"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 878,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xt",
            "params": [
                {
                    "name": "item",
                    "description": "Primative or object for identification",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "False if item is 'undefined'"
            },
            "example": [
                "\n    var mystring = 'string',\n        myboolean;\n    scrawl.xt(mystring);    //returns true\n    scrawl.xt(myboolean);   //returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 892,
            "description": "A __utility__ function that checks an argument list of values and returns the first value that exists",
            "itemtype": "method",
            "name": "xtGet",
            "return": {
                "description": "first defined variable; null if all values are undefined"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 910,
            "description": "A __utility__ function that checks an argument list values and returns the first value that evaluates to true\n\nFalse: 0, -0, '', undefined, null, false, NaN",
            "itemtype": "method",
            "name": "xtGetTrue",
            "return": {
                "description": "first true variable; null if all values are false"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 931,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xta",
            "params": [
                {
                    "name": "item",
                    "description": "Array of primatives or objects for identification",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "False if any item is 'undefined'"
            },
            "example": [
                "\n    var mystring = 'string',\n        mynumber = 0,\n        myboolean;\n    scrawl.xta([mystring, mynumber]);   //returns true\n    scrawl.xta([mystring, myboolean]);  //returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 961,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xto",
            "return": {
                "description": "True if any item is not 'undefined'"
            },
            "example": [
                "\n    var mystring = 'string',\n        mynumber = 0,\n        myboolean;\n    scrawl.xto(mystring, mynumber); //returns true\n    scrawl.xto(mystring, myboolean);    //returns true"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 989,
            "description": "Generate unique names for new Scrawl objects",
            "itemtype": "method",
            "name": "makeName",
            "params": [
                {
                    "name": "item",
                    "description": "Object with attributes: name, type, target",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Unique generated name"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1008,
            "description": "A __general__ function to reset display offsets for all pads, stacks and elements\n\nThe argument is an optional String - permitted values include 'stack', 'pad', 'element'; default: 'all'\n\n(This function is replaced by the scrawlStacks extension)",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "params": [
                {
                    "name": "item",
                    "description": "Command string detailing which element types are to be set",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.setDisplayOffsets();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1031,
            "description": "A __private__ function that searches the DOM for canvas elements and generates Pad/Cell/Context objects for each of them\n\n(This function is replaced by the scrawlStacks extension)",
            "itemtype": "method",
            "name": "getCanvases",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1058,
            "description": "A __general__ function to add a visible &lt;canvas&gt; element to the web page, and create a Pad controller and Cell wrappers for it\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Pad and/or Cell object attribute\n\n(This function is replaced by the scrawlStacks extension)",
            "itemtype": "method",
            "name": "addCanvasToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Cell's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The new Pad object"
            },
            "example": [
                "\n    <body>\n        <div id=\"canvasholder\"></div>\n        <script src=\"js/scrawlCore-min.js\"></script>\n        <script>\n            scrawl.addCanvasToPage({\n                name:   'mycanvas',\n                parentElement: 'canvasholder',\n                width: 400,\n                height: 200,\n                }).makeCurrent();\n        </script>\n    </body>"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1101,
            "description": "A __display__ function to ask Pads to get their Cells to clear their &lt;canvas&gt; elements",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1119,
            "description": "A __display__ function to ask Pads to get their Cells to compile their scenes",
            "itemtype": "method",
            "name": "compile",
            "params": [
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1138,
            "description": "A __display__ function to ask Pads to show the results of their latest display cycle",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1156,
            "description": "A __display__ function to ask Pads to undertake a complete clear-compile-show display cycle",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1175,
            "description": "A __utility__ function to add two percent strings together",
            "itemtype": "method",
            "name": "addPercentages",
            "params": [
                {
                    "name": "a",
                    "description": "- first value",
                    "type": "String"
                },
                {
                    "name": "b",
                    "description": "- second value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String result"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1187,
            "description": "A __utility__ function to reverse the value of a percentage string",
            "itemtype": "method",
            "name": "reversePercentage",
            "params": [
                {
                    "name": "a",
                    "description": "- value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String result"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1198,
            "description": "A __utility__ function to subtract a percent string from another",
            "itemtype": "method",
            "name": "subtractPercentages",
            "params": [
                {
                    "name": "a",
                    "description": "- initial value",
                    "type": "String"
                },
                {
                    "name": "b",
                    "description": "- value to be subtracted from initial value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String result"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1210,
            "description": "A custom __event listener__ helper array",
            "itemtype": "property",
            "name": "activeListeners",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1218,
            "description": "A custom __event listener__ function\n\nThe touchenter event is deprecated, but necessary for scrawl functionality",
            "itemtype": "method",
            "name": "triggerTouchEnter",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1229,
            "description": "A custom __event listener__ function\n\nThe touchleave event is deprecated, but necessary for scrawl functionality",
            "itemtype": "method",
            "name": "triggerTouchLeave",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1240,
            "description": "A custom __event listener__ function\n\nThe touchfollow event is entirely custom, designed to allow elements to subscribe to an event that started in a different element",
            "itemtype": "method",
            "name": "triggerTouchFollow",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1251,
            "description": "A custom __event listener__ helper function",
            "itemtype": "method",
            "name": "cloneTouchEventItem",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1272,
            "description": "A custom __event listener__ helper function",
            "itemtype": "method",
            "name": "updateCustomTouch",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1333,
            "description": "A utility function for adding JavaScript event listeners to multiple elements",
            "itemtype": "method",
            "name": "addNativeListener",
            "params": [
                {
                    "name": "evt",
                    "description": "- or an Array of Strings",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "- function to be called when event triggers",
                    "type": "Function"
                },
                {
                    "name": "targ",
                    "description": "- either a querySelectorAll string, or a DOM element, or an Array of DOM elements",
                    "type": "String"
                }
            ],
            "return": {
                "description": "always true"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1362,
            "description": "A utility function for adding JavaScript event listeners to multiple elements",
            "itemtype": "method",
            "name": "addNativeListener",
            "params": [
                {
                    "name": "evt",
                    "description": "- or an Array of Strings",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "- function to be called when event triggers",
                    "type": "Function"
                },
                {
                    "name": "targ",
                    "description": "- either a querySelectorAll string, or a DOM element, or an Array of DOM elements",
                    "type": "String"
                }
            ],
            "return": {
                "description": "always true"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1390,
            "description": "Adds event listeners to the element",
            "itemtype": "method",
            "name": "addListener",
            "params": [
                {
                    "name": "evt",
                    "description": "- or an Array of Strings from: 'up', 'down', 'enter', 'leave', 'move'",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "- function to be called when event triggers",
                    "type": "Function"
                },
                {
                    "name": "targ",
                    "description": "- either a querySelectorAll string, or a DOM element, or an Array of DOM elements",
                    "type": "String"
                }
            ],
            "return": {
                "description": "always true"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1470,
            "description": "Remove event listeners from the element",
            "itemtype": "method",
            "name": "removeListener",
            "params": [
                {
                    "name": "evt",
                    "description": "- one from: 'up', 'down', 'enter', 'leave', 'move'",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "- function to be called when event triggers",
                    "type": "Function"
                },
                {
                    "name": "targ",
                    "description": "- either a querySelectorAll string, or a DOM element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true on success; false otherwise"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1550,
            "description": "A __utility__ function for performing bucket sorts on scrawl string arrays eg Group.entitys",
            "itemtype": "method",
            "name": "bucketSort",
            "params": [
                {
                    "name": "section",
                    "description": "scrawl library section name",
                    "type": "String"
                },
                {
                    "name": "attribute",
                    "description": "on which sort will be performed",
                    "type": "String"
                },
                {
                    "name": "a",
                    "description": "array to be sorted",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "sorted array"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1577,
            "description": "General helper function - correct mouse coordinates if pad dimensions not equal to base cell dimensions",
            "itemtype": "method",
            "name": "correctCoordinates",
            "params": [
                {
                    "name": "coords",
                    "description": "An object containing x and y attributes",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amended coordinate object; false on error"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1607,
            "description": "A __general__ function which passes on requests to Pads to generate new &lt;canvas&gt; elements and associated objects - see Pad.addNewCell() for more details",
            "itemtype": "method",
            "name": "addNewCell",
            "params": [
                {
                    "name": "data",
                    "description": "Initial attribute values for new object",
                    "type": "Object"
                },
                {
                    "name": "pad",
                    "description": "PADNAME",
                    "type": "String"
                }
            ],
            "return": {
                "description": "New Cell object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1618,
            "description": "A __general__ function which deletes Cell objects and their associated paraphinalia - see Pad.deleteCells() for more details",
            "itemtype": "method",
            "name": "deleteCells",
            "params": [
                {
                    "name": "cells",
                    "description": "Array of CELLNAMEs - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1657,
            "description": "A __general__ function which adds supplied entitynames to Group.entitys attribute",
            "itemtype": "method",
            "name": "addEntitysToGroups",
            "params": [
                {
                    "name": "groups",
                    "description": "Array of GROUPNAME Strings - can also be a String",
                    "type": "Array"
                },
                {
                    "name": "entitys",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1683,
            "description": "A __general__ function which removes supplied entitynames from Group.entitys attribute",
            "itemtype": "method",
            "name": "removeEntitysFromGroups",
            "params": [
                {
                    "name": "groups",
                    "description": "Array of GROUPNAME Strings - can also be a String",
                    "type": "Array"
                },
                {
                    "name": "entitys",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1709,
            "description": "A __general__ function to delete entity objects",
            "itemtype": "method",
            "name": "deleteEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.makeBlock({\n        name: 'myblock',\n        });\n    scrawl.deleteEntity(['myblock']);"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1760,
            "description": "scrawl.deleteEntity hook function - modified by path extension",
            "itemtype": "method",
            "name": "pathDeleteEntity",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1766,
            "description": "Alias for makeVector()",
            "itemtype": "method",
            "name": "newVector",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1774,
            "description": "Alias for makePad()",
            "itemtype": "method",
            "name": "newPad",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1783,
            "description": "Alias for makeCell()",
            "itemtype": "method",
            "name": "newCell",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1792,
            "description": "Alias for makeContext()",
            "itemtype": "method",
            "name": "newContext",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1801,
            "description": "Alias for makeGroup()",
            "itemtype": "method",
            "name": "newGroup",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1809,
            "description": "Alias for makeGradient()",
            "itemtype": "method",
            "name": "newGradient",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1817,
            "description": "Alias for makeRadialGradient()",
            "itemtype": "method",
            "name": "newRadialGradient",
            "deprecated": true,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1825,
            "description": "A __factory__ function to generate new Vector objects",
            "itemtype": "method",
            "name": "makeVector",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector object"
            },
            "example": [
                "\n    var myVector = scrawl.makeVector({\n        x: 100,\n        y: 200,\n        });"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1839,
            "description": "A __factory__ function to generate new Pad objects",
            "itemtype": "method",
            "name": "makePad",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pad object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1849,
            "description": "A __factory__ function to generate new Cell objects",
            "itemtype": "method",
            "name": "makeCell",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cell object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1859,
            "description": "A __factory__ function to generate new Context objects",
            "itemtype": "method",
            "name": "makeContext",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Context object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1869,
            "description": "A __factory__ function to generate new Group objects",
            "itemtype": "method",
            "name": "makeGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Group object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1878,
            "description": "A __factory__ function to generate new Gradient objects",
            "itemtype": "method",
            "name": "makeGradient",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Gradient object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1887,
            "description": "A __factory__ function to generate new RadialGradient objects",
            "itemtype": "method",
            "name": "makeRadialGradient",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "RadialGradient object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1914,
            "description": "X coordinate (px)",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1921,
            "description": "Y coodinate (px)",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1928,
            "description": "Z coordinate (px)",
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1935,
            "description": "Vector name - not guaranteed to be unique",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "'generic'",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1945,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Vector'",
            "final": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1958,
            "description": "Set the Vector's coordinates to values that will result in the given magnitude",
            "itemtype": "method",
            "name": "setMagnitudeTo",
            "params": [
                {
                    "name": "item",
                    "description": "New magnitude",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1978,
            "description": "Normalize the Vector to a unit vector",
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1993,
            "description": "Set all attributes to zero",
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2005,
            "description": "Set attributes to new values",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2020,
            "description": "Compare two Vector objects for equality",
            "itemtype": "method",
            "name": "isEqual",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested against this",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if argument object is a Vector, and all attributes match; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2034,
            "description": "Comparea vector-like object to this one for equality",
            "itemtype": "method",
            "name": "isLike",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested against this",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if all attributes match; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2048,
            "description": "extracts x and y data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Object (not vector) with x and y attributes"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2060,
            "description": "Check if x and y attributes are set",
            "itemtype": "method",
            "name": "hasCoordinates",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if argument possesses x and y attributes"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2069,
            "description": "Add a Vector to this Vector",
            "itemtype": "method",
            "name": "vectorAdd",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be added to this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2084,
            "description": "Subtract a Vector from this Vector",
            "itemtype": "method",
            "name": "vectorSubtract",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be subtracted from this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2098,
            "description": "Multiply a Vector with this Vector",
            "itemtype": "method",
            "name": "vectorMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be multiplied with this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2112,
            "description": "Divide a Vector into this Vector",
            "itemtype": "method",
            "name": "vectorDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be divided into this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2126,
            "description": "Multiply this Vector by a scalar value",
            "itemtype": "method",
            "name": "scalarMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Multiplier scalar",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2142,
            "description": "Divide this Vector by a scalar value",
            "itemtype": "method",
            "name": "scalarDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Division scalar",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2158,
            "description": "Retrieve Vector's magnitude value",
            "itemtype": "method",
            "name": "getMagnitude",
            "return": {
                "description": "Magnitude value"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2166,
            "description": "Check to see if Vector is a zero vector",
            "itemtype": "method",
            "name": "checkNotZero",
            "return": {
                "description": "True if Vector is non-zero; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2174,
            "description": "Return a clone of this Vector",
            "itemtype": "method",
            "name": "getVector",
            "return": {
                "description": "Clone of this Vector"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2186,
            "description": "Obtain the cross product of one Vector and a copy of this, or another, Vector\n\nArithmetic is v(crossProduct)u, not u(crossProduct)v",
            "itemtype": "method",
            "name": "getCrossProduct",
            "params": [
                {
                    "name": "u",
                    "description": "Vector to be used to calculate cross product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Source vector (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "New cross product Vector; this on failure"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2220,
            "description": "Obtain the dot product of one Vector and this, or another, Vector\n\nArithmetic is v(dotProduct)u, not u(dotProduct)v",
            "itemtype": "method",
            "name": "getDotProduct",
            "params": [
                {
                    "name": "u",
                    "description": "Vector to be used to calculate dot product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Source vector (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "Dot product result; false on failure"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2237,
            "description": "Obtain the triple scalar product of two Vectors and this, or a third, Vector",
            "itemtype": "method",
            "name": "getTripleScalarProduct",
            "params": [
                {
                    "name": "u",
                    "description": "First vector to be used to calculate triple scalar product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Second vector to be used to calculate triple scalar product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "w",
                    "description": "Third vector to be used to calculate triple scalar product (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "Triple scalar product result; false on failure"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2270,
            "description": "Rotate the Vector by a given angle",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "Rotation angle (in degrees)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2289,
            "description": "Rotate the Vector by 180 degrees",
            "itemtype": "method",
            "name": "reverse",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2301,
            "description": "Rotate a Vector object by a Quaternion rotation",
            "itemtype": "method",
            "name": "quaternionMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion object",
                    "type": "Quaternion"
                },
                {
                    "name": "mag",
                    "description": "Magnitude value to which Vector needs to be set after rotation",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amended version of Vector; this on failure"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2348,
            "description": "Unique identifier for each object; default: computer-generated String based on Object's type",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2361,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Base'",
            "final": 1,
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2370,
            "description": "Comment, for accessibility",
            "itemtype": "property",
            "name": "comment",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2377,
            "description": "Title, for accessibility",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2384,
            "description": "Creation timestamp",
            "itemtype": "property",
            "name": "timestamp",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2392,
            "description": "Retrieve an attribute value. If the attribute value has not been set, then the default value for that attribute will be returned.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "example": [
                "\n    var box = scrawl.makeBlock({\n        width: 50,\n        });\n    box.get('width');               //returns 50\n    box.get('height');              //returns 0\n    box.get('favouriteAnimal');     //returns undefined"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2408,
            "description": "Set attribute values. Multiple attributes can be set in the one call by including the attribute key:value pair in the argument object.\n\nAn attribute value will only be set if the object already has a default value for that attribute. This restricts the ability of coders to add attributes to Scrawl objects.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "example": [
                "\n    var box = scrawl.makeBlock({\n        width: 50,\n        height: 50\n        });\n    box.set({\n        height: 100,\n        favouriteAnimal: 'cat'\n        });\n    box.get('width');               //returns 50\n    box.get('height');              //returns 100\n    box.get('favouriteAnimal');     //returns undefined"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2439,
            "description": "Clone a Scrawl.js object, optionally altering attribute values in the cloned object\n\nNote that any callback or fn attribute functions will be referenced by the clone, not copied to the clone; these can be overwritten with new anonymous functions by including them in the items argument object\n\n(This function is replaced by the path extension)",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs; will overwrite existing values in the cloned, but not the source, Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "example": [
                "\n    var box = scrawl.makeBlock({\n        width: 50,\n        height: 50\n        });\n    var newBox = box.clone({\n        height: 100\n        });\n    newBox.get('width');        //returns 50\n    newBox.get('height');       //returns 100"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2478,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "parse",
            "return": {
                "description": "object of object's currently set attributes"
            },
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2486,
            "description": "Stamp helper function - convert string percentage values to numerical values",
            "itemtype": "method",
            "name": "numberConvert",
            "params": [
                {
                    "name": "val",
                    "description": "coordinate String",
                    "type": "String"
                },
                {
                    "name": "dim",
                    "description": "dimension value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Number - value"
            },
            "access": "private",
            "tagname": "",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2527,
            "description": "viewport width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "calculated automatically",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2534,
            "description": "viewport height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "calculated automatically",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2541,
            "description": "viewport offset from the top of the document",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "calculated automatically",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2548,
            "description": "viewport offset from the left side of the document",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "calculated automatically",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2555,
            "description": "Device/browser is touch-enabled and we should expect to receive touch events",
            "itemtype": "property",
            "name": "expectTouch",
            "type": "Number",
            "default": "calculated automatically",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2562,
            "description": "canvas support\n\nFalse if device does not support the canvas element; true otherwise",
            "itemtype": "property",
            "name": "canvas",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2571,
            "description": "canvas global composite operation support: source-in\n\nFalse if device incorrectly supports the GCO source-in functionality",
            "itemtype": "property",
            "name": "canvasGcoSourceIn",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2580,
            "description": "canvas global composite operation support: source-out\n\nFalse if device incorrectly supports the GCO source-out functionality",
            "itemtype": "property",
            "name": "canvasGcoSourceOut",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2589,
            "description": "canvas global composite operation support: destination-atop\n\nFalse if device incorrectly supports the GCO destination-atop functionality",
            "itemtype": "property",
            "name": "canvasGcoDestinationAtop",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2598,
            "description": "canvas global composite operation support: destination-in\n\nFalse if device incorrectly supports the GCO destination-in functionality",
            "itemtype": "property",
            "name": "canvasGcoDestinationIn",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2607,
            "description": "canvas global composite operation support: copy\n\nFalse if device incorrectly supports the GCO copy functionality",
            "itemtype": "property",
            "name": "canvasGcoCopy",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2616,
            "description": "canvas even-odd winding functionality\n\nFalse if device does not support the canvas even-odd winding functionality; true otherwise",
            "itemtype": "property",
            "name": "canvasEvenOddWinding",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2625,
            "description": "canvas dashed line functionality\n\nFalse if device does not support the canvas dashed line functionality; true otherwise",
            "itemtype": "property",
            "name": "canvasDashedLine",
            "type": "Boolean",
            "default": "false",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2638,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Device'",
            "final": 1,
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2666,
            "description": "Feature detection",
            "itemtype": "method",
            "name": "getDeviceData",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2684,
            "description": "Check if we should expect to receive touch events\n\nModern IE uses pointer events, so Device will not check for IE specific touch-enabled devices",
            "itemtype": "method",
            "name": "checkTouch",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2702,
            "description": "Check if device supports canvas element",
            "itemtype": "method",
            "name": "checkCanvas",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2712,
            "description": "Check if device supports canvas evenOdd winding",
            "itemtype": "method",
            "name": "checkCanvasEvenOddWinding",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2743,
            "description": "Check if device supports dashed line functionality",
            "itemtype": "method",
            "name": "checkCanvasDashedLine",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2769,
            "description": "Check if device supports various global composition operation functionalities",
            "itemtype": "method",
            "name": "checkCanvasGco",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2834,
            "description": "Determine viewport dimensions",
            "itemtype": "method",
            "name": "getViewportDimensions",
            "return": {
                "description": "Boolean - true if dimensions have changed; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2856,
            "description": "Determine viewport position within the page",
            "itemtype": "method",
            "name": "getViewportPosition",
            "return": {
                "description": "Boolean - true if scrolling has occurred; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2880,
            "description": "Feature detection - hook function",
            "itemtype": "method",
            "name": "getStacksDeviceData",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2886,
            "description": "Feature detection - hook function",
            "itemtype": "method",
            "name": "getImagesDeviceData",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2892,
            "description": "Determine if viewport is in landscape mode - if width and height arte equal, landscape mode is assumend",
            "itemtype": "method",
            "name": "isLandscape",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2900,
            "description": "Determine if viewport is in portrait mode - if width and height arte equal, landscape mode is assumend",
            "itemtype": "method",
            "name": "isPortrait",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2935,
            "description": "The coordinate Vector representing the object's rotation/flip point\n\nSubScrawl, and all Objects that prototype chain to Subscrawl, supports the following 'virtual' attributes for this attribute:\n\n* __startX__ - (Number) the x coordinate of the object's rotation/flip point, in pixels, from the left side of the object's cell\n* __startY__ - (Number) the y coordinate of the object's rotation/flip point, in pixels, from the top side of the object's cell",
            "itemtype": "property",
            "name": "start",
            "type": "Vector",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2956,
            "description": "An Object (in fact, a Vector) containing offset instructions from the object's rotation/flip point, where drawing commences. \n\nSubScrawl, and all Objects that prototype chain to Subscrawl, supports the following 'virtual' attributes for this attribute:\n\n* __handleX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __handleY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "handle",
            "type": "Object",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2979,
            "description": "An object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "property",
            "name": "maxDimensions",
            "type": "Object",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2998,
            "description": "The ENTITYNAME or POINTNAME of a entity or Point object to be used for setting this object's start point",
            "itemtype": "property",
            "name": "pivot",
            "type": "String",
            "default": "null",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3005,
            "description": "The object's scale value - larger values increase the object's size",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3012,
            "description": "Current rotation of the entity, cell or element (in degrees)",
            "itemtype": "property",
            "name": "roll",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3019,
            "description": "Reflection flag; set to true to flip entity, cell or element along the Y axis",
            "itemtype": "property",
            "name": "flipReverse",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3026,
            "description": "Reflection flag; set to true to flip entity, cell or element along the X axis",
            "itemtype": "property",
            "name": "flipUpend",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3033,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the X axis",
            "itemtype": "property",
            "name": "lockX",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3040,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the Y axis",
            "itemtype": "property",
            "name": "lockY",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3047,
            "description": "Index of mouse vector to use when pivot === 'mouse'\n\nThe Pad.mice object can hold details of multiple touch events - when an entity is assigned to a 'mouse', it needs to know which of those mouse trackers to use. Default: mouse (for the mouse cursor vector)",
            "itemtype": "property",
            "name": "mouseIndex",
            "type": "String",
            "default": "'mouse'",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3061,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Position'",
            "final": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3101,
            "description": "Entity, cell or element width (in pixels)",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3108,
            "description": "Entity, cell or element height (in pixels)",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3115,
            "description": "(Added by the path extension)\nThe ENTITYNAME of a Shape entity whose path is used to calculate this object's start point",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "default": "''",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3122,
            "description": "(Added by the path extension)\nA value between 0 and 1 to represent the distance along a Path object's path, where 0 is the path start and 1 is the path end",
            "itemtype": "property",
            "name": "pathPlace",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3129,
            "description": "(Added by the path extension)\nA change value which can be applied to the object's pathPlace attribute",
            "itemtype": "property",
            "name": "deltaPathPlace",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3136,
            "description": "(Added by the path extension)\nA flag to determine whether the object will calculate its position along a Shape path in a regular (true), or simple (false), manner",
            "itemtype": "property",
            "name": "pathSpeedConstant",
            "type": "Boolean",
            "default": "true",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3145,
            "description": "Position constructor hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationPositionInit",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3151,
            "description": "Position constructor hook function - modified by path extension",
            "itemtype": "method",
            "name": "pathPositionInit",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3157,
            "description": "Augments Base.get(), to allow users to get values for start, startX, startY, handle, handleX, handleY\n\nFor 'start' and 'handle', returns a copy of the Vector",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3181,
            "description": "Get the current start x coordinate",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "Attribute value"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3189,
            "description": "Get the current start y coordinate",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "Attribute value"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3197,
            "description": "Position.get hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationPositionGet",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3205,
            "description": "Augments Base.set(), to allow users to set the start and handle attributes using startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3234,
            "description": "Augments Base.setStart(), to allow users to set the start attributes using start, startX, startY",
            "itemtype": "method",
            "name": "setStart",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3264,
            "description": "Augments Base.setHandle(), to allow users to set the handle attributes using handle, handleX, handleY",
            "itemtype": "method",
            "name": "setHandle",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3294,
            "description": "Position.set hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationPositionSet",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3305,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function. This function also accepts startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3342,
            "description": "Adds the value of each attribute supplied in the argument to existing values; This function accepts start, startX, startY",
            "itemtype": "method",
            "name": "setDeltaStart",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3365,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts handle, handleX, handleY",
            "itemtype": "method",
            "name": "setDeltaHandle",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3388,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts scale",
            "itemtype": "method",
            "name": "setDeltaScale",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3400,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts roll",
            "itemtype": "method",
            "name": "setDeltaRoll",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3412,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts width",
            "itemtype": "method",
            "name": "setDeltaWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3426,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts height",
            "itemtype": "method",
            "name": "setDeltaHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3440,
            "description": "Position.setDelta hook function - modified by path extension",
            "itemtype": "method",
            "name": "pathPositionSetDelta",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3446,
            "description": "Augments Base.clone(), to allow users to set the start and handle attributes using startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3477,
            "description": "Position.setDelta hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationPositionClone",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3485,
            "description": "updateCurrentHandle helper object",
            "itemtype": "method",
            "name": "getReferenceDimensions",
            "params": [
                {
                    "name": "reference",
                    "description": "object - Stack, Pad, Element, Cell or Entity (Block, Wheel, Phrase, Picture, Path, Shape or Frame)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object with attributes",
                "type": "W: width, h: height, c: centered"
            },
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3561,
            "description": "Convert handle percentage values to numerical values, stored in currentHandle",
            "itemtype": "method",
            "name": "updateCurrentHandle",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3608,
            "description": "Convert start percentage values to numerical values, stored in currentStart",
            "itemtype": "method",
            "name": "updateCurrentStart",
            "params": [
                {
                    "name": "reference",
                    "description": "object - Stack, Pad, Element, Cell or Entity (Block, Wheel, Phrase, Picture, Path, Shape or Frame)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3635,
            "description": "Stamp helper function - set this entity, cell or element start values to its pivot entity/point start value, or to the current mouse coordinates\n\nTakes into account lock flag settings",
            "itemtype": "method",
            "name": "setStampUsingPivot",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3687,
            "description": "setStampUsingPivot helper object",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3726,
            "description": "Stamp helper function - correct mouse coordinates if pad dimensions not equal to base cell dimensions",
            "itemtype": "method",
            "name": "correctCoordinates",
            "params": [
                {
                    "name": "coords",
                    "description": "An object containing x and y attributes",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amended coordinate object"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3780,
            "description": "DOM element width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "300",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3787,
            "description": "DOM element height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "150",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3794,
            "description": "The object's scale value - larger values increase the object's size",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3804,
            "description": "The mice attribute is an object containing supplemented vectors which hold real-time information about the current coordinates of the mouse pointer and any other pointer or touch instances occurring over the element\n\nmice.mouse - always refers to the mouse pointer\nmice.ui0, mice.ui1 etc - refers to pointer and touch events",
            "itemtype": "property",
            "name": "mice",
            "type": "Object",
            "default": "{}",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3823,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'PageElement'",
            "final": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3834,
            "description": "DOM element localWidth",
            "itemtype": "property",
            "name": "localWidth",
            "type": "Number",
            "default": "300",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3841,
            "description": "DOM element localHeight",
            "itemtype": "property",
            "name": "localHeight",
            "type": "Number",
            "default": "150",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3848,
            "description": "DOM element's current horizontal offset from the top of the web page",
            "itemtype": "property",
            "name": "displayOffsetX",
            "type": "Number",
            "default": "0",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3855,
            "description": "DOM element's current vertical offset from the left side of the web page",
            "itemtype": "property",
            "name": "displayOffsetY",
            "type": "Number",
            "default": "0",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3864,
            "description": "Set the interactive attribute to true to track mouse/pointer/touch events on the element. By default Pad and Stack objects set their element's interactivity to true, while Element objects set it to false",
            "itemtype": "property",
            "name": "interactive",
            "type": "Boolean",
            "default": "true (false for Element objects)",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3871,
            "description": "Boolean - if set to trye, a touchmove event will be propogated to other stacks, pads and elements; default false",
            "itemtype": "property",
            "name": "propogateTouch",
            "type": "Boolean",
            "default": "false",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3878,
            "description": "Element CSS position styling attribute",
            "itemtype": "property",
            "name": "position",
            "type": "String",
            "default": "'static'",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3887,
            "description": "PageElement constructor hook function - modified by stacks extension",
            "itemtype": "method",
            "name": "stacksPageElementConstructor",
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3893,
            "description": "Augments Base.get() to retrieve DOM element width and height values\n\n(The stack extension replaces this core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3919,
            "description": "Augments Base.set() to allow the setting of DOM element dimension values\n\n(The stack extension replaces this core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3964,
            "description": "Handles the setting of DOM element title and data-comment attributes",
            "itemtype": "method",
            "name": "setAccessibility",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3986,
            "description": "Calculate the DOM element's current display offset values",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4007,
            "description": "Scale DOM element dimensions (width, height)",
            "itemtype": "method",
            "name": "scaleDimensions",
            "params": [
                {
                    "name": "item",
                    "description": "Scale value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4021,
            "description": "Helper function - set local dimensions (width, height)",
            "itemtype": "method",
            "name": "setLocalDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4034,
            "description": "Helper function - set DOM element dimensions (width, height)",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4047,
            "description": "Retrieve details of the Mouse cursor position in relation to the DOM element's top left hand corner. Most useful for determining mouse cursor position over Stack and Pad (visible &lt;canvas&gt;) elements.\n\nThis function is also used to retrieve details of touch positions.\n\n_Note: if changes are made elsewhere to the web page (DOM) after the page loads, the function .getDisplayOffsets() will need to be called to recalculate the element's position within the page - failure to do so will lead to this function returning incorrect data. getDisplayOffsets() does not need to be called during/after page scrolling._\n\nBy default, the function returns a single Vector containing either the first touch position or the current mouse cursor position.\n\nThe returned object is a Vector containing the mouse cursor's current x and y coordinates in relation to the DOM element's top left corner, together with the following additional attributes:\n\n* __active__ - set to true if mouse is hovering over the element; false otherwise\n* __id__ - event vector id (-1: mouse; 0+ touch or pointer)\n* __order__ - event order (0: mouse; 1+ touch or pointer)\n\nIf an argument is supplied, then all currently existing mouse/touch vectors are returned as an array, with index 0 representing the mouse pointer, index 1 representing the first touch coordinate and additional indexes representing additional touch coordinates",
            "itemtype": "method",
            "name": "getMouse",
            "params": [
                {
                    "name": "item",
                    "description": "- true to return the array; false (default) to return either first touch or mouse Vector",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Vector, or an array of Vectors containing localized coordinates, with additional attributes; if mouse/touch has been disabled for the DOM element, returns false"
            },
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4106,
            "itemtype": "method",
            "name": "getMouseIdFromEvent",
            "params": [
                {
                    "name": "item",
                    "description": "- DOM event object",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Array - mouse id strings associated with event(s)"
            },
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4136,
            "description": "mousemove event listener function",
            "itemtype": "method",
            "name": "handleMouseMove",
            "params": [
                {
                    "name": "e",
                    "description": "window.event",
                    "type": "Object"
                },
                {
                    "name": "active",
                    "description": "- set only by handleMouseIn, handleMouseOut",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4330,
            "description": "mouseTilt hook function - amended by scrawlStacks extension",
            "itemtype": "method",
            "name": "handleMouseTilt",
            "params": [
                {
                    "name": "e",
                    "description": "window.event",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4338,
            "description": "Adds event listeners to the element",
            "itemtype": "method",
            "name": "addMouseMove",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4353,
            "description": "Remove event listeners from the element",
            "itemtype": "method",
            "name": "removeMouseMove",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4419,
            "description": "Array of CELLNAME Strings associated with this Pad",
            "itemtype": "property",
            "name": "cells",
            "type": "Array",
            "default": "[]",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4436,
            "description": "Pad's display (visible) &lt;canvas&gt; element - CELLNAME",
            "itemtype": "property",
            "name": "display",
            "type": "String",
            "default": "''",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4455,
            "description": "Pad's base (hidden) &lt;canvas&gt; element - CELLNAME",
            "itemtype": "property",
            "name": "base",
            "type": "String",
            "default": "''",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4462,
            "description": "Pad's currently active &lt;canvas&gt; element - CELLNAME\n\n//not convinced there's any point in keeping this attribute anymore - take it out?",
            "itemtype": "property",
            "name": "current",
            "type": "String",
            "default": "''",
            "deprecated": true,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4490,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Pad'",
            "final": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4505,
            "description": "Retrieve Pad's visible &lt;canvas&gt; element object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "DOM element object"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4514,
            "description": "Pad constructor hook function - modified by filters extension",
            "itemtype": "method",
            "name": "filtersPadInit",
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4520,
            "description": "Pad constructor hook function - modified by stacks extension",
            "itemtype": "method",
            "name": "stacksPadInit",
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4526,
            "description": "Augments PageElement.set(), to cascade scale, backgroundColor, globalAlpha and globalCompositeOperation changes to associated Cell objects",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4566,
            "description": "Pad constructor hook function - amended by Stacks extension",
            "itemtype": "method",
            "name": "padStacksConstructor",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4573,
            "description": "Pad set hook function - amended by Stacks extension",
            "itemtype": "method",
            "name": "padStacksSet",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4580,
            "description": "Display function sorting routine - cells are sorted according to their compileOrder attribute value, in ascending order",
            "itemtype": "method",
            "name": "sortCellsCompile",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4592,
            "description": "Display function sorting routine - cells are sorted according to their showOrder attribute value, in ascending order",
            "itemtype": "method",
            "name": "sortCellsShow",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4604,
            "description": "Display function - requests Cells to clear their &lt;canvas&gt; element\n\nCells with cleared = true will clear theid displays in preparation for compile/stamp operations",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4627,
            "description": "Display function - requests Cells to compile their &lt;canvas&gt; element\n\nCells will compile in ascending order of their compileOrder attributes, if their compiled attribute = true\n\nBy default:\n* the initial base canvas has a compileOrder of 9999 and compiles last\n* the initial display canvas has compiled = false and will not compile\n\n(This function is replaced by the Filters extension)",
            "itemtype": "method",
            "name": "compile",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4657,
            "description": "Display function - requests Cells to show their &lt;canvas&gt; element \n\nCells will show in ascending order of their showOrder attributes, if their show attribute = true\n\nBy default, the initial base and display canvases have shown = false:\n* 'show' involves a cell copying itself onto the base cell; it makes no sense for the base cell to copy onto itself\n* the last action is to copy the base cell onto the display cell\n\n(This function is replaced by the Filters extension)",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4692,
            "description": "Display function - Pad tells its associated Cell objects to undertake a complete clear-compile-show display cycle",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4705,
            "description": "Create a new (hidden) &lt;canvas&gt; element and associated Cell wrapper, and add it to this Pad",
            "itemtype": "method",
            "name": "addNewCell",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing attribute data for the new canvas",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New Cell object; false on failure"
            },
            "example": [
                "\n    scrawl.addCanvasToPage({\n        name: 'mycanvas',\n        width: 200,\n        height: 200,\n        });\n    scrawl.pad.mycanvas.addNewCell({\n        name: 'background',\n        width: 400,\n        });"
            ],
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4745,
            "description": "Associate existing &lt;canvas&gt; elements, and their Cell wrappers, with this Pad",
            "itemtype": "method",
            "name": "addCells",
            "params": [
                {
                    "name": "items",
                    "description": "One or more CELLNAME Strings",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4772,
            "description": "Remove a Cell wrapper object from this Pad\n\n_Note: does not delete the canvas, or the Cell object, from the scrawl library_",
            "itemtype": "method",
            "name": "deleteCell",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4802,
            "description": "Set scrawl.currentPad attribute to this Pad's PADNAME String",
            "itemtype": "method",
            "name": "makeCurrent",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.addCanvasToPage({\n        name: 'mycanvas',\n        width: 200,\n        height: 200\n        }).makeCurrent();"
            ],
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4818,
            "description": "Augments PageElement.setAccessibility(); handles the setting of &lt;canvas&gt; element title and data-comment attributes\n\n* Title text is assigned to the display canvas's title attribute\n* Comments are placed between the display canvas element's tags, within &lt;p&gt; tags - this will remove any existing content between the canvas tags",
            "itemtype": "method",
            "name": "setAccessibility",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4845,
            "description": "Overrides PageElement.setDimensions(); &lt;canvas&gt; elements do not use styling to set their drawing region dimensions",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4895,
            "description": "The coordinate Vector representing the Cell's target position on the &lt;canvas&gt; to which it is to be copied\n\nCell supports the following 'virtual' attributes for this attribute:\n\n* __startX__ or __targetX__ - (Number) the x coordinate on the destination &lt;canvas&gt;\n* __startY__ or __targetY__ - (Number) the y coordinate on the destination &lt;canvas&gt;",
            "itemtype": "property",
            "name": "start",
            "type": "Vector",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4915,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Cell'",
            "final": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4924,
            "description": "PADNAME of the Pad object to which this Cell belongs",
            "itemtype": "property",
            "name": "pad",
            "type": "String",
            "default": "''",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4931,
            "description": "The coordinate Vector representing the Cell's copy source position on its &lt;canvas&gt;\n\nCell supports the following 'virtual' attributes for this attribute:\n\n* __copyX__ - (Number) the x coordinate on the source &lt;canvas&gt;\n* __copyY__ - (Number) the y coordinate on the source &lt;canvas&gt;",
            "itemtype": "property",
            "name": "copy",
            "type": "Vector",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4946,
            "description": "Copy width, in pixels. Determines which portion of this Cell's &lt;canvas&gt; element will be copied to another &lt;canvas&gt;",
            "itemtype": "property",
            "name": "copyWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4953,
            "description": "Copy height, in pixels. Determines which portion of this Cell's &lt;canvas&gt; element will be copied to another &lt;canvas&gt;",
            "itemtype": "property",
            "name": "copyHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4960,
            "description": "Local source data",
            "itemtype": "property",
            "name": "copyData",
            "type": "Object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4968,
            "description": "Local target data",
            "itemtype": "property",
            "name": "pasteData",
            "type": "Object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4976,
            "description": "Paste width, in pixels. Determines where, and at what scale, the copied portion of this Cell's &lt;canvas&gt; will appear on the target Cell's &lt;canvas&gt;",
            "itemtype": "property",
            "name": "pasteWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4983,
            "description": "Paste height, in pixels. Determines where, and at what scale, the copied portion of this Cell's &lt;canvas&gt; will appear on the target Cell's &lt;canvas&gt;",
            "itemtype": "property",
            "name": "pasteHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4990,
            "description": "DOM &lt;canvas&gt; element's width (not CSS width)\n\n_Never change this attribute directly_",
            "itemtype": "property",
            "name": "actualWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4999,
            "description": "DOM &lt;canvas&gt; element's height (not CSS height)\n\n_Never change this attribute directly_",
            "itemtype": "property",
            "name": "actualHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5008,
            "itemtype": "property",
            "name": "fieldLabel",
            "type": "String",
            "default": "''",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5014,
            "description": "Transparency level to be used when copying this Cell's &lt;canvas&gt; element to another &lt;canvas&gt;. Permitted values are between 0 (fully transparent) and 1 (fully opaque)",
            "itemtype": "property",
            "name": "globalAlpha",
            "type": "Number",
            "default": "1",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5021,
            "description": "Composition method to be used when copying this Cell's &lt;canvas&gt; element to another &lt;canvas&gt;. Permitted values include\n\n* 'source-over'\n* 'source-atop'\n* 'source-in'\n* 'source-out'\n* 'destination-over'\n* 'destination-atop'\n* 'destination-in'\n* 'destination-out'\n* 'lighter'\n* 'darker'\n* 'copy'\n* 'xor'\n\n_Be aware that different browsers render these operations in different ways, and some options are not supported by all browsers. The scrawl.device object includes details of which operations the browser supports._",
            "itemtype": "property",
            "name": "globalCompositeOperation",
            "type": "String",
            "default": "'source-over'",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5043,
            "description": "DOM &lt;canvas&gt; element's background color; use any permitted CSS color String\n\n_Background colors are achieved via JavaScript canvas API drawing methods. Setting the CSS backgroundColor attribute on a &lt;canvas&gt; element is not recommended_",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'rgba(0,0,0,0)'",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5052,
            "description": "CTXNAME of this Cell's Context object\n\n_Cells use a Context object to keep track of the settings supplied to its &lt;canvas&gt; element's 2d context engine_",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5062,
            "description": "Array of GROUPNAMES that contribute to building this Cell's scene",
            "itemtype": "property",
            "name": "groups",
            "type": "Array",
            "default": "[]",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5069,
            "description": "Display cycle flag - on true (default), the cell will take part in the display cycle",
            "itemtype": "property",
            "name": "rendered",
            "type": "Boolean",
            "default": "true",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5076,
            "description": "Display cycle flag - on true (default), the cell will clear itself as part of the display cycle",
            "itemtype": "property",
            "name": "cleared",
            "type": "Boolean",
            "default": "true",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5083,
            "description": "Display cycle flag - on true (default), the cell will compile itself as part of the display cycle",
            "itemtype": "property",
            "name": "compiled",
            "type": "Boolean",
            "default": "true",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5090,
            "description": "Display cycle flag - on true (default), the cell will show itself as part of the display cycle",
            "itemtype": "property",
            "name": "shown",
            "type": "Boolean",
            "default": "true",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5097,
            "description": "Display cycle attribute - order in which the cell will compile itself (if compile attribute = true)",
            "itemtype": "property",
            "name": "compileOrder",
            "type": "Number",
            "default": "0",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5104,
            "description": "Display cycle attribute - order in which the cell will show itself (if show attribute = true)",
            "itemtype": "property",
            "name": "showOrder",
            "type": "Number",
            "default": "0",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5113,
            "description": "Cell constructor hook function - core module",
            "itemtype": "method",
            "name": "coreCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5198,
            "description": "Cell constructor hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5204,
            "description": "Cell constructor hook function - modified by filters extension",
            "itemtype": "method",
            "name": "filtersCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5210,
            "description": "Cell constructor hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5216,
            "description": "Augments Position.get(), to allow users to get values for sourceX, sourceY, startX, startY, targetX, targetY, handleX, handleY, width, height",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5257,
            "description": "Cell.get hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationCellGet",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5265,
            "description": "Augments Position.set(), to allow users to set the start, handle, and source attributes using startX, startY, targetX, targetY, handleX, handleY, sourceX, sourceY.\n\nNote - setting the argument attribute __resolve__ to true will force a recalculation of the cell's copy and passte data; this is useful in particular for cells that do not undertake a full display cycle (when their cleared or compiled attributes have been set to false)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5334,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setDirtyStarts",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5354,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setDirtyHandles",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5374,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setActualHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5394,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setActualWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5414,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setPasteHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5432,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setPasteWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5450,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setCopyHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5464,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setCopyWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5478,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setPasteVector",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5501,
            "description": "Augments Cell.set()",
            "itemtype": "method",
            "name": "setCopyVector",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5520,
            "description": "Cell.set hook function - modified by animation extension",
            "itemtype": "method",
            "name": "animationCellSet",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5526,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Position.setDelta to allow changes to be made using attributes: source, sourceX, sourceY, sourceWidth, sourceHeight, start, startX, startY, target, targetX, targetY, targetWidth, targetHeight, globalAlpha\n\nNote - setting the argument attribute __resolve__ to true will force a recalculation of the cell's copy and passte data; this is useful in particular for cells that do not undertake a full display cycle (when their cleared or compiled attributes have been set to false)",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5595,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaGlobalAlpha",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5609,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaRoll",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5623,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaActualHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5647,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaActualWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5671,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaPasteHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5693,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaCopyHeight",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5708,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaPasteWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5730,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaCopyWidth",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5745,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaPaste",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5775,
            "description": "Adds the value of each attribute supplied in the argument to existing values\n\nAugments Cell.setDelta",
            "itemtype": "method",
            "name": "setDeltaCopy",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                },
                {
                    "name": "recalc",
                    "description": "When true (default), triggers variable recalculation",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5801,
            "description": "Set the Cell's &lt;canvas&gt; context engine to the specification supplied by the entity about to be drawn on the canvas",
            "itemtype": "method",
            "name": "setEngine",
            "params": [
                {
                    "name": "entity",
                    "description": "Entity object",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "Entity object"
            },
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5918,
            "description": "groupSort",
            "itemtype": "method",
            "name": "groupSort",
            "return": {
                "description": "nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5930,
            "description": "Clear the Cell's &lt;canvas&gt; element using JavaScript ctx.clearRect()",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5953,
            "description": "Prepare to draw entitys onto the Cell's &lt;canvas&gt; element, in line with the Cell's group Array\n\n(This function is replaced by the Filters extension)",
            "itemtype": "method",
            "name": "compile",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5974,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "rotateDestination",
            "params": [
                {
                    "name": "engine",
                    "description": "Javascript canvas context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5999,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "prepareToCopyCell",
            "params": [
                {
                    "name": "engine",
                    "description": "Javascript canvas context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6020,
            "description": "Cell.prepareToCopyCell hook function - modified by path extension",
            "itemtype": "method",
            "name": "pathPrepareToCopyCell",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6026,
            "description": "Cell.setCopy update copyData object values",
            "itemtype": "method",
            "name": "setCopy",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6070,
            "description": "Cell.setPaste helper function",
            "itemtype": "method",
            "name": "setReference",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6101,
            "description": "Cell.setPaste update pasteData object values",
            "itemtype": "method",
            "name": "setPaste",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6160,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "copyCellToSelf",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME of cell to be copied onto this cell's &lt;canvas&gt; element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6200,
            "description": "Entity stamp helper function",
            "itemtype": "method",
            "name": "clearShadow",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6217,
            "description": "Entity stamp helper function",
            "itemtype": "method",
            "name": "restoreShadow",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6236,
            "description": "Entity stamp helper function",
            "itemtype": "method",
            "name": "setToClearShape",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6256,
            "description": "Amend the physical dimensions of the Cell's &lt;canvas&gt; element\n\nOmitting the argument will force the &lt;canvas&gt; to set itself to its Pad object's dimensions",
            "itemtype": "method",
            "name": "setDimensions",
            "params": [
                {
                    "name": "items",
                    "description": "Argument with __width__ and/or __height__ attributes, in pixels",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6284,
            "description": "Perform a JavaScript ctx.save() operation",
            "itemtype": "method",
            "name": "saveContext",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6294,
            "description": "Perform a JavaScript ctx.restore() operation",
            "itemtype": "method",
            "name": "restoreContext",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6304,
            "description": "Capture an image of the cell's &lt;canvas&gt; element using the JavaScript ctx.getImageData() operation\n\nArgument is an Object in the form:\n\n* {x:Number, y:Number, width:Number, height:Number}\n\nDefault values are:\n\n* {0, 0, this.actualWidth, this.actualHeight}",
            "itemtype": "method",
            "name": "getImageData",
            "params": [
                {
                    "name": "dimensions",
                    "description": "Details of the &lt;canvas&gt; area to be saved",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "String label pointing to where the image has been saved in the scrawl library - scrawl.imageData[STRING]"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6368,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Context'",
            "final": 1,
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6377,
            "description": "Color, gradient or pattern used to fill a entity. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String\n* GRADIENTNAME String\n* RADIALGRADIENTNAME String\n* PATTERNNAME String",
            "itemtype": "property",
            "name": "fillStyle",
            "type": "String",
            "default": "'#000000'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6390,
            "description": "Shape and Path entity fill method. Can be:\n\n* 'nonzero' - all areas enclosed by the entity's path are flooded\n* 'evenodd' - only 'odd' areas of the entity's path are flooded",
            "itemtype": "property",
            "name": "winding",
            "type": "String",
            "default": "'nonzero'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6400,
            "description": "Color, gradient or pattern used to outline a entity. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String\n* GRADIENTNAME String\n* RADIALGRADIENTNAME String\n* PATTERNNAME String",
            "itemtype": "property",
            "name": "strokeStyle",
            "type": "String",
            "default": "'#000000'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6413,
            "description": "Entity transparency - a value between 0 and 1, where 0 is completely transparent and 1 is completely opaque",
            "itemtype": "property",
            "name": "globalAlpha",
            "type": "Number",
            "default": "1",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6420,
            "description": "Compositing method for applying the entity to an existing Cell (&lt;canvas&gt;) display. Permitted values include\n\n* 'source-over'\n* 'source-atop'\n* 'source-in'\n* 'source-out'\n* 'destination-over'\n* 'destination-atop'\n* 'destination-in'\n* 'destination-out'\n* 'lighter'\n* 'darker'\n* 'copy'\n* 'xor'\n\n_Be aware that different browsers render these operations in different ways, and some options are not supported by all browsers_",
            "itemtype": "property",
            "name": "globalCompositeOperation",
            "type": "String",
            "default": "'source-over'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6443,
            "description": "Line width, in pixels",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "default": "1",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6450,
            "description": "Line cap styling. Permitted values include:\n\n* 'butt'\n* 'round'\n* 'square'",
            "itemtype": "property",
            "name": "lineCap",
            "type": "String",
            "default": "'butt'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6462,
            "description": "Line join styling. Permitted values include:\n\n* 'miter'\n* 'round'\n* 'bevel'",
            "itemtype": "property",
            "name": "lineJoin",
            "type": "String",
            "default": "'miter'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6474,
            "description": "Line dash format - an array of Numbers representing line and gap values (in pixels), for example [5,2,2,2] for a long-short dash pattern",
            "itemtype": "property",
            "name": "lineDash",
            "type": "Array",
            "default": "[]",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6481,
            "description": "Line dash offset - distance along the entity's outline at which to start the line dash. Changing this value can be used to create a 'marching ants effect",
            "itemtype": "property",
            "name": "lineDashOffset",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6488,
            "description": "miterLimit - affecting the 'pointiness' of the line join where two lines join at an acute angle",
            "itemtype": "property",
            "name": "miterLimit",
            "type": "Number",
            "default": "10",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6495,
            "description": "Horizontal offset of a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetX",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6502,
            "description": "Vertical offset of a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetY",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6509,
            "description": "Blur border for a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowBlur",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6516,
            "description": "Color used for entity shadow effect. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String",
            "itemtype": "property",
            "name": "shadowColor",
            "type": "String",
            "default": "'rgba(0,0,0,0)'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6526,
            "description": "Cascading Style Sheet font String, for Phrase entitys",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "default": "'10pt sans-serif'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6533,
            "description": "Text alignment for multi-line Phrase entitys. Permitted values include:\n\n* 'start'\n* 'left'\n* 'center'\n* 'right'\n* 'end'",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "default": "'start'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6547,
            "description": "Text baseline value for single-line Phrase entitys set to follow a Path entity path. Permitted values include:\n\n* 'alphabetic'\n* 'top'\n* 'hanging'\n* 'middle'\n* 'ideographic'\n* 'bottom'",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "default": "'alphabetic'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6565,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function - lineDashOffset, lineWidth, globalAlpha\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6605,
            "description": "Interrogates a &lt;canvas&gt; element's context engine and populates its own attributes with returned values\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "getContextFromEngine",
            "params": [
                {
                    "name": "ctx",
                    "description": "&lt;canvas&gt; element context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6626,
            "description": "Interrogates a &lt;canvas&gt; element's context engine and returns an object of non-default attributes",
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6646,
            "description": "Interrogates a &lt;canvas&gt; element's context engine and populates its own attributes with returned values\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "getChanges",
            "params": [
                {
                    "name": "ctx",
                    "description": "&lt;canvas&gt; element context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6724,
            "description": "Array of SPRITENAME Strings of entitys that comprise this Group",
            "itemtype": "property",
            "name": "entitys",
            "type": "Array",
            "default": "[]",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6731,
            "description": "CELLNAME of the default Cell object to which this group is associated",
            "itemtype": "property",
            "name": "cell",
            "type": "String",
            "default": "''",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6738,
            "description": "Group order value - lower order Groups are drawn on &lt;canvas&gt; elements before higher order Groups",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6745,
            "description": "Resort flag",
            "itemtype": "property",
            "name": "resort",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6753,
            "description": "Visibility flag - Group entitys will (in general) not be drawn on a &lt;canvas&gt; element when this flag is set to false",
            "itemtype": "property",
            "name": "visibility",
            "type": "Boolean",
            "default": "true",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6760,
            "description": "Sorting flag - when set to true, Groups will sort their constituent entity object according to their entity.order attribute for each iteration of the display cycle",
            "itemtype": "property",
            "name": "entitySort",
            "type": "Boolean",
            "default": "true",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6767,
            "description": "Collision checking radius, in pixels - as a first step in a collision check, the Group will winnow potential collisions according to how close the checked entity is to the current reference entity or mouse coordinate; when set to 0, this collision check step is skipped and all entitys move on to the next step",
            "itemtype": "property",
            "name": "regionRadius",
            "type": "Number",
            "default": "0",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6780,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Group'",
            "final": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6798,
            "description": "set",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6812,
            "description": "Entity sorting routine - entitys are sorted according to their entity.order attribute value, in ascending order\n\nOrder values are treated as integers. The sort routine is a form of bucket sort, and should be stable (entitys with equal order values should not be swapped)",
            "itemtype": "method",
            "name": "sortEntitys",
            "params": [
                {
                    "name": "force",
                    "description": "Force a resort, whatever the settings of the group's entitySort and resort attributes",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6827,
            "description": "Tell the Group to ask _all_ of its constituent entitys to draw themselves on a &lt;canvas&gt; element, regardless of their visibility",
            "itemtype": "method",
            "name": "forceStamp",
            "params": [
                {
                    "name": "method",
                    "description": "Drawing method String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6844,
            "description": "Tell the Group to ask its constituent entitys to draw themselves on a &lt;canvas&gt; element; only entitys whose visibility attribute is set to true will comply",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Drawing method String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6874,
            "description": "Add entitys to the Group",
            "itemtype": "method",
            "name": "addEntitysToGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of SPRITENAME Strings; alternatively, a single SPRITENAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6918,
            "description": "Remove entitys from the Group",
            "itemtype": "method",
            "name": "removeEntitysFromGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of SPRITENAME Strings; alternatively, a single SPRITENAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6962,
            "description": "Ask all entitys in the Group to perform a setDelta() operation\n\nstart delta coordinates can be supplied in the form of __x__ and __y__ attributes in the argument object, in addition to the more normal __startX__ and __startY__ attributes",
            "itemtype": "method",
            "name": "updateEntitysBy",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6990,
            "description": "Ask all entitys in the Group to perform a set() operation",
            "itemtype": "method",
            "name": "setEntitysTo",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7006,
            "description": "Require all entitys in the Group to set their pivot attribute to the supplied POINTNAME or SPRITENAME string, and set their handle Vector to reflect the current vector between that entity or Point object's start Vector and their own Vector\n\nThis has the effect of turning a set of disparate entitys into a single, coordinated group.",
            "itemtype": "method",
            "name": "pivotEntitysTo",
            "params": [
                {
                    "name": "item",
                    "description": "SPRITENAME or POINTNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7048,
            "description": "Check all entitys in the Group to see if they are colliding with the supplied coordinate. The check is done in reverse order after the entitys have been sorted; the entity Object with the highest order value that is colliding with the coordinate is returned",
            "itemtype": "method",
            "name": "getEntityAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Entity object, or false if no entitys are colliding with the coordinate"
            },
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7081,
            "description": "Check all entitys in the Group to see which one(s) are associated with a particular mouse index",
            "itemtype": "method",
            "name": "getEntitysByMouseIndex",
            "params": [
                {
                    "name": "item",
                    "description": "Mouse index string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of Entity objects"
            },
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7103,
            "description": "Check all entitys in the Group to see if they are colliding with the supplied coordinate. The check is done in reverse order after the entitys have been sorted; all entitys (in the group) colliding with the coordinate are returned as an array of entity objects",
            "itemtype": "method",
            "name": "getAllEntitysAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Array of Entity objects"
            },
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7138,
            "description": "Augments Group.set()",
            "itemtype": "method",
            "name": "setDirtyStarts",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7159,
            "description": "Augments Group.set()",
            "itemtype": "method",
            "name": "setDirtyHandles",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7217,
            "description": "CTXNAME of this Entity's Context object",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7225,
            "description": "GROUPNAME String for this entity's default group\n\n_Note: a entity can belong to more than one group by being added to other Group objects via the __scrawl.addEntitysToGroups()__ and __Group.addEntityToGroup()__ functions_",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "default": "''",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7234,
            "description": "Display cycle flag; if set to true, entity will not change the &lt;canvas&gt; element's context engine's settings before drawing itself on the cell",
            "itemtype": "property",
            "name": "fastStamp",
            "type": "Boolean",
            "default": "false",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7241,
            "description": "Scaling flag; set to true to ensure lineWidth scales in line with the scale attribute value",
            "itemtype": "property",
            "name": "scaleOutline",
            "type": "Boolean",
            "default": "true",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7248,
            "description": "Entity order value - lower order entitys are drawn on &lt;canvas&gt; elements before higher order entitys",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7255,
            "description": "Visibility flag - entitys will (in general) not be drawn on a &lt;canvas&gt; element when this flag is set to false",
            "itemtype": "property",
            "name": "visibility",
            "type": "Boolean",
            "default": "true",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7262,
            "description": "Entity drawing method. An entity can be drawn onto a &lt;canvas&gt; element in a variety of ways; these methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas\n\n_Note: not all entitys support all of these operations_",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'fill'",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7287,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Entity'",
            "final": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7299,
            "description": "Current SVGTiny data string for the entity (only supported by Path and Shape entitys)",
            "itemtype": "property",
            "name": "data",
            "type": "String",
            "default": "''",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7306,
            "description": "Entity radius, in pixels - not supported by all entity objects",
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7319,
            "description": "Entity constructor hook function - modified by filters extension",
            "itemtype": "method",
            "name": "filtersEntityInit",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7325,
            "description": "Entity constructor hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsEntityConstructor",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7331,
            "description": "Constructor helper function - register entity object in the scrawl library",
            "itemtype": "method",
            "name": "registerInLibrary",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7345,
            "description": "Entity.registerInLibrary hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsEntityRegisterInLibrary",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7351,
            "description": "Augments Position.get()\n\nAllows users to retrieve a entity's Context object's values via the entity",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "attribute key string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7370,
            "description": "Augments Position.set()\n\nAllows users to:\n* set a entity's Context object's values via the entity\n* shift a entity between groups",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7402,
            "description": "Entity.set hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsEntitySet",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7408,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function\n\nAllows users to amend a entity's Context object's values via the entity, in addition to its own attribute values",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7429,
            "description": "Entity.setDelta hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsEntitySetDelta",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7435,
            "description": "Augments Position.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7461,
            "description": "Constructor helper function - discover this entity's default group affiliation",
            "itemtype": "method",
            "name": "getGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Constructor argument",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "GROUPNAME String"
            },
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7477,
            "description": "Helper function - get a entity's cell onbject",
            "itemtype": "method",
            "name": "getEntityCell",
            "return": {
                "description": "Cell object"
            },
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7486,
            "description": "Stamp function - instruct entity to draw itself on a Cell's &lt;canvas&gt; element, regardless of the setting of its visibility attribute\n\nPermitted methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas",
            "itemtype": "method",
            "name": "forceStamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7516,
            "description": "Stamp function - instruct entity to draw itself on a Cell's &lt;canvas&gt; element, if its visibility attribute is true\n\nPermitted methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7577,
            "description": "stamp helper function - amended by collisions extension",
            "itemtype": "method",
            "name": "resetCollisionPoints",
            "return": {
                "description": "this"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7584,
            "description": "Entity.stamp hook function - modified by path extension",
            "itemtype": "method",
            "name": "pathStamp",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7590,
            "description": "Entity.stamp hook function - modified by filters extension",
            "itemtype": "method",
            "name": "stampFilter",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7597,
            "description": "Stamp helper function - rotate and position canvas ready for drawing entity",
            "itemtype": "method",
            "name": "rotateCell",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "Cell name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7623,
            "description": "Entity.getStartValues",
            "itemtype": "method",
            "name": "getStartValues",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7635,
            "description": "Entity.getHandleValues",
            "itemtype": "method",
            "name": "getHandleValues",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7647,
            "description": "Entity.getStart",
            "itemtype": "method",
            "name": "getStart",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7658,
            "description": "Stamp helper function - perform a 'clear' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7673,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7688,
            "description": "Stamp helper function - perform a 'draw' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7703,
            "description": "Stamp helper function - perform a 'fill' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7718,
            "description": "Stamp helper function - perform a 'drawFill' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7733,
            "description": "Stamp helper function - perform a 'fillDraw' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7748,
            "description": "Stamp helper function - perform a 'sinkInto' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7763,
            "description": "Stamp helper function - perform a 'floatOver' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7778,
            "description": "Stamp helper function - perform a 'clip' method draw\n\n_Note: not supported by this entity_",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7793,
            "description": "Stamp helper function - perform a 'none' method draw. This involves setting the &lt;canvas&gt; element's context engine's values with this entity's context values, but not defining or drawing the entity on the canvas.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7807,
            "description": "Stamp helper function - clear shadow parameters during a multi draw operation (drawFill and fillDraw methods)",
            "itemtype": "method",
            "name": "clearShadow",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7823,
            "description": "Stamp helper function - clear shadow parameters during a multi draw operation (Phrase text-along-path drawFill and fillDraw methods)",
            "itemtype": "method",
            "name": "restoreShadow",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7839,
            "description": "Set entity's pivot to 'mouse'; set handles to supplied Vector value; set order to +9999",
            "itemtype": "method",
            "name": "pickupEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an object with {x, y} attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7863,
            "description": "Revert pickupEntity() actions, ensuring entity is left where the user drops it",
            "itemtype": "method",
            "name": "dropEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Alternative pivot String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7887,
            "description": "Check Cell coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Entity",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7964,
            "description": "Drawing flag - when set to 'entity' (or true), will use entity-based coordinates to calculate the start and end points of the gradient; when set to 'cell' (or false - default), will use Cell-based coordinates",
            "itemtype": "property",
            "name": "lockTo",
            "type": "String - or alternatively Boolean",
            "default": "'cell'",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7974,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Design'",
            "final": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 7983,
            "description": "Array of JavaScript Objects representing color stop data\n\nObjects take the form {color:String, stop:Number} where:\n\n* __color__ attribute can be any legitimate CSS color string\n* __stop can be any number between O and 0.999999 (not 1)",
            "itemtype": "property",
            "name": "color",
            "type": "Array of JavaScript objects",
            "default": "[{color: 'black', stop: 0},{color: 'white', stop: 0.999999}]",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8002,
            "description": "Drawing flag - when set to true, force the gradient to update each drawing cycle - only required in the simplest scenes where fillStyle and strokeStyle do not change between entities",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "Boolean",
            "default": "false",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8009,
            "description": "CELLNAME String of &lt;canvas&gt; element context engine on which the gradient has been set",
            "itemtype": "property",
            "name": "cell",
            "type": "String",
            "default": "''",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8016,
            "description": "Horizontal start coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "startX",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8023,
            "description": "Vertical start coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "startY",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8030,
            "description": "Horizontal end coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "endX",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8037,
            "description": "Vertical end coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "endY",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8046,
            "description": "Update values to Number attributes\n\nWill also accept an object containing start and end attributes, each of which can include x, y, startX, startY, r, startRadius and/or endRadius attributes",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8086,
            "description": "Add values to Number attributes",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8127,
            "description": "Creates the gradient\n\n_This function is replaced by the animation extension_",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "entity",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8142,
            "description": "Returns &lt;canvas&gt; element's contenxt engine's gradient object, or 'rgba(0,0,0,0)' on failure",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "JavaScript Gradient object, or String"
            },
            "access": "private",
            "tagname": "",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8151,
            "description": "Design.update() helper function - builds &lt;canvas&gt; element's contenxt engine's gradient object",
            "itemtype": "method",
            "name": "makeGradient",
            "params": [
                {
                    "name": "entity",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8328,
            "description": "Design.update() helper function - applies color attribute objects to the gradient",
            "itemtype": "method",
            "name": "applyStops",
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8347,
            "description": "Remove this gradient from the scrawl library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8389,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Gradient'",
            "final": 1,
            "class": "Gradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8430,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'RadialGradient'",
            "final": 1,
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8439,
            "description": "Start circle radius, in pixels or percentage of entity/cell width",
            "itemtype": "property",
            "name": "startRadius",
            "type": "Number (by default), or String percentage value",
            "default": "0",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8446,
            "description": "End circle radius, in pixels or percentage of entity/cell width",
            "itemtype": "property",
            "name": "endRadius",
            "type": "Number (by default), or String percentage value",
            "default": "0 (though in practice, an undefined end radius will default to the entity's width, or the cell's width)",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8466,
            "description": "A __factory__ function to generate new Animation objects",
            "itemtype": "method",
            "name": "makeAnimation",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Animation object"
            },
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8475,
            "description": "Alias for makeAnimation()",
            "itemtype": "method",
            "name": "newAnimation",
            "deprecated": true,
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8484,
            "description": "Animation flag: set to false to stop animation loop",
            "itemtype": "property",
            "name": "doAnimation",
            "type": "{Boolean}",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8490,
            "description": "Animation ordering flag - when set to false, the ordering of animations is skipped; default: true",
            "itemtype": "property",
            "name": "orderAnimations",
            "type": "{Boolean}",
            "default": "true",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8498,
            "description": "The Scrawl animation loop\n\nAnimation loop is invoked automatically as part of the initialization process\n\nScrawl will run all Animation objects whose ANIMATIONNAME Strings are included in the __scrawl.animate__ Array\n\nAll animation can be halted by setting the __scrawl.doAnimation__ flag to false\n\nTo restart animation, either call __scrawl.initialize()__, or set _scrawl.doAnimation_ to true and call __scrawl.animationLoop()",
            "itemtype": "method",
            "name": "animationLoop",
            "return": {
                "description": "Recursively calls itself - never returns"
            },
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8531,
            "description": "Animation sorting routine - animation objects are sorted according to their animation.order attribute value, in ascending order",
            "itemtype": "method",
            "name": "sortAnimations",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8543,
            "description": "Starts the animation loop",
            "itemtype": "method",
            "name": "animationInit",
            "access": "private",
            "tagname": "",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8598,
            "description": "Pseudo-attribute used to prevent immediate running of animation when first created\n\n_This attribute is not retained by the Animation object_",
            "itemtype": "property",
            "name": "delay",
            "type": "Boolean",
            "default": "false",
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8612,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Animation'",
            "final": 1,
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8621,
            "description": "Anonymous function for an animation routine",
            "itemtype": "property",
            "name": "fn",
            "type": "Function",
            "default": "function(){}",
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8628,
            "description": "Lower order animations are run during each frame before higher order ones",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8637,
            "description": "Run an animation",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8646,
            "description": "Check to see if animation is running",
            "itemtype": "method",
            "name": "isRunning",
            "return": {
                "description": "true if active; false otherwise"
            },
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8654,
            "description": "Stop an animation",
            "itemtype": "method",
            "name": "halt",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 8663,
            "description": "Remove this Animation from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 50,
            "description": "Utility canvases - never displayed",
            "itemtype": "property",
            "name": "scrawl.work.filterCanvas",
            "type": "{CasnvasObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 59,
            "description": "Utility canvas 2d context engine",
            "itemtype": "property",
            "name": "scrawl.work.filterCvx",
            "type": "{CasnvasContextObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 66,
            "description": "Array of FILTERNAME strings, for filters to be applied to the Pad",
            "itemtype": "property",
            "name": "Pad.filters",
            "type": "Array",
            "default": "[]",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 73,
            "description": "Array of FILTERNAME strings, for filters to be applied to the Cell",
            "itemtype": "property",
            "name": "Cell.filters",
            "type": "Array",
            "default": "[]",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 80,
            "description": "Array of FILTERNAME strings, for filters to be applied to this entity",
            "itemtype": "property",
            "name": "Entity.filters",
            "type": "Array",
            "default": "[]",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 87,
            "description": "Filter flag - when true, will draw the entity; on false (default), the clip method is used instead",
            "itemtype": "property",
            "name": "Entity.filterOnStroke",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 94,
            "description": "The filterLevel attribute determines at which point in the display cycle the filter will be applied. Permitted values are:\n\n* '__entity__' - filter is applied immediately after the Entity has stamped itself onto a cell\n* '__cell__' - filter is applied after all Entites have completed stamping themselves onto the cell\n* '__pad__' - filter is applied to the base canvas after all cells have completed copying themselves onto it, and before the base cell copies itself onto the display cell",
            "itemtype": "property",
            "name": "Entity.filterLevel",
            "type": "String",
            "default": "'entity'",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 124,
            "description": "Pad constructor hook function - modified by filters module\n\nAdds the filters attribute to Pad objects",
            "itemtype": "method",
            "name": "filtersPadInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 134,
            "description": "Cell constructor hook function - modified by filters module\n\nAdds the filters attribute to Cell objects",
            "itemtype": "method",
            "name": "filtersCellInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 144,
            "description": "Entity constructor hook function - modified by filters module\n\nAdds the filters, filterOnStroke and filterLevel attributes to Entity objects",
            "itemtype": "method",
            "name": "filtersEntityInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 159,
            "description": "Alias for makeGreyscaleFilter()",
            "itemtype": "method",
            "name": "newGreyscaleFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 167,
            "description": "Alias for makeInvertFilter()",
            "itemtype": "method",
            "name": "newInvertFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 175,
            "description": "Alias for makeBrightnessFilter()",
            "itemtype": "method",
            "name": "newBrightnessFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 183,
            "description": "Alias for makeSaturationFilter()",
            "itemtype": "method",
            "name": "newSaturationFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 191,
            "description": "Alias for makeThresholdFilter()",
            "itemtype": "method",
            "name": "newThresholdFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 199,
            "description": "Alias for makeChannelsFilter()",
            "itemtype": "method",
            "name": "newChannelsFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 207,
            "description": "Alias for makeChannelStepFilter()",
            "itemtype": "method",
            "name": "newChannelStepFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 215,
            "description": "Alias for makeTintFilter()",
            "itemtype": "method",
            "name": "newTintFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 223,
            "description": "Alias for makeSepiaFilter()",
            "itemtype": "method",
            "name": "newSepiaFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 231,
            "description": "Alias for makeMatrixFilter()",
            "itemtype": "method",
            "name": "newMatrixFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 239,
            "description": "Alias for makeSharpenFilter()",
            "itemtype": "method",
            "name": "newSharpenFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 247,
            "description": "Alias for makePixelateFilter()",
            "itemtype": "method",
            "name": "newPixelateFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 255,
            "description": "Alias for makeBlurFilter()",
            "itemtype": "method",
            "name": "newBlurFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 263,
            "description": "Alias for makeLeachFilter()",
            "itemtype": "method",
            "name": "newLeachFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 271,
            "description": "Alias for makeSeparateFilter()",
            "itemtype": "method",
            "name": "newSeparateFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 279,
            "description": "Alias for makeNoiseFilter()",
            "itemtype": "method",
            "name": "newNoiseFilter",
            "deprecated": true,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 287,
            "description": "A __factory__ function to generate new Greyscale filter objects",
            "itemtype": "method",
            "name": "makeGreyscaleFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "GreyscaleFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 296,
            "description": "A __factory__ function to generate new Invert filter objects",
            "itemtype": "method",
            "name": "makeInvertFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "InvertFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 305,
            "description": "A __factory__ function to generate new Brightness filter objects",
            "itemtype": "method",
            "name": "makeBrightnessFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "BrightnessFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 314,
            "description": "A __factory__ function to generate new Saturation filter objects",
            "itemtype": "method",
            "name": "makeSaturationFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "SaturationFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 323,
            "description": "A __factory__ function to generate new Threshold filter objects",
            "itemtype": "method",
            "name": "makeThresholdFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ThresholdFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 332,
            "description": "A __factory__ function to generate new Channels filter objects",
            "itemtype": "method",
            "name": "makeChannelsFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ChannelsFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 341,
            "description": "A __factory__ function to generate new ChannelStep filter objects",
            "itemtype": "method",
            "name": "makeChannelStepFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ChannelStepFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 350,
            "description": "A __factory__ function to generate new Tint filter objects",
            "itemtype": "method",
            "name": "makeTintFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "TintFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 359,
            "description": "A __factory__ function to generate new Sepia filter objects preset with values for creating a sepia tint",
            "itemtype": "method",
            "name": "newSepiaFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "TintFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 377,
            "description": "A __factory__ function to generate new Matrix filter objects",
            "itemtype": "method",
            "name": "makeMatrixFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "MatrixFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 386,
            "description": "A __factory__ function to generate new Sharpen filter objects",
            "itemtype": "method",
            "name": "makeSharpenFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "SharpenFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 396,
            "description": "A __factory__ function to generate new Pixelate filter objects",
            "itemtype": "method",
            "name": "makePixelateFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "PixelateFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 405,
            "description": "A __factory__ function to generate new Blur filter objects",
            "itemtype": "method",
            "name": "makeBlurFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "BlurFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 414,
            "description": "A __factory__ function to generate new Leach filter objects",
            "itemtype": "method",
            "name": "makeLeachFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "LeachFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 423,
            "description": "A __factory__ function to generate new Separate filter objects",
            "itemtype": "method",
            "name": "makeSeparateFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "SeparateFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 432,
            "description": "A __factory__ function to generate new Noise filter objects",
            "itemtype": "method",
            "name": "makeNoiseFilter",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "NoiseFilter object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 442,
            "description": "Display function - requests Cells to compile their &lt;canvas&gt; element\n\nCells will compile in ascending order of their compileOrder attributes, if their compiled attribute = true\n\nBy default:\n* the initial base canvas has a compileOrder of 9999 and compiles last\n* the initial display canvas has compiled = false and will not compile\n\n(As amended by Filters module)",
            "itemtype": "method",
            "name": "compile",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 473,
            "description": "Display function - requests Cells to show their &lt;canvas&gt; element \n\nCells will show in ascending order of their showOrder attributes, if their show attribute = true\n\nBy default, the initial base and display canvases have shown = false:\n* 'show' involves a cell copying itself onto the base cell; it makes no sense for the base cell to copy onto itself\n* the last action is to copy the base cell onto the display cell\n\n(As amended by Filters module)",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 517,
            "description": "Prepare to draw entitys onto the Cell's &lt;canvas&gt; element, in line with the Cell's group Array \n\n(As amended by Filters module)",
            "itemtype": "method",
            "name": "compileFilters",
            "return": {
                "description": "always true"
            },
            "chainable": 1,
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 548,
            "description": "Entity.stampFilter helper object",
            "itemtype": "method",
            "name": "stampFilterActions (not a function)",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 576,
            "description": "reciprocal assignment - also occurs in scrawlFrame as there's no way to tell which file (scrawlFrame, scrawlFilters) will be loaded first",
            "itemtype": "method",
            "name": "stampFilterActions",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 584,
            "description": "Entity.stamp hook function - add a filter to an Entity, and any background detail enclosed by the Entity",
            "itemtype": "method",
            "name": "stampFilter",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 651,
            "description": "Entity.stamp hook helper function",
            "itemtype": "method",
            "name": "stampFilterPhrase",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 692,
            "description": "Entity.stamp hook helper function",
            "itemtype": "method",
            "name": "stampFilterWheel",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 725,
            "description": "Entity.stamp hook helper function",
            "itemtype": "method",
            "name": "stampFilterPicture",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 752,
            "description": "Entity.stamp hook helper function",
            "itemtype": "method",
            "name": "stampFilterDefault",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 795,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 804,
            "description": "Filter alpha\n\nvalues between 0 (transparent) and 1 (current alpha values); or '0%' and '100%'",
            "itemtype": "property",
            "name": "alpha",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 813,
            "description": "Filter composite operation\n\nOnly the final filter in an array of filters will determine the composite operation to be used on the cell",
            "itemtype": "property",
            "name": "composite",
            "type": "String",
            "default": "'source-over'",
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 824,
            "description": "Add function - overwritten by individual filters",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "original image data"
            },
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 834,
            "description": "cloneImageData function",
            "itemtype": "method",
            "name": "cloneImageData",
            "params": [
                {
                    "name": "original",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "cloned image data object; false on error"
            },
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 858,
            "description": "getAlpha function",
            "itemtype": "method",
            "name": "getAlpha",
            "return": {
                "description": "numerical strength value, between 0 and 1"
            },
            "access": "private",
            "tagname": "",
            "class": "Filter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 902,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "GreyscaleFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 912,
            "description": "Add function - takes data, calculates its greyscale and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "GreyscaleFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 976,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "InvertFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 986,
            "description": "Add function - takes data, calculates its invert and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "InvertFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1048,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "BrightnessFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1057,
            "description": "Percentage value of brightness effect: as a Number, between 0 (black) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Values can go above 1 or 100%",
            "itemtype": "property",
            "name": "brightness",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "BrightnessFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1067,
            "description": "Add function - takes data, calculates its brightness and replaces the old color data with new",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "BrightnessFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1132,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "SaturationFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1141,
            "description": "Percentage value of saturation effect: as a Number, between 0 (uniform grey) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Values can go above 1 or 100%",
            "itemtype": "property",
            "name": "saturation",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "SaturationFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1151,
            "description": "Add function - takes data, calculates its saturation and replaces the old color data with new",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "SaturationFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1216,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "ThresholdFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1225,
            "description": "Percentage value of threshold effect: as a Number, between 0 (all black) and 1 (all white); as a String, between '0%' and '100%' (default: 0.5).",
            "itemtype": "property",
            "name": "threshold",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "ThresholdFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1235,
            "description": "Add function - takes data, calculates its threshold and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "ThresholdFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1307,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "ChannelsFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1316,
            "description": "value of red channel, from 0 or 0% upwards beyond 1 or 100%",
            "itemtype": "property",
            "name": "red",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "ChannelsFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1324,
            "description": "value of green channel, from 0 or 0% upwards beyond 1 or 100%",
            "itemtype": "property",
            "name": "green",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "ChannelsFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1332,
            "description": "value of blue channel, from 0 or 0% upwards beyond 1 or 100%",
            "itemtype": "property",
            "name": "blue",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "ChannelsFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1342,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "ChannelsFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1416,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "ChannelStepFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1425,
            "description": "Step value of red channel, between 1 (256 steps, default) and 128 (2 steps)",
            "itemtype": "property",
            "name": "red",
            "type": "Number",
            "default": "1",
            "class": "ChannelStepFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1433,
            "description": "Step value of green channel, between 1 (256 steps, default) and 128 (2 steps)",
            "itemtype": "property",
            "name": "green",
            "type": "Number",
            "default": "1",
            "class": "ChannelStepFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1441,
            "description": "Step value of blue channel, between 1 (256 steps, default) and 128 (2 steps)",
            "itemtype": "property",
            "name": "blue",
            "type": "Number",
            "default": "1",
            "class": "ChannelStepFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1451,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "ChannelStepFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1539,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1548,
            "itemtype": "property",
            "name": "redInRed",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1554,
            "itemtype": "property",
            "name": "greenInRed",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1560,
            "itemtype": "property",
            "name": "blueInRed",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1566,
            "itemtype": "property",
            "name": "redInGreen",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1572,
            "itemtype": "property",
            "name": "greenInGreen",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1578,
            "itemtype": "property",
            "name": "blueInGreen",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1584,
            "itemtype": "property",
            "name": "redInBlue",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1590,
            "itemtype": "property",
            "name": "greenInBlue",
            "type": "Number - or alternatively percentage String",
            "default": "0",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1596,
            "itemtype": "property",
            "name": "blueInBlue",
            "type": "Number - or alternatively percentage String",
            "default": "1",
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1604,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "TintFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1699,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1708,
            "description": "Matrix maximum width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "1",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1716,
            "description": "Matrix maximum height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "1",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1724,
            "description": "Home cell along the horizontal",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1732,
            "description": "Home cell along the vertical",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1740,
            "itemtype": "property",
            "name": "includeInvisiblePoints",
            "type": "Number",
            "default": "false",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1746,
            "description": "Data is made up of an array of weightings - for instance a 3 x 3 matrix will contain 9 Number values; this data then gets converted into Matrix cells\n\nThe data array has no meaning without width and height dimensions - if no dimension values are supplied, the constructor will assume a odd-numbered square larger than the square root of the length of the data array (eg 3x3, 5x5), with home coordinates at the center of the square, and pad empty spaces at the end of the array with zero weights (which then get ignored)",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "default": "false",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1758,
            "description": "Set attribute values.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1773,
            "description": "SetFilter builds the matrix from width, height and data attributes already supplied to the filter via the constructor or MatrixFilter.set()",
            "itemtype": "method",
            "name": "setFilter",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1833,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "MatrixFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1986,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 1995,
            "description": "Pixelization width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "5",
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2003,
            "description": "Pixelization height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "5",
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2011,
            "description": "Horizontal coordinate from which to begin pexelization",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2019,
            "description": "Vertical coordinate from which to begin pexelization",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2029,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "PixelateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2156,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2165,
            "itemtype": "property",
            "name": "radiusX",
            "type": "Number",
            "default": "2",
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2171,
            "itemtype": "property",
            "name": "radiusY",
            "type": "Number",
            "default": "2",
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2177,
            "itemtype": "property",
            "name": "skip",
            "type": "Number",
            "default": "1",
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2183,
            "itemtype": "property",
            "name": "roll",
            "type": "Number",
            "default": "0",
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2189,
            "itemtype": "property",
            "name": "includeInvisiblePoints",
            "type": "Number",
            "default": "false",
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2197,
            "description": "Set attribute values.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2211,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2330,
            "description": "Blur helper function",
            "itemtype": "method",
            "name": "getBrush",
            "params": [
                {
                    "name": "x",
                    "description": "brush x radius",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "brush y radius",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "brush roll (in degrees)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Array of objects used for the blur brush"
            },
            "class": "BlurFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2416,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "LeachFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2425,
            "description": "Unlike other filters, the leach filter uses an 'xor' GCO to stamp itself onto the canvas - this is changeable, if necessary",
            "itemtype": "property",
            "name": "operation",
            "type": "String",
            "default": "'xor'",
            "class": "LeachFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2433,
            "description": "The exclude array should contain a set of arrays defining the color ranges to be leached (have their alpha values set to 0) from the image. Each array within the exclude array must include the following six numbers in exactly this order: \n\n[minRed, minGreen, minBlue, maxRed, maxGreen, maxBlue]\n\n... where the numbers are integers between 0 and 255",
            "itemtype": "property",
            "name": "exclude",
            "type": "Array",
            "default": "[]",
            "class": "LeachFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2447,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "LeachFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2532,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "SeparateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2541,
            "description": "Can be one of: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'",
            "itemtype": "property",
            "name": "channel",
            "type": "String",
            "default": "'all'",
            "class": "SeparateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2551,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "SeparateFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2654,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Filter'",
            "final": 1,
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2663,
            "itemtype": "property",
            "name": "radiusX",
            "type": "Number",
            "default": "2",
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2669,
            "itemtype": "property",
            "name": "radiusY",
            "type": "Number",
            "default": "2",
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2675,
            "itemtype": "property",
            "name": "roll",
            "type": "Number",
            "default": "0",
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2681,
            "itemtype": "property",
            "name": "strength",
            "type": "Number",
            "default": "0.3",
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2689,
            "description": "Set attribute values.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2700,
            "description": "Set attribute values.",
            "itemtype": "method",
            "name": "getBrush",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 2711,
            "description": "Add function - takes data, calculates its channels and combines it with data",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "data",
                    "description": "- canvas getImageData object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "NoiseFilter",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 52,
            "description": "Alias for makeFramePoint()",
            "itemtype": "method",
            "name": "newFramePoint",
            "deprecated": true,
            "class": "window.scrawl_Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 60,
            "description": "A __factory__ function to generate new FramePoint entitys",
            "itemtype": "method",
            "name": "makeFramePoint",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "FramePoint object"
            },
            "class": "window.scrawl_Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 69,
            "description": "Alias for makeFrame()",
            "itemtype": "method",
            "name": "newFrame",
            "deprecated": true,
            "class": "window.scrawl_Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 77,
            "description": "A __factory__ function to generate new Frame entitys",
            "itemtype": "method",
            "name": "makeFrame",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Frame object"
            },
            "class": "window.scrawl_Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 132,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'FramePoint'",
            "final": 1,
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 140,
            "description": "Frame emtity to which this frame corner belongs",
            "itemtype": "property",
            "name": "host",
            "type": "String - FRAMENAME String of the host frame",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 148,
            "description": "Data should always be an array in the form [x, y, z]",
            "itemtype": "property",
            "name": "data",
            "type": "Array - consisting of [x, y, z] coordinates",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 156,
            "description": "reference - defines how, and from where, the local coordinates for this FramePoint will be calculated\n\nPermitted values include: 'data', 'lock', 'entity', 'cell', 'point', 'stack', 'pad', 'element', 'particle'",
            "itemtype": "property",
            "name": "data",
            "type": "String",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 166,
            "itemtype": "property",
            "name": "pivot",
            "type": "String - ENTITYNAME, CELLNAME etc of object FramePoint will use as its pivot",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 173,
            "itemtype": "property",
            "name": "lock",
            "type": "Boolean - true if host Frame is using a Stack Element for positioning; false otherwise",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 180,
            "itemtype": "property",
            "name": "lockCorner",
            "type": "String - if lock == true, will be set to one of four values: 'topLeft', 'topRight', 'bottomRight', 'bottomLeft'",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 187,
            "itemtype": "property",
            "name": "local",
            "type": "Vector - current coordinates for this FramePoint's position",
            "default": "Object - {x:0, y:0, z:0}",
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 198,
            "description": "The ENTITYNAME of a Path entity whose path is used to calculate this object's start point",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 205,
            "description": "A value between 0 and 1 to represent the distance along a Path object's path, where 0 is the path start and 1 is the path end",
            "itemtype": "property",
            "name": "pathPlace",
            "type": "Number",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 212,
            "description": "A change value which can be applied to the object's pathPlace attribute",
            "itemtype": "property",
            "name": "deltaPathPlace",
            "type": "Number",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 219,
            "description": "A flag to determine whether the object will calculate its position along a Shape path in a regular (true), or simple (false), manner",
            "itemtype": "property",
            "name": "pathSpeedConstant",
            "type": "Boolean",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 226,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the X axis",
            "itemtype": "property",
            "name": "lockX",
            "type": "Boolean",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 233,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the Y axis",
            "itemtype": "property",
            "name": "lockY",
            "type": "Boolean",
            "default": "false",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 243,
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Name of attribute to return",
                    "type": "String"
                }
            ],
            "return": {
                "description": "attribute"
            },
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 251,
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 274,
            "description": "Funtion to set the reference attribute - a string flag to inform the code where the positioning data will originate:\n\n* _data_ - user/code will supply position through a position array\n* _lock_ - position determined by a corner div within a positioning element in a stack\n* _entity_, _cell_, _point_, _stack_, _pad_, _element_, _particle_ - positioned using a pivot or path; string value defines which part of the Scrawl library the pivot or path will be found",
            "itemtype": "method",
            "name": "setReference",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 327,
            "description": "Update the local positioning vector",
            "itemtype": "method",
            "name": "setLocal",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 379,
            "description": "setLocal() helper function - position supplied in data array\n\nData should always be an array in the form [x, y, z]",
            "itemtype": "method",
            "name": "setLocalFromData",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 399,
            "description": "setLocalFromData() helper function - convert percentage/literal strings to numeric values",
            "itemtype": "method",
            "name": "setLocalFromDataString",
            "params": [
                {
                    "name": "item",
                    "description": "percentage string or string position value",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "description": "Host's cell's actualWidth or actualHeight",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Number calculated position value"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 423,
            "description": "setLocal() helper function - position supplied by Path entity",
            "itemtype": "method",
            "name": "setLocalFromPath",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "FramePoint",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 557,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Frame'",
            "final": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 566,
            "description": "Current coordinate for top left corner",
            "itemtype": "property",
            "name": "topLeft",
            "type": "Object - {x:Number, y:Number}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 574,
            "description": "Current coordinate for top right corner",
            "itemtype": "property",
            "name": "topRight",
            "type": "Object - {x:Number, y:Number}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 582,
            "description": "Current coordinate for bottom right corner",
            "itemtype": "property",
            "name": "bottomRight",
            "type": "Object - {x:Number, y:Number}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 590,
            "description": "Current coordinate for bottom left corner",
            "itemtype": "property",
            "name": "bottomLeft",
            "type": "Object - {x:Number, y:Number}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 598,
            "description": "Enclosing width of entity",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 606,
            "description": "Enclosing height of entity",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 614,
            "description": "Used as part of core entity collision detection functionality - must always be the same as width attribute",
            "itemtype": "property",
            "name": "localWidth",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 622,
            "description": "Used as part of core entity collision detection functionality - must always be the same as height attribute",
            "itemtype": "property",
            "name": "localHeight",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 630,
            "description": "Top left corner reference point for enclosing dimension box of entity",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "1",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 637,
            "description": "If present, the DOM &lt;div&gt; element being used to position entity within the stack",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "DOM element object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 645,
            "description": "Entity drawing method. A entity can be drawn onto a &lt;canvas&gt; element in a variety of ways; these methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas\n\n_Note: not all entitys support all of these operations_",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'fill'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 665,
            "description": "Visibility flag - entitys will (in general) not be drawn on a &lt;canvas&gt; element when this flag is set to false",
            "itemtype": "property",
            "name": "visibility",
            "type": "Boolean",
            "default": "true",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 672,
            "description": "Entity order value - lower order entitys are drawn on &lt;canvas&gt; elements before higher order entitys",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 679,
            "description": "ELEMENTNAME of stack element which frame entity will use for positioning data",
            "itemtype": "property",
            "name": "lockFrameTo",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 686,
            "description": "JavaScript Object containing key:value pairs - used to cascade data to underlying stack element (if present)",
            "itemtype": "property",
            "name": "lockElementAttributes",
            "type": "Object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 694,
            "description": "Entity transparency - a value between 0 and 1, where 0 is completely transparent and 1 is completely opaque",
            "itemtype": "property",
            "name": "globalAlpha",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 702,
            "description": "Compositing method for applying the entity to an existing Cell (&lt;canvas&gt;) display. Permitted values include\n\n* 'source-over'\n* 'source-atop'\n* 'source-in'\n* 'source-out'\n* 'destination-over'\n* 'destination-atop'\n* 'destination-in'\n* 'destination-out'\n* 'lighter'\n* 'darker'\n* 'copy'\n* 'xor'\n\n_Be aware that different browsers render these operations in different ways, and some options are not supported by all browsers_",
            "itemtype": "property",
            "name": "globalCompositeOperation",
            "type": "String",
            "default": "'source-over'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 725,
            "description": "Outline width, in pixels",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 732,
            "description": "Outline cap styling. Permitted values include:\n\n* 'butt'\n* 'round'\n* 'square'",
            "itemtype": "property",
            "name": "lineCap",
            "type": "String",
            "default": "'butt'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 744,
            "description": "Outline join styling. Permitted values include:\n\n* 'miter'\n* 'round'\n* 'bevel'",
            "itemtype": "property",
            "name": "lineJoin",
            "type": "String",
            "default": "'miter'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 756,
            "description": "Outline dash format - an array of Numbers representing line and gap values (in pixels), for example [5,2,2,2] for a long-short dash pattern",
            "itemtype": "property",
            "name": "lineDash",
            "type": "Array",
            "default": "[]",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 763,
            "description": "Outline dash offset - distance along the entity's outline at which to start the line dash. Changing this value can be used to create a 'marching ants effect",
            "itemtype": "property",
            "name": "lineDashOffset",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 770,
            "description": "miterLimit - affecting the 'pointiness' of the outline join where two lines join at an acute angle",
            "itemtype": "property",
            "name": "miterLimit",
            "type": "Number",
            "default": "10",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 777,
            "description": "Color, gradient or pattern used to outline a entity. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String\n* GRADIENTNAME String\n* RADIALGRADIENTNAME String\n* PATTERNNAME String",
            "itemtype": "property",
            "name": "strokeStyle",
            "type": "String",
            "default": "'#000000'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 790,
            "description": "Horizontal offset of a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetX",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 797,
            "description": "Vertical offset of a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetY",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 804,
            "description": "Blur border for a entity's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowBlur",
            "type": "Number",
            "default": "0",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 811,
            "description": "Color used for entity shadow effect. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String",
            "itemtype": "property",
            "name": "shadowColor",
            "type": "String",
            "default": "'#000000'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 821,
            "description": "ASSETNAME or CANVASNAME of source asset used to fill frame",
            "itemtype": "property",
            "name": "source",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 829,
            "description": "Every Frame entity includes its own personal &lt;canvas&gt; element, which is not part of the DOM and which can only be accessed through this attribute",
            "itemtype": "property",
            "name": "cell",
            "type": "DOM canvas element",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 837,
            "description": "The Frame entity's &lt;canvas&gt; element's 2d context engine - not stored in the scrawl library and can only be accessed through this attribute",
            "itemtype": "property",
            "name": "engine",
            "type": "CanvasRenderingContext2D interface",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 845,
            "description": "Array of FILTERNAME strings, for filters to be applied to this entity",
            "itemtype": "property",
            "name": "filters",
            "type": "Array",
            "default": "[]",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 852,
            "description": "Filter flag - when true, will draw the entity; on false (default), the clip method is used instead",
            "itemtype": "property",
            "name": "filterOnStroke",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 859,
            "description": "The filterLevel attribute determines at which point in the display cycle the filter will be applied. Permitted values are:\n\n* '__entity__' - filter is applied immediately after the Entity has stamped itself onto a cell\n* '__cell__' - filter is applied after all Entites have completed stamping themselves onto the cell\n* '__pad__' - filter is applied to the base canvas after all cells have completed copying themselves onto it, and before the base cell copies itself onto the display cell",
            "itemtype": "property",
            "name": "filterLevel",
            "type": "String",
            "default": "'entity'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 871,
            "description": "The ENTITYNAME or POINTNAME of a entity or Point object to be used for setting this object's start point - will only affect any underlying stack div element used for positioning the frame entity. \n\nNote that each corner can also have its own pivot reference",
            "itemtype": "property",
            "name": "pivot",
            "type": "String",
            "default": "null",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 880,
            "description": "The ENTITYNAME of a Path entity to be used for setting this entity's start point - will only affect any underlying stack div element used for positioning the frame entity. \n\nNote that each corner can also have its own path reference",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "default": "null",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 889,
            "description": "Index of mouse vector to use when pivot === 'mouse'\n\nThe Pad.mice object can hold details of multiple touch events - when an entity is assigned to a 'mouse', it needs to know which of those mouse trackers to use. Default: mouse (for the mouse cursor vector)",
            "itemtype": "property",
            "name": "mouseIndex",
            "type": "String",
            "default": "'mouse'",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 898,
            "description": "Reflection flag; set to true to flip entity, cell or element along the Y axis - this has no meaning to Frame entitys (which can be repositioned either by directly repositioning corners, or by rotating any associated stack element), but has to be included for compatibility with core entity functionality",
            "itemtype": "property",
            "name": "flipReverse",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 905,
            "description": "Reflection flag; set to true to flip entity, cell or element along the X axis - this has no meaning to Frame entitys (which can be repositioned either by directly repositioning corners, or by rotating any associated stack element), but has to be included for compatibility with core entity functionality",
            "itemtype": "property",
            "name": "flipUpend",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 912,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the X axis - will only affect any underlying stack div element used for positioning the frame entity. Note that each corner can also be individually restricted",
            "itemtype": "property",
            "name": "lockX",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 919,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the Y axis - will only affect any underlying stack div element used for positioning the frame entity. Note that each corner can also be individually restricted",
            "itemtype": "property",
            "name": "lockY",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 926,
            "description": "GROUPNAME String for this entity's default group\n\n_Note: an entity can belong to more than one group by being added to other Group objects via the __scrawl.addEntitysToGroups()__ and __Group.addEntityToGroup()__ functions_",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 935,
            "description": "Dirty flag - sets to true when certain entity attributes change",
            "itemtype": "property",
            "name": "redraw",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 943,
            "description": "The current Frame drawing process often leads to moire interference patterns appearing in the resulting image. Scrawl uses resizing to blur out these patterns. The interferenceLoops attribute sets the number of times the image gets resized; if patterns still appear in the final image, increase this value",
            "itemtype": "property",
            "name": "interferenceLoops",
            "type": "Number",
            "default": "2",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 950,
            "description": "The current Frame drawing process often leads to moire interference patterns appearing in the resulting image. Scrawl uses resizing to blur out these patterns. The interferenceFactor attribute sets the resizing ratio; if patterns still appear in the final image, change this value to something more appropriate",
            "itemtype": "property",
            "name": "interferenceFactor",
            "type": "Number",
            "default": "1.03",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 957,
            "description": "Maximum dimensions - used as part of entity filter and collision detection functionality",
            "itemtype": "property",
            "name": "maxDimensions",
            "type": "Object",
            "default": "{top:0, bottom:0, left:0, right:0, flag:true}",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 972,
            "description": "Attribute cascaded to appropriate FramePoint object path attribute",
            "itemtype": "property",
            "name": "topLeftPath",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 978,
            "description": "Attribute cascaded to appropriate FramePoint object path attribute",
            "itemtype": "property",
            "name": "topRightPath",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 984,
            "description": "Attribute cascaded to appropriate FramePoint object path attribute",
            "itemtype": "property",
            "name": "bottomRightPath",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 990,
            "description": "Attribute cascaded to appropriate FramePoint object path attribute",
            "itemtype": "property",
            "name": "bottomLeftPath",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 996,
            "description": "Attribute cascaded to appropriate FramePoint object pathPlace attribute",
            "itemtype": "property",
            "name": "topLeftPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1002,
            "description": "Attribute cascaded to appropriate FramePoint object pathPlace attribute",
            "itemtype": "property",
            "name": "topRightPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1008,
            "description": "Attribute cascaded to appropriate FramePoint object pathPlace attribute",
            "itemtype": "property",
            "name": "bottomRightPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1014,
            "description": "Attribute cascaded to appropriate FramePoint object pathPlace attribute",
            "itemtype": "property",
            "name": "bottomLeftPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1020,
            "description": "Attribute cascaded to appropriate FramePoint object deltaPathPlace attribute",
            "itemtype": "property",
            "name": "topLeftDeltaPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1026,
            "description": "Attribute cascaded to appropriate FramePoint object deltaPathPlace attribute",
            "itemtype": "property",
            "name": "topRightDeltaPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1032,
            "description": "Attribute cascaded to appropriate FramePoint object deltaPathPlace attribute",
            "itemtype": "property",
            "name": "bottomRightDeltaPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1038,
            "description": "Attribute cascaded to appropriate FramePoint object deltaPathPlace attribute",
            "itemtype": "property",
            "name": "bottomLeftDeltaPathPlace",
            "type": "Number",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1044,
            "description": "Attribute cascaded to appropriate FramePoint object pathSpeedConstant attribute",
            "itemtype": "property",
            "name": "topLeftPathSpeedConstant",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1050,
            "description": "Attribute cascaded to appropriate FramePoint object pathSpeedConstant attribute",
            "itemtype": "property",
            "name": "topRightPathSpeedConstant",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1056,
            "description": "Attribute cascaded to appropriate FramePoint object pathSpeedConstant attribute",
            "itemtype": "property",
            "name": "bottomRightPathSpeedConstant",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1062,
            "description": "Attribute cascaded to appropriate FramePoint object pathSpeedConstant attribute",
            "itemtype": "property",
            "name": "bottomLeftPathSpeedConstant",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1068,
            "description": "Attribute cascaded to appropriate FramePoint object pivot attribute",
            "itemtype": "property",
            "name": "topLeftPivot",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1074,
            "description": "Attribute cascaded to appropriate FramePoint object pivot attribute",
            "itemtype": "property",
            "name": "topRightPivot",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1080,
            "description": "Attribute cascaded to appropriate FramePoint object pivot attribute",
            "itemtype": "property",
            "name": "bottomRightPivot",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1086,
            "description": "Attribute cascaded to appropriate FramePoint object pivot attribute",
            "itemtype": "property",
            "name": "bottomLeftPivot",
            "type": "String",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1092,
            "description": "Attribute cascaded to appropriate FramePoint object lockX attribute",
            "itemtype": "property",
            "name": "topLeftLockX",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1098,
            "description": "Attribute cascaded to appropriate FramePoint object lockX attribute",
            "itemtype": "property",
            "name": "topRightLockX",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1104,
            "description": "Attribute cascaded to appropriate FramePoint object lockX attribute",
            "itemtype": "property",
            "name": "bottomRightLockX",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1110,
            "description": "Attribute cascaded to appropriate FramePoint object lockX attribute",
            "itemtype": "property",
            "name": "bottomLeftLockX",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1116,
            "description": "Attribute cascaded to appropriate FramePoint object lockY attribute",
            "itemtype": "property",
            "name": "topLeftLockY",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1122,
            "description": "Attribute cascaded to appropriate FramePoint object lockY attribute",
            "itemtype": "property",
            "name": "topRightLockY",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1128,
            "description": "Attribute cascaded to appropriate FramePoint object lockY attribute",
            "itemtype": "property",
            "name": "bottomRightLockY",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1134,
            "description": "Attribute cascaded to appropriate FramePoint object lockY attribute",
            "itemtype": "property",
            "name": "bottomLeftLockY",
            "type": "Boolean",
            "default": "false",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1141,
            "description": "Frame.registerInLibrary hook function - modified by collisions extension",
            "itemtype": "method",
            "name": "collisionsEntityRegisterInLibrary",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1149,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1188,
            "description": "Augments Base.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1216,
            "itemtype": "method",
            "name": "setCorners",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1286,
            "itemtype": "method",
            "name": "getCorners",
            "return": {
                "description": "Object containing x/y coordinate objects for each corner"
            },
            "example": [
                "\n\tReturns an object with the following structure:\n    \n    {\n\t\ttopLeft: {x: 0, y:0},\n\t\ttopRight: {x: 0, y:0},\n\t\tbottomRight: {x: 0, y:0},\n\t\tbottomLeft: {x: 0, y:0}\n    }"
            ],
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1315,
            "itemtype": "method",
            "name": "checkCorners",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1338,
            "itemtype": "method",
            "name": "setEngine",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1402,
            "itemtype": "method",
            "name": "setDestinationEngine",
            "params": [
                {
                    "name": "Object",
                    "description": "ctx - 2d context engine"
                },
                {
                    "name": "String",
                    "description": "- CELLNAME"
                },
                {
                    "name": "Object",
                    "description": "- scrawl Cell object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1481,
            "description": "Attach a Frame entity to an existing stack element, or create a new stack &lt;div&gt; element",
            "itemtype": "method",
            "name": "lockOn",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1523,
            "description": "Array of key Strings used to whitelist the permitted attributes for cascade to stack element, if present. Used by lockElementAttributes attribute",
            "itemtype": "property",
            "name": "lockElementAttributesList",
            "type": "Array",
            "default": "['start', 'startX', 'startY', 'handle', 'handleX', 'handleY', 'deltaStart', 'deltaStartX', 'deltaStartY', 'deltaHandle', 'deltaHandleX', 'deltaHandleY', 'width', 'height', 'scale', 'deltaScale', 'deltaRoll', 'deltaPitch', 'deltaYaw', 'roll', 'pitch', 'yaw', 'includeCornerTrackers', 'pivot', 'path', 'pathPlace', 'deltaPathPlace', 'pathSpeedConstant', 'translate', 'translateX', 'translateY', 'translateZ', 'mouseIndex', 'cursor']",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1531,
            "itemtype": "method",
            "name": "setLockElementAttributes",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1553,
            "description": "Stamp function - instruct entity to draw itself on a Cell's &lt;canvas&gt; element, regardless of the setting of its visibility attribute\n\nPermitted methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas",
            "itemtype": "method",
            "name": "forceStamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1583,
            "description": "Stamp function - instruct entity to draw itself on a Cell's &lt;canvas&gt; element, if its visibility attribute is true\n\nPermitted methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1622,
            "description": "Entity constructor hook function - modified by filters module",
            "itemtype": "method",
            "name": "filtersEntityInit",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1630,
            "description": "Entity.stamp hook function - add a filter to an Entity, and any background detail enclosed by the Entity",
            "itemtype": "method",
            "name": "stampFilter",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1638,
            "description": "Entity.stamp hook helper function",
            "itemtype": "method",
            "name": "stampFilterDefault",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1647,
            "description": "Draw Frame entity in its own local canvas, then copy over to destimation canvas",
            "itemtype": "method",
            "name": "redrawCanvas",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1759,
            "description": "redrawCanvas helper function - updates copy parameters",
            "itemtype": "method",
            "name": "updateCurrentCopy",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1788,
            "description": "redrawCanvas helper function",
            "itemtype": "method",
            "name": "getPosition",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1796,
            "description": "redrawCanvas helper function",
            "itemtype": "method",
            "name": "getLength",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1804,
            "description": "redrawCanvas helper function",
            "itemtype": "method",
            "name": "getAngle",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1812,
            "description": "redrawCanvas helper function",
            "itemtype": "method",
            "name": "setEasel",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1822,
            "description": "redrawCanvas helper function",
            "itemtype": "method",
            "name": "resetEasel",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1831,
            "description": "Set entity's pivot to 'mouse'; set handles to supplied Vector value; set order to +9999",
            "itemtype": "method",
            "name": "pickupEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an object with {x, y} attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1848,
            "description": "Revert pickupEntity() actions, ensuring entity is left where the user drops it",
            "itemtype": "method",
            "name": "dropEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Alternative pivot String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1865,
            "description": "stamp helper function - clear shadow parameters during a multi draw operation (drawFill and fillDraw methods)",
            "itemtype": "method",
            "name": "clearShadow",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1881,
            "description": "stamp helper function",
            "itemtype": "method",
            "name": "prepareStamp",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1893,
            "description": "stamp helper function - draw the path between the corner points",
            "itemtype": "method",
            "name": "drawPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1916,
            "description": "stamp helper function - fill thge entity",
            "itemtype": "method",
            "name": "drawImage",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1929,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1945,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1969,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 1994,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2010,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2025,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2043,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2061,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2078,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2095,
            "description": "Stamp helper function - perform a 'none' method draw. This involves setting the &lt;canvas&gt; element's context engine's values with this entity's context values, but not defining or drawing the entity on the canvas.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "cell",
                    "description": "scrawl Cell object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2110,
            "description": "Check Cell coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2142,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlFrame.js",
            "line": 2218,
            "description": "reciprocal assignment - also occurs in scrawlFilters as there's no way to tell which file (scrawlFrame, scrawlFilters) will be loaded first",
            "itemtype": "method",
            "name": "stampFilterActions",
            "access": "private",
            "tagname": "",
            "class": "Frame",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 48,
            "description": "DOM document fragment",
            "itemtype": "property",
            "name": "scrawl.work.imageFragment",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 55,
            "description": "Utility canvas - never displayed",
            "itemtype": "property",
            "name": "scrawl.work.imageCanvas",
            "type": "{CasnvasObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 64,
            "description": "Utility canvas 2d context engine",
            "itemtype": "property",
            "name": "scrawl.work.imageCvx",
            "type": "{CasnvasContextObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 71,
            "description": "Alias for makeImage()",
            "itemtype": "method",
            "name": "newImage",
            "deprecated": true,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 80,
            "description": "Alias for makeSpriteAnimation()",
            "itemtype": "method",
            "name": "newSpriteAnimation",
            "deprecated": true,
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 88,
            "description": "Alias for makeVideo()\nmethod newVideo",
            "deprecated": true,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 97,
            "description": "A __factory__ function to generate new Image objects",
            "itemtype": "method",
            "name": "makeImage",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Image object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 107,
            "description": "A __factory__ function to generate new SpriteAnimation objects",
            "itemtype": "method",
            "name": "makeSpriteAnimation",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "SpriteAnimation object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 116,
            "description": "A __factory__ function to generate new Video objects",
            "itemtype": "method",
            "name": "makeVideo",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Video object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 126,
            "description": "Work vector, for calculations",
            "itemtype": "property",
            "name": "scrawl.work.workimg",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 143,
            "description": "A __general__ function to generate Image wrapper objects for &lt;img&gt;, &lt;video&gt; or &lt;svg&gt; elements identified by class string",
            "itemtype": "method",
            "name": "getImagesByClass",
            "params": [
                {
                    "name": "classtag",
                    "description": "Class string value of DOM objects to be imported into the scrawl-canvas library",
                    "type": "String"
                },
                {
                    "name": "kill",
                    "description": "when set to true, the &lt;img&gt; elements will be removed from the DOM when imported into the library",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if one or more images are identified; false otherwise"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 180,
            "description": "A __general__ function to generate a Image wrapper object for an &lt;img&gt; or &lt;svg&gt; element identified by an id string\n\nNote: if an &lt;img&gt; (or &lt;picture&gt;) element uses the srcset attribute some browsers (eg chrome) will attempt to reload the image during browser resize. For this reason it is good policy to set this function's second argument (kill) to false, particularly if it is being used within an image load event listener. By default, the kill argument is set to true.",
            "itemtype": "method",
            "name": "getImageById",
            "params": [
                {
                    "name": "idtag",
                    "description": "Id string value of DOM object to be imported into the scrawl-canvas library",
                    "type": "String"
                },
                {
                    "name": "kill",
                    "description": "when set to true, the &lt;img&gt; element will be removed from the DOM when imported into the library",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if image is identified; false otherwise"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 215,
            "description": "Helper function",
            "itemtype": "method",
            "name": "getVideoCallback",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 226,
            "description": "A __general__ function to generate a Video wrapper object for a &lt;video&gt; element identified by an id string",
            "itemtype": "method",
            "name": "getVideoById",
            "params": [
                {
                    "name": "idtag",
                    "description": "Id string value of DOM object to be imported into the scrawl-canvas library",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "defaults to 'raw'",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if video is identified; false otherwise"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 317,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Image'",
            "final": 1,
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 326,
            "description": "DOM image actual width, in pixels",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 333,
            "description": "DOM image actual height, in pixels",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 340,
            "description": "Constructor/clone flag - if set to true (default), will remove the &lt;img&gt; element from the web page DOM\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "removeImageFromDOM",
            "type": "Boolean",
            "default": "true",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 348,
            "description": "Constructor/clone function - some functions can call the Image constructor with a callback function\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "callback",
            "type": "function",
            "default": "undefined - callback is always removed once run",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 356,
            "description": "Constructor argument attribute - a DOM &lt;img&gt; element\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "element",
            "type": "Object",
            "default": "undefined",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 364,
            "description": "Constructor argument attribute - a canvas imageData object\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "default": "undefined",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 372,
            "description": "Constructor argument attribute - a String URL for dynamically loading an image\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "url",
            "type": "Object",
            "default": "undefined",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 382,
            "description": "Adds a DOM &lt;img&gt; element to the library\n\n* items.element MUST be a reference to the element, and the element MUST be present in the DOM",
            "itemtype": "method",
            "name": "addImageByElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 413,
            "description": "Import an image using the supplied url string",
            "itemtype": "method",
            "name": "addImageByUrl",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "true; false on failure"
            },
            "access": "private",
            "tagname": "",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 466,
            "description": "Creates a new &lt;img&gt; element from a canvas ImageData object - uses Image.addImageByUrl() to achieve this",
            "itemtype": "method",
            "name": "addImageByData",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "ImageDataUrl on success, false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 489,
            "description": "Creates a new &lt;img&gt; element from an existing cell's current display - uses Image.addImageByUrl() to achieve this",
            "itemtype": "method",
            "name": "createImageFromCell",
            "params": [
                {
                    "name": "cell",
                    "description": "- name of Cell to use as the base for the new Image",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "- id attribute for the new Image",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "ImageDataUrl on success, false otherwise"
            },
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 517,
            "description": "Clone an Image object",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "new Image object on success; false otherwise"
            },
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 528,
            "description": "Check whether image's natural dimensions have changed and, if they have, update any relevant Picture entity copy data\n\n... [BUG] trying to integrate this function - not working; issues with correct scoping between the fragment img asset and the image object - 'this' currently refers to image object, but when assigned to a load listener 'this' probably refers to the fragment img asset. Particularly unhelpful if fragment asset is a clone of the DOM asset (working assumption for scrawl tour is that responsive img needs to remain in DOM if it is going to pick up chrome browser resize reloads)\n\nCurrent work-round (for scrawl tour page, which loads DOM img assets dynamically once canvas capability is confirmed) is to add a load event to each dynamically created img tag which, when triggered, invokes scrawl.getImageById(), which correctly updates everything to use the new img src file",
            "example": [
                "\nvar imageData = [\n\t{filename: 'seedhead', filesuffix: 'png', id: 'seedhead', panel: 0},\n\t{filename: 'seedhead-partial', filesuffix: 'png', id: 'seedheadPartial', panel: 0},\n\t{filename: 'whiteflower', filesuffix: 'png', id: 'whiteflower', panel: 1}\n];\nvar iTemplate_src, iTemplate_srcset, iTemplate_sizes, iContainer;\nvar lazyImageAssetLoad = function(){\n\tvar i, iz;\n\tiTemplate_src = 'assets/img/~~filename~~-1200.~~filesuffix~~';\n\tiTemplate_srcset = 'assets/img/~~filename~~-400.~~filesuffix~~ 400w, assets/img/~~filename~~-800.~~filesuffix~~ 800w, assets/img/~~filename~~-1200.~~filesuffix~~ 1200w, assets/img/~~filename~~-1600.~~filesuffix~~ 1600w, assets/img/~~filename~~-2400.~~filesuffix~~ 2400w, assets/img/~~filename~~-3600.~~filesuffix~~ 3600w';\n\tiTemplate_sizes='(min-width: 1024px) 800px, (min-width: 768px) 1200px, (min-width: 400px) 800px, (min-width: 320px) 400px, 100vw';\n\tiContainer = document.createElement('div');\n\t//set appropriate styles on iContainer to hide it; alternatively, add a css-defined classList String to it\n\tfor(i = 0, iz = imageData.length; i < iz; i++){\n\t\tiContainer.appendChild(buildImage(imageData[i]));\n\t}\n\tdocument.body.appendChild(iContainer);\n};\nvar buildImage = function(data){\n\tvar img = document.createElement('img'),\n\t\tfile = /~~filename~~/g,\n\t\tsuffix = /~~filesuffix~~/g,\n\t\tsrc = iTemplate_src.replace(file, data.filename),\n\t\tsrcset = iTemplate_srcset.replace(file, data.filename);\n\tsrc = src.replace(suffix, data.filesuffix);\n\tsrcset = srcset.replace(suffix, data.filesuffix);\n\timg.id = data.id;\n\timg.src = src;\n\timg.srcset = srcset;\n\timg.sizes = iTemplate_sizes;\n\timg.addEventListener('load', function(){\n\t\tscrawl.getImageById(data.id, false); //not moving img out of DOM, instead cloning it into scrawl.work.imageFragment\n\t}, false);\n\treturn img;\n};\nlazyImageAssetLoad();"
            ],
            "itemtype": "method",
            "name": "checkNaturalDimensions",
            "return": {
                "description": "true if dimensions have changed; false otherwise"
            },
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 598,
            "description": "Update the copyData of entitys that use this image as their source",
            "itemtype": "method",
            "name": "updateDependentEntitys",
            "return": {
                "description": "Always true"
            },
            "class": "Image",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 661,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'SpriteAnimation'",
            "final": 1,
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 670,
            "description": "An Array of animation frame data Objects, to be used for producing an animation sequence. Each Object in the Array has the following form:\n\n* {x:Number, y:Number, w:Number, h:Number, d:Number}\n\n... where:\n\n* __x__ and __y__ represent the starting coordinates for the animation frame, in pixels, from the top left corner of the image\n* __w__ and __h__ represent the dimensions of the animation frame, in pixels\n* __d__ is the duration for each frame, in milliseconds\n\nAnimation frames are played in the order they are presented in this Array",
            "itemtype": "property",
            "name": "frames",
            "type": "Array",
            "default": "[]",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 687,
            "description": "The current frame of the animation, from frame 0",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 694,
            "description": "The speed at which the animation is to play. Values less than 1 will slow the animation, while values greater than one will speed it up. Setting the speed to 0 will pause the animation",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "1",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 701,
            "description": "Playback String; permitted values include:\n\n* 'pause' - pause the animation on the current frame\n* 'end' - play the animation once (default)\n* 'loop' - play the animation continuously \n* 'reverse' - reverse the direction in which the animation runs",
            "itemtype": "property",
            "name": "loop",
            "type": "String",
            "default": "'end'",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 713,
            "description": "Animation running String: permitted values include:\n\n* 'forward' - play the animation from the first frame towards the last frame\n* 'backward' - play the animation from the last frame towards the first frame\n* 'complete' - animation has reached the last (or first) frame and has completed",
            "itemtype": "property",
            "name": "running",
            "type": "String",
            "default": "'complete'",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 724,
            "description": "Datestamp when SpriteAnimation.getData() function was last called",
            "itemtype": "property",
            "name": "lastCalled",
            "type": "Date",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 733,
            "description": "Array of keys used with SpriteAnimation object",
            "itemtype": "property",
            "name": "scrawl.work.animKeys",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 741,
            "description": "Set attribute values - will also set the __currentFrame__ attribute to the appropriate value when the running __attribute__ is changed\n\n(Only used by SpriteAnimation objects)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 778,
            "description": "Returns an Object in the form {copyX:Number, copyY:Number, copyWidth:Number, copyHeight:Number}, representing the coordinates and dimensions of the current frame to be displayed by a Picture entity\n\n(Only used by SpriteAnimation objects)",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Data object"
            },
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 812,
            "description": "getData helper object",
            "itemtype": "method",
            "name": "getDataForward",
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 831,
            "description": "getData helper object",
            "itemtype": "method",
            "name": "getDataBackward",
            "access": "private",
            "tagname": "",
            "class": "SpriteAnimation",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 898,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Video'",
            "final": 1,
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 907,
            "description": "DOM image actual width, in pixels",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 914,
            "description": "DOM image actual height, in pixels",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 921,
            "description": "Constructor/clone function - some functions can call the Video constructor with a callback function\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "callback",
            "type": "function",
            "default": "undefined - callback is always removed once run",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 929,
            "description": "Constructor argument attribute - a DOM &lt;video&gt; element\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "element",
            "type": "Object",
            "default": "undefined",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 939,
            "description": "Adds a DOM &lt;video&gt; element to the library\n\n* items.element MUST be a reference to the element, and the element MUST be present in the DOM\n* items.readyState is the readystate value (integer between 0 and 4) which must be reached before dimensions are set and any callback function triggered - default: 1 (HAVE_METADATA, loadedmetadata)",
            "itemtype": "method",
            "name": "addVideoByElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 980,
            "description": "Video constructor helper function",
            "itemtype": "method",
            "name": "setIntrinsicDimensions",
            "return": {
                "description": "always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImageLoad.js",
            "line": 1015,
            "description": "Import a video using the supplied url string - not yet coded",
            "itemtype": "method",
            "name": "addImageByUrl",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "true; false on failure"
            },
            "access": "private",
            "tagname": "",
            "class": "Video",
            "module": "scrawlFrame"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 55,
            "description": "Alias for makePattern()",
            "itemtype": "method",
            "name": "newPattern",
            "deprecated": true,
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 63,
            "description": "Alias for makePicture()",
            "itemtype": "method",
            "name": "newPicture",
            "deprecated": true,
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 71,
            "description": "A __factory__ function to generate new Pattern objects",
            "itemtype": "method",
            "name": "makePattern",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pattern object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 80,
            "description": "A __factory__ function to generate new Picture entitys",
            "itemtype": "method",
            "name": "makePicture",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture entity object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 90,
            "description": "video support\n\nFalse if device does not support the video element; true otherwise",
            "itemtype": "property",
            "name": "Device.video",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 99,
            "description": "video autoplay support\n\nFalse if device does not support video autoplay element; true otherwise",
            "itemtype": "property",
            "name": "Device.videoAutoplay",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 108,
            "description": "video fullscreen restraint\n\nFalse if device does not force videos to play in fullscreen mode; true otherwise",
            "itemtype": "property",
            "name": "Device.videoForceFullScreen",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 117,
            "description": "video as canvas source\n\nFalse if device does not permit video elements to be used as sources for canvas draw functions",
            "itemtype": "property",
            "name": "Device.videoAsCanvasSource",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 127,
            "description": "Check if device supports various video functionalities",
            "itemtype": "method",
            "name": "getImagesDeviceData",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 225,
            "description": "A __factory__ function to convert a entity into a Picture entity\n\nArgument attributes can include any entity positioning and styling values, alongside the following flag:\n\n* __convert__ - when set to true, existing entity will be deleted; default: false\n\nIf no name attribute is supplied in the argument object, the new Picture entity will be given the name: SPRITENAME+'_picture'",
            "itemtype": "method",
            "name": "Entity.convertToPicture",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture entity object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 253,
            "description": "A __factory__ function to convert a group of entitys into a single Picture entity\n\nArgument attributes can include any entity positioning and styling values, alongside the following flag:\n\n* __convert__ - when set to true, existing entitys in the group will be deleted; default: false\n\nIf no name attribute is supplied in the argument object, the new Picture entity will be given the name: GROUPNAME+'_entity'",
            "itemtype": "method",
            "name": "Group.convertGroupToPicture",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture entity object; false if no entitys contained in group"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 283,
            "description": "Helper function for convert functions",
            "itemtype": "method",
            "name": "prepareConvert",
            "return": {
                "description": "ImageData object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 324,
            "description": "Helper function for convert functions",
            "itemtype": "method",
            "name": "doConvert",
            "return": {
                "description": "Picture entity object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 387,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Pattern'",
            "final": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 396,
            "description": "Drawing parameter",
            "itemtype": "property",
            "name": "repeat",
            "type": "String",
            "default": "'repeat'",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 403,
            "description": "CELLNAME, VIDEONAME or IMAGENAME of Pattern source data",
            "itemtype": "property",
            "name": "source",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 410,
            "description": "Drawing flag - when set to true, force the pattern to update each drawing cycle - only required in the simplest scenes where fillStyle and strokeStyle do not change between entities",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "Boolean",
            "default": "false",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 417,
            "description": "Asynchronous loading of image file from the server - path/to/image file\n\nUsed only with __scrawl.makePattern()__ and __Pattern.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 425,
            "description": "Asynchronous loading of image file from the server - function to run once image has successfully loaded\n\nUsed only with __scrawl.makePattern()__ and __Pattern.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "callback",
            "type": "Function",
            "default": "undefined",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 436,
            "description": "Constructor/set helper",
            "itemtype": "method",
            "name": "getSourceType",
            "return": {
                "description": "String - one from: 'image', 'cell', 'video'; false on failure to identify source type"
            },
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 455,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 468,
            "description": "Returns &lt;canvas&gt; element's contenxt engine's pattern object, or 'rgba(0,0,0,0)' on failure",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "JavaScript pattern object, or String"
            },
            "access": "private",
            "tagname": "",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 481,
            "description": "Builds &lt;canvas&gt; element's contenxt engine's pattern object",
            "itemtype": "method",
            "name": "makeDesign",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 520,
            "description": "Remove this pattern from the scrawl-canvas library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 531,
            "description": "Alias for Pattern.makeDesign()",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 610,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Picture'",
            "final": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 619,
            "description": "IMAGENAME String - source image for this entity",
            "itemtype": "property",
            "name": "source",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 626,
            "description": "IMAGEDATANAME String - name of the Image Data object\n\nCalculated automatically by scrawl-canvas following a .getImageData() call",
            "itemtype": "property",
            "name": "imageData",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 635,
            "description": "Collision attribute - name of channel to be checked against during collision detection\n\nPermitted values: 'red', 'blue', 'green', 'alpha'",
            "itemtype": "property",
            "name": "imageDataChannel",
            "type": "String",
            "default": "'alpha'",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 644,
            "description": "SPRITEANIMATIONNAME String - Entity sheet image linked to this entity",
            "itemtype": "property",
            "name": "animSheet",
            "type": "String",
            "default": ";;",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 651,
            "description": "Identifier String - permitted values include: 'animation', 'canvas', 'img'\n\nDetected automatically by scrawl-canvas during entity construction",
            "itemtype": "property",
            "name": "imageType",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 661,
            "description": "Collision flag - when true, Picture entity will use imageData to determine whether a collision has occured; when false, a simpler box collision system is used",
            "itemtype": "property",
            "name": "checkHitUsingImageData",
            "type": "Boolean",
            "default": "false",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 668,
            "description": "The coordinate Vector representing the Picture's copy source position on its source;\n\nPicture supports the following 'virtual' attributes for this attribute:\n\n* __copyX__ - (Number) the x coordinate on the source\n* __copyY__ - (Number) the y coordinate on the sourcecopy",
            "itemtype": "property",
            "name": "copy",
            "type": "Vector",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 680,
            "description": "Copy width, in pixels. Determines which portion of this Picture's source will be copied",
            "itemtype": "property",
            "name": "copyWidth",
            "type": "Number",
            "default": "300",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 687,
            "description": "Copy height, in pixels. Determines which portion of this Picture's source will be copied",
            "itemtype": "property",
            "name": "copyHeight",
            "type": "Number",
            "default": "150",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 694,
            "description": "Local source data",
            "itemtype": "property",
            "name": "copyData",
            "type": "Object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 702,
            "description": "Local target data",
            "itemtype": "property",
            "name": "pasteData",
            "type": "Object",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 710,
            "description": "Asynchronous loading of image file from the server - path/to/image file\n\nUsed only with __scrawl.makePicture()__ and __Picture.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 718,
            "description": "Asynchronous loading of image file from the server - function to run once image has successfully loaded\n\nUsed only with __scrawl.makePicture()__ and __Picture.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "callback",
            "type": "Function",
            "default": "undefined",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 729,
            "description": "Augments Entity.get()",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute to be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 749,
            "description": "Augments Entity.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 798,
            "description": "Augments Entity.setDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 860,
            "description": "Picture.setCopy update copyData object values",
            "itemtype": "method",
            "name": "setCopy",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 917,
            "description": "Picture.setPaste update pasteData object values",
            "itemtype": "method",
            "name": "setPaste",
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 946,
            "description": "Augments Entity.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 961,
            "description": "Clone helper function",
            "itemtype": "method",
            "name": "fitToImageSize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 981,
            "description": "Constructor and clone helper function",
            "itemtype": "method",
            "name": "sourceImage",
            "return": {
                "description": "Correct imageType attribute value for this entity"
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1003,
            "description": "Stamp helper function - update source and copy (for dynamically loading images)",
            "itemtype": "method",
            "name": "checkSource",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1017,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1038,
            "description": "Stamp helper function - perform a 'none' method draw",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1050,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1068,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1094,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1113,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1135,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1159,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1183,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1206,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1230,
            "description": "Display helper function - retrieve copy attributes for Image object, taking into account the current frame for entity sheet images\n\nAlso generates new filtered images, when necessary",
            "itemtype": "method",
            "name": "getImage",
            "return": {
                "description": "Image Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1244,
            "description": "getImage helper object",
            "itemtype": "method",
            "name": "getImageActions",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1281,
            "description": "Load the Picture entity's image data (via JavaScript getImageData() function) into the scrawl-canvas library",
            "itemtype": "method",
            "name": "getImageData",
            "params": [
                {
                    "name": "label",
                    "description": "IMAGEDATANAME - default: PICTURENAME_data",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1306,
            "description": "Get the pixel color or channel data from Picture object's image at given coordinate\n\nArgument needs to have __x__ and __y__ data (pixel coordinates) and, optionally, a __channel__ string - 'red', 'blue', 'green', 'alpha' (default), 'color'",
            "itemtype": "method",
            "name": "getImageDataValue",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate Vector or Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Color value at coordinate; false if no color found"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1347,
            "description": "getImageDataValue helper object",
            "itemtype": "method",
            "name": "getImageDataValueActions",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1368,
            "description": "Check Cell coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1434,
            "description": "Revert pickupEntity() actions, ensuring entity is left where the user drops it",
            "itemtype": "method",
            "name": "dropEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Alternative pivot String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1446,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 41,
            "description": "Object containing a set of vectors, for link calculations",
            "itemtype": "property",
            "name": "scrawl.work.worklink",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 94,
            "description": "scrawl.deleteEntity hook function - modified by path module",
            "itemtype": "method",
            "name": "pathDeleteEntity",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 119,
            "description": "Clone a Scrawl.js object, optionally altering attribute values in the cloned object\n\n(This function replaces the core function)",
            "itemtype": "method",
            "name": "Base.clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs; will overwrite existing values in the cloned, but not the source, Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "example": [
                "\n    var box = scrawl.makeBlock({\n        width: 50,\n        height: 50,\n        });\n    var newBox = box.clone({\n        height: 100,\n        });\n    newBox.get('width');        //returns 50\n    newBox.get('height');       //returns 100"
            ],
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 165,
            "description": "Position constructor hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 178,
            "description": "Position.setDelta hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionSetDelta",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 188,
            "description": "Cell.prepareToCopyCell hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPrepareToCopyCell",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 205,
            "description": "Entity.stamp hook function - modified by path module",
            "itemtype": "method",
            "name": "pathStamp",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 225,
            "description": "Alias for makePoint()",
            "itemtype": "method",
            "name": "newPoint",
            "deprecated": true,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 234,
            "description": "Alias for makeLink()",
            "itemtype": "method",
            "name": "newLink",
            "deprecated": true,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 243,
            "description": "A __factory__ function to generate new Point objects",
            "itemtype": "method",
            "name": "makePoint",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Point object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 253,
            "description": "A __factory__ function to generate new Link objects",
            "itemtype": "method",
            "name": "makeLink",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Link object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 263,
            "description": "A __factory__ function to generate new Path objects\n\n_Note: this function does NOT produce Path entitys_ - use scrawl.makePath()",
            "itemtype": "method",
            "name": "newPathObject",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Path object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 275,
            "description": "A __factory__ function to generate new Path entitys",
            "itemtype": "method",
            "name": "makePath",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Path entity"
            },
            "example": [
                "\n    scrawl.makePath({\n        startX: 50,\n        startY: 20,\n        fillStyle: 'red',\n        data: 'M0,0 50,0 60,20, 10,20 0,0z',\n        });"
            ],
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 729,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Path'",
            "final": 1,
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 738,
            "description": "POINTNAME of the Point object that commences the drawing operation\n\nSet automatically by Path creation factory functions",
            "itemtype": "property",
            "name": "firstPoint",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 748,
            "description": "Drawing flag - when set to true, will treat the first drawing (not positioning) data point as the start point\n\nGenerally this is set automatically as part of an outline factory function",
            "itemtype": "property",
            "name": "isLine",
            "type": "Boolean",
            "default": "true",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 757,
            "description": "Drawing flag - when true, path will be closed\n\n_Note: this attribute must be set to true for those drawing methods that use a fill flood as part of their operation",
            "itemtype": "property",
            "name": "closed",
            "type": "Boolean",
            "default": "true",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 766,
            "description": "Array of LINKNAME Strings for Link objects associated with this Path entity",
            "itemtype": "property",
            "name": "linkList",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 774,
            "description": "Array of length (Number) values for each Link object associated with this Path entity",
            "itemtype": "property",
            "name": "linkDurations",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 782,
            "description": "Array of POINTNAME Strings for Point objects associated with this Path entity",
            "itemtype": "property",
            "name": "pointList",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 790,
            "description": "Path length - calculated automatically by scrawl-canvas\n\n_Note: this value will be affected by the value of the precision attribute - hiher precisions lead to more accurate perimeterLength values, particularly along curves_",
            "itemtype": "property",
            "name": "perimeterLength",
            "type": "Number",
            "default": "0",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 799,
            "description": "Path marker entitys - SPRITENAME String of entity used at start of the Path",
            "itemtype": "property",
            "name": "markStart",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 806,
            "description": "Path marker entitys - SPRITENAME String of entity used at the line/curve joints along the Path",
            "itemtype": "property",
            "name": "markMid",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 813,
            "description": "Path marker entitys - SPRITENAME String of entity used at end of the Path",
            "itemtype": "property",
            "name": "markEnd",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 820,
            "description": "Path marker entitys - SPRITENAME String of entity used as the fallback when markStart, markMid or markEnd attributes are not set",
            "itemtype": "property",
            "name": "mark",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 827,
            "description": "Path entity default method attribute is 'draw', not 'fill'",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'draw'",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 834,
            "description": "Winding value",
            "itemtype": "property",
            "name": "winding",
            "type": "String",
            "default": "'non-zero'",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 841,
            "description": "Set the iterations required for calculating path length and positioning data - higher figures (eg 100) ensure entitys will follow the path more accurately",
            "itemtype": "property",
            "name": "precision",
            "type": "Number",
            "default": "10",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 850,
            "description": "Helper function - define the entity's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "prepareShape",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 871,
            "description": "Display helper function\n\nStamp mark entitys onto Path",
            "itemtype": "method",
            "name": "stampMark",
            "params": [
                {
                    "name": "entity",
                    "description": "Entity object to be stamped",
                    "type": "Entity"
                },
                {
                    "name": "pos",
                    "description": "Path position (between 0 and 1)",
                    "type": "Number"
                },
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 912,
            "description": "Display helper function\n\nPrepare mark entitys for stamping onto Path",
            "itemtype": "method",
            "name": "addMarks",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 954,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 970,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 987,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1019,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1036,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1051,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1070,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1089,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1107,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1125,
            "description": "Stamp helper function - perform a 'none' method draw. This involves setting the &lt;canvas&gt; element's context engine's values with this entity's context values and defining the entitys path, on the canvas, but not drawing (fill stroke) the entity.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1138,
            "itemtype": "method",
            "name": "getFullPointList",
            "return": {
                "description": "Array containing POINTNAME Strings of all Point objects associated with this Path object"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1157,
            "itemtype": "method",
            "name": "getFullLinkList",
            "return": {
                "description": "Array containing LINKNAME Strings of all Link objects associated with this Path object"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1176,
            "description": "Calculate and return Path object's path length\n\nAccuracy of returned value depends on the setting of the __precision__ attribute; lower precision is less accurate for curves",
            "itemtype": "method",
            "name": "getPerimeterLength",
            "params": [
                {
                    "name": "force",
                    "description": "If set to true, forces a complete recalculation",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Path length, in pixels"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1190,
            "description": "Helper function - calculate the positions and lengths of the Path's constituent Point and Link objects",
            "itemtype": "method",
            "name": "buildPositions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1230,
            "description": "Calculate coordinates of point at given distance along the Shape entity's path",
            "itemtype": "method",
            "name": "getPerimeterPosition",
            "params": [
                {
                    "name": "val",
                    "description": "Distance along path, between 0 (start) and 1 (end); default: 1",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "steady",
                    "description": "Steady flag - if true, return 'steady calculation' coordinates; otherwise return 'simple calculation' coordinates. Default: true",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "roll",
                    "description": "Roll flag - if true, return tangent angle (degrees) at that point along the path. Default: false",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "local",
                    "description": "Local flag - if true, return coordinate Vector relative to Entity start parameter; otherwise return Cell coordinate Vector. Default: false",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Vector coordinates"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1331,
            "description": "Check a set of coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1381,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the entity's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1440,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1525,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Point'",
            "final": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1534,
            "description": "SPRITENAME String of point object's parent entity",
            "itemtype": "property",
            "name": "entity",
            "type": "String",
            "default": "''",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1541,
            "description": "Point's coordinate Vector - generally the Vector marks the Point's position (in pixels) from the Parent entity's start coordinates, though this can be changed by setting the __fixed__ attribute to true.\n\nThe following argument attributes can be used to initialize, set and get this attribute's component values:\n\n* __startX__ or __currentX__ to set the x coordinate value\n* __startY__ or __currentY__ to set the y coordinate value",
            "itemtype": "property",
            "name": "local",
            "type": "Vector",
            "default": "zero value Vector",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1557,
            "description": "Point's coordinate current Vector - generally the Vector marks the Point's position (in pixels) from the Parent entity's start coordinates, though this can be changed by setting the __fixed__ attribute to true.\n\nThe following argument attributes can be used to initialize, set and get this attribute's component values:\n\n* __startX__ or __currentX__ to set the x coordinate value\n* __startY__ or __currentY__ to set the y coordinate value",
            "itemtype": "property",
            "name": "current",
            "type": "Vector",
            "default": "zero value Vector",
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1574,
            "description": "LINKNAME of Link object for which this Point acts as the start coordinate; generated automatically by the Shape creation factory functions",
            "itemtype": "property",
            "name": "startLink",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1582,
            "description": "Fixed attribute is used to fix the Point to a specific Cell coordinate Vector (true), or to a Entity start Vector (SPRITENAME). Default action is to treat the Point as local to its parent Entity's start coordinate",
            "itemtype": "property",
            "name": "fixed",
            "type": "Boolean",
            "default": "false",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1591,
            "description": "Augments Base.set(), to allow users to set the local attributes using startX, startY, currentX, currentY, distance, angle",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1618,
            "description": "Set helpere function",
            "itemtype": "method",
            "name": "setLocal",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1643,
            "description": "Add values to the local attribute. Permitted attributes of the argument object include:\n\n* __startX__, __currentX__ - added to _local.x\n* __startY__, __currentY__ - added to _local.y\n* __distance__ - recalculates the _local_ vector to set its values to equal vector's current magnitude + distance (in pixels)\n* __angle__ - recalculates the _local_ vector to rotate it by the angle value (in degrees)",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1690,
            "description": "Sets the local attribute using angle and/or distance parameters:\n\n* __distance__ - calculates the _local_ vector to set its values to equal vector's current magnitude + distance (in pixels)\n* __angle__ - calculates the _local_ vector to rotate it by the angle value (in degrees)",
            "itemtype": "method",
            "name": "setPolar",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1729,
            "description": "Retrieve Point object's coordinates, together with additional data\n\n* Coordinate reference frame determined by the value of Point.local\n* Coordinate values determined by setting of Point.fixed, Point.local and the parent Shape object's position and settings\n\nReturn object has the following attributes:\n\n* __name__ - Point.name\n* __current__ - coordinate Vector\n* __startLink__ - Point.startLink",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Result object"
            },
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1795,
            "description": "Retrieve Point object's coordinates\n\n* Coordinate reference frame determined by the value of Point.local\n* Coordinate values determined by setting of Point.fixed, Point.local and the parent Shape object's position and settings",
            "itemtype": "method",
            "name": "getCurrentCoordinates",
            "return": {
                "description": "Coordinate Vector"
            },
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1806,
            "description": "Set Point.fixed attribute",
            "itemtype": "method",
            "name": "setToFixed",
            "params": [
                {
                    "name": "items",
                    "description": "- either a coordinate Vector; or an Object with x and y attributes; or a Number representing the horizontal coordinate, in pixels, from &lt;canvas&gt; element's left edge; or a pivot SPRITENAME, POINTNAME or PARTICLENAME String",
                    "type": "Mixed"
                },
                {
                    "name": "y",
                    "description": "- vertical coordinate, in pixels, from &lt;canvas&gt; element's top edge",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1880,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Link'",
            "final": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1889,
            "description": "Type of link - permitted values include: 'line', 'quadratic', 'bezier'",
            "itemtype": "property",
            "name": "species",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1896,
            "description": "POINTNAME of start Point object - used by line, quadratic and bezier links",
            "itemtype": "property",
            "name": "startPoint",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1903,
            "description": "SPRITENAME of this Link's parent entity object",
            "itemtype": "property",
            "name": "entity",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1910,
            "description": "POINTNAME of end Point object - used by line, quadratic and bezier links",
            "itemtype": "property",
            "name": "endPoint",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1917,
            "description": "POINTNAME of first control Point object - used by quadratic and bezier links",
            "itemtype": "property",
            "name": "controlPoint1",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1924,
            "description": "POINTNAME of second control Point object - used by bezier links",
            "itemtype": "property",
            "name": "controlPoint2",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1931,
            "description": "Link object's action - permitted values include: 'add', 'move', 'close', 'end'",
            "itemtype": "property",
            "name": "startLink",
            "type": "String",
            "default": "'add'",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1938,
            "description": "Link length - this value will be affected by the value of the parent Entity object's __precision__ attribute",
            "itemtype": "property",
            "name": "length",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1946,
            "description": "Positions Arrays along the length of the Link's path - these values will be affected by the value of the parent Entity object's __precision__ attribute",
            "itemtype": "property",
            "name": "positionsX",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1954,
            "description": "Positions Arrays along the length of the Link's path - these values will be affected by the value of the parent Entity object's __precision__ attribute",
            "itemtype": "property",
            "name": "positionsY",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1962,
            "description": "Positions Arrays along the length of the Link's path - these values will be affected by the value of the parent Entity object's __precision__ attribute",
            "itemtype": "property",
            "name": "positionsLength",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1970,
            "description": "Positions Arrays along the length of the Link's path - these values will be affected by the value of the parent Entity object's __precision__ attribute",
            "itemtype": "property",
            "name": "positionsCumulativeLength",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1980,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2005,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "pointOnLine",
            "params": [
                {
                    "name": "origin",
                    "description": "Start Point for calculation",
                    "type": "Point"
                },
                {
                    "name": "destination",
                    "description": "End Point for calculation",
                    "type": "Point"
                },
                {
                    "name": "val",
                    "description": "Distance between start and end points, where 0 = start and 1 = end",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2020,
            "description": "Position calculation helper function\n\nResult Object contains the following attributes:\n\n* __start__ - Link.start Point object's local Vector\n* __end__ - Link.end Point object's local Vector\n* __control1__ - Link.controlPoint1 Point object's local Vector\n* __control2__ - Link.controlPoint2 Point object's local Vector",
            "itemtype": "method",
            "name": "getPointCoordinates",
            "return": {
                "description": "Result Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2059,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getLocalPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2104,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2121,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getLocalSteadyPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2154,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getSteadyPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2172,
            "description": "Returns length of Link, in pixels",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "Length, in pixels"
            },
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2181,
            "description": "(re)Calculate the Link object's __positions__ array",
            "itemtype": "method",
            "name": "setPositions",
            "params": [
                {
                    "name": "val",
                    "description": "- precision level for the calculation. Default: parent Shape object's precision value",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2235,
            "description": "Path object drawing helper function\n\n_Note: this function is recursive_",
            "itemtype": "method",
            "name": "sketch",
            "params": [
                {
                    "name": "ctx",
                    "description": "Entity Cell's &lt;canvas&gt; element's context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True (eventually)"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 2260,
            "description": "sketch helper object",
            "itemtype": "method",
            "name": "sketchActions",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 45,
            "description": "A __factory__ function to generate elliptical Shape or Path entity objects\n\nThe argument can include:\n* __radiusX__ - Number, horizontal radius of ellipse; default: 0 (not retained)\n* __radiusY__ - Number, vertical radius of ellipse; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path (not retained)\n* any other legitimate Entity, Context or Shape/Path attribute\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeEllipse",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 139,
            "description": "A __factory__ function to generate rectangular Shape or Path entity objects, with optional rounded corners\n\nThe argument can include:\n* __width__ - Number or % String, default: 0\n* __height__ - Number or % String, default: 0\n* also, 0, 1 or more of the following __radius__ attributes (all Number, default: radius=0): radiusTopLeftX, radiusTopLeftY, radiusTopRightX, radiusTopRightY, radiusBottomRightX, radiusBottomRightY, radiusBottomLeftX, radiusBottomLeftY, radiusTopLeft, radiusTopRight, radiusBottomRight, radiusBottomLeft, radiusTopX, radiusTopY, radiusBottomX, radiusBottomY, radiusLeftX, radiusLeftY, radiusRightX, radiusRightY, radiusTop, radiusBottom, radiusRight, radiusLeft, radiusX, radiusY, radius (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path (not retained)\n* any other legitimate Entity, Context or Shape/Path attribute\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeRectangle",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 277,
            "description": "A __factory__ function to generate bezier curve Shape or Path entity objects\n\nThe argument can include:\n* __startX__ - Number or % String; default: 0\n* __startY__ - Number or % String; default: 0\n* __startControlX__ - Number or % String; default: 0 (not retained)\n* __startControlY__ - Number or % String; default: 0 (not retained)\n* __endControlX__ - Number or % String; default: 0 (not retained)\n* __endControlY__ - Number or % String; default: 0 (not retained)\n* __endX__ - Number or % String; default: 0 (not retained)\n* __endY__ - Number or % String; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Entity, Context or Shape/Path attribute\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeBezier",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 377,
            "description": "A __factory__ function to generate quadratic curve Shape or Path entity objects\n\nThe argument can include:\n* __startX__ - Number or % String; default: 0\n* __startY__ - Number or % String; default: 0\n* __controlX__ - Number or % String; default: 0 (not retained)\n* __controlY__ - Number or % String; default: 0 (not retained)\n* __endX__ - Number or % String; default: 0 (not retained)\n* __endY__ - Number or % String; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Entity, Context or Shape/Path attribute\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeQuadratic",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 464,
            "description": "A __factory__ function to generate straight line Shape or Path entity objects\n\nThe argument can include:\n* __startX__ - Number or % String; default: 0\n* __startY__ - Number or % String; default: 0\n* __endX__ - Number or % String; default: 0 (not retained)\n* __endY__ - Number or % String; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Entity, Context or Shape/Path attribute\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeLine",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 533,
            "description": "A __factory__ function to generate regular entitys such as triangles, stars, hexagons, etc\n\nThe argument can include:\n* __angle__ - Number; eg an angle of 72 produces a pentagon, while 144 produces a five-pointed star - default: 0\n* __sides__ - Number; number of sides to the regular entity - default: 0\n* __outline__ - Number; default: 0\n* __radius__ - Number; default: 0 (not retained)\n* __startControlX__ - Number or % String - x coordinate for control (quadratic) or startControl (bezier) curve; default: 0 (not retained)\n* __controlX__ - alias for startControlX; default: 0 (not retained)\n* __startControlY__ - Number or % String - y coordinate for control (quadratic) or startControl (bezier) curve; default: 0 (not retained)\n* __controlY__ - alias for startControlY; default: 0 (not retained)\n* __endControlX__ - Number or % String - x coordinate for endControl (bezier) curve; default: 0 (not retained)\n* __endControlY__ - Number or % String - y coordinate for endControl (bezier) curve; default: 0 (not retained)\n* __lineType__ - String defining type of line/curve to use for generated entity (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path (not retained)\n* any other legitimate Entity, Context or Shape/Path attribute\n\nEntitys can be generated using lines, or quadratic or bezier curves. The species of line to use is defined in the __lineType__ attribute which accepts the following values:\n* '__l__' - straight line (default)\n* '__q__' - quadratic curve\n* '__t__' - reflected quadratic curve\n* '__c__' - bezier curve\n* '__s__' - reflected bezier curve\n\n_Either the 'angle' attribute or the 'sides' attribute (but not both) must be included in the argument object_\n\nPercentage String values are relative to the entity's cell's dimensions",
            "itemtype": "method",
            "name": "makeRegularShape",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path entity object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 53,
            "description": "Alias for makePhrase()",
            "itemtype": "method",
            "name": "newPhrase",
            "deprecated": true,
            "class": "window.scrawl_Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 61,
            "description": "A __factory__ function to generate new Phrase entitys",
            "itemtype": "method",
            "name": "makePhrase",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Phrase object"
            },
            "example": [
                "\n\tscrawl.makePhrase({\n\t\tstartX: 50,\n\t\tstartY: 20,\n\t\tfillStyle: 'red',\n\t\tfont: '20pt Arial, sans-serif',\n\t\ttextAlign: 'center',\n\t\ttext: 'Hello, world!\\nHow are you today?',\n\t\t});"
            ],
            "class": "window.scrawl_Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 123,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Phrase'",
            "final": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 132,
            "description": "Text string to be displayed - for multiline text, insert __\\n__ where the text line breaks",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "''",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 139,
            "description": "Font style property - any permitted CSS style String (eg 'italic')",
            "itemtype": "property",
            "name": "style",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 146,
            "description": "Font variant property - any permitted CSS variant String (eg 'small-caps')",
            "itemtype": "property",
            "name": "variant",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 153,
            "description": "Font weight property - any permitted CSS weight String or number (eg 'bold', 700)",
            "itemtype": "property",
            "name": "weight",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 160,
            "description": "Font size",
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "default": "12",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 167,
            "description": "Font metrics property - any permitted CSS metrics String (eg 'pt', 'px')",
            "itemtype": "property",
            "name": "metrics",
            "type": "String",
            "default": "'pt'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 174,
            "description": "Font family property - any permitted CSS font family String\n\n_Note: a font needs to be pre-loaded by the web page before the &lt;canvas&gt; element can successfully use it_",
            "itemtype": "property",
            "name": "family",
            "type": "String",
            "default": "'sans-serif'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 183,
            "description": "Multiline text - line height",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "default": "1.5",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 190,
            "description": "Background color - any permitted CSS Color string",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "''",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 197,
            "description": "Background margin - additional padding around the text (in pixels), colored in by the background color",
            "itemtype": "property",
            "name": "backgroundMargin",
            "type": "Number",
            "default": "0",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 204,
            "description": "Text along path parameter - when placing text along a path, the text can be positioned in phrase blocks, word blocks or by individual letters. Permitted values: 'phrase', 'word', 'glyph' (for individual letters)\n\n_Note: the __path__ module needs to be added to the core to use this functionality_",
            "itemtype": "property",
            "name": "textAlongPath",
            "type": "String",
            "default": "'phrase'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 213,
            "description": "Fixed width attribute for text along path. When using fixed width (monospace) fonts, set this flag to true for faster rendering\n\n_Note: the __path__ module needs to be added to the core to use this functionality_",
            "itemtype": "property",
            "name": "fixedWidth",
            "type": "Boolean",
            "default": "false",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 222,
            "description": "Array of TEXTNANE strings\n\nUsers should never interfere with Text objects, as they are destroyed and recreated after every Phrase.set() and Phrase.setDelta() function call",
            "itemtype": "property",
            "name": "texts",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 234,
            "description": "Augments Entity.set()\n\nAllows users to:\n* alter the font either by the font attribute, or by individual font content attributes\n* update the text\n* change other Entity and Phrase object attributes",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 268,
            "description": "Augments Entity.detDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 297,
            "description": "Augments Entity.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 308,
            "description": "Helper function - creates Text objects for each line of text in a multiline Phrase",
            "itemtype": "method",
            "name": "multiline",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 347,
            "description": "Helper function - checks to see if font needs to be (re)constructed from its parts",
            "itemtype": "method",
            "name": "checkFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 361,
            "description": "Helper function - creates font-related attributes from entity's Context object's font attribute",
            "itemtype": "method",
            "name": "deconstructFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 482,
            "description": "Helper function - creates entity's Context object's phrase attribute from other font-related attributes",
            "itemtype": "method",
            "name": "constructFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 521,
            "description": "Augments Entity.stamp()",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cellname",
                    "description": "CELLNAME of cell on which entitys are to draw themselves",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "cell wrapper object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "mouse",
                    "description": "coordinates to be used for any entity currently pivoted to a mouse/touch event",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 545,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 572,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 597,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 625,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 653,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 681,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 709,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 737,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 765,
            "description": "Stamp helper function - perform a 'none' method draw",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 777,
            "description": "Helper function - calculate entity's width and height attributes, taking into account font size, scaling, etc",
            "itemtype": "method",
            "name": "getMetrics",
            "params": [
                {
                    "name": "cellname",
                    "description": "CELLNAME String (any &lt;canvas&gt; will do for this function)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 804,
            "description": "Drawing function - stamps a background block onto the &lt;canvas&gt; element",
            "itemtype": "method",
            "name": "addBackgroundColor",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "here",
                    "description": "Start coordinates for rectangle",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 829,
            "description": "Drawing function - get entity offset values\n\nReturns an object with coordinates __x__ and __y__",
            "itemtype": "method",
            "name": "getOffset",
            "return": {
                "description": "JavaScript object"
            },
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 881,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 947,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Text'",
            "final": 1,
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 956,
            "description": "Text to be displayed",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 964,
            "description": "PHRASENAME String of parent Phrase object",
            "itemtype": "property",
            "name": "phrase",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 972,
            "description": "CTXNAME String of parent Phrase object's Context object",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 980,
            "description": "fixedWidth value of parent Phrase object",
            "itemtype": "property",
            "name": "fixedWidth",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 988,
            "description": "Text along path value of parent Phrase object",
            "itemtype": "property",
            "name": "textAlongPath",
            "type": "String",
            "default": "'phrase'",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 996,
            "description": "Text line width, accounting for font, scale, etc",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1004,
            "description": "Text line height, accounting for font, scale, lineHeight, etc",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1012,
            "description": "Glyphs array",
            "itemtype": "property",
            "name": "glyphs",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1020,
            "description": "Glyph widths array",
            "itemtype": "property",
            "name": "glyphWidths",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1030,
            "description": "Stamp function - stamp phrases, words or individual glyphs (letters and spaces) along a Shape entity path\n\nPermitted methods include:\n\n* 'draw' - stroke the entity's path with the entity's strokeStyle color, pattern or gradient\n* 'fill' - fill the entity's path with the entity's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the entity's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the entity's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the entity's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the entity's path; shadow offset is added to both actions\n* 'clear' - fill the entity's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the entity's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the entity's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the entity onto the canvas",
            "itemtype": "method",
            "name": "stampAlongPath",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use entity's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1110,
            "description": "Filter function - prepare the clip for the filter",
            "itemtype": "method",
            "name": "clipAlongPath",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1174,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1189,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1209,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1224,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1239,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                },
                {
                    "name": "p",
                    "description": "Parent Phrase entity object",
                    "type": "Phrase"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1258,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                },
                {
                    "name": "p",
                    "description": "Parent Phrase entity object",
                    "type": "Phrase"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1277,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1293,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1309,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1323,
            "description": "Calculate metrics for each phrase, word or glyph in the glyphs array",
            "itemtype": "method",
            "name": "getMetrics",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 56,
            "description": "An Object containing parameter:value pairs representing the physical parameters within which a physics model operates",
            "itemtype": "property",
            "name": "physics",
            "type": "{Object}",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 62,
            "description": "Gravity - positive values are assumed to act downwards from the top of the &lt;canvas&gt; element. Measured in meters per second squared",
            "itemtype": "property",
            "name": "physics.gravity",
            "type": "Number",
            "default": "9.8",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 69,
            "description": "Air density, measured in kilograms per cubic meter; default is air density at seal level",
            "itemtype": "property",
            "name": "physics.airDensity",
            "type": "Number",
            "default": "1.23",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 76,
            "description": "Change in time since last update, measured in seconds",
            "itemtype": "property",
            "name": "physics.deltaTime",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 84,
            "description": "Object containing a set of vectors, for physics calculations",
            "itemtype": "property",
            "name": "scrawl.work.workphys",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 97,
            "description": "A __general__ function to undertake a round of calculations for Spring objects",
            "itemtype": "method",
            "name": "updateSprings",
            "params": [
                {
                    "name": "items",
                    "description": "Array of SPRINGNAMES; defaults to all Spring objects",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "True on success; false otherwise"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 124,
            "description": "A __general__ function to update Physics elapsed deltaTime",
            "itemtype": "method",
            "name": "updateDeltaTime",
            "params": [
                {
                    "name": "item",
                    "description": "new time",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True on success; false otherwise"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 137,
            "description": "scrawl.init hook function - modified by physics module\n\nInitiates two forces:\n\n* force.gravity() - gravity force at sea level\n* force.drag() - air drag force at sea level",
            "itemtype": "method",
            "name": "physicsInit",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 168,
            "description": "Alias for makeParticle()",
            "itemtype": "method",
            "name": "newParticle",
            "deprecated": true,
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 176,
            "description": "Alias for makeSpring()",
            "itemtype": "method",
            "name": "newSpring",
            "deprecated": true,
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 184,
            "description": "Alias for makeForce()",
            "itemtype": "method",
            "name": "newForce",
            "deprecated": true,
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 192,
            "description": "A __factory__ function to generate new Particle objects",
            "itemtype": "method",
            "name": "makeParticle",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Particle object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 201,
            "description": "A __factory__ function to generate new Spring objects",
            "itemtype": "method",
            "name": "makeSpring",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Spring object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 210,
            "description": "A __factory__ function to generate new Force objects",
            "itemtype": "method",
            "name": "makeForce",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Force object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 275,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Particle'",
            "final": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 285,
            "description": "Current group",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "default": "''",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 292,
            "description": "Current order",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 299,
            "description": "Mobility flag; when false, particle is fixed to the Cell at its position attribute coordinate vector",
            "itemtype": "property",
            "name": "mobile",
            "type": "Boolean",
            "default": "true",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 306,
            "description": "Particle mass value, in kilograms",
            "itemtype": "property",
            "name": "mass",
            "type": "Number",
            "default": "1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 313,
            "description": "Particle radius, in meters",
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0.1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 320,
            "description": "Projected surface area - assumed to be of a sphere - in square meters",
            "itemtype": "property",
            "name": "area",
            "type": "Number",
            "default": "0.03",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 327,
            "description": "Air drag coefficient - assumed to be operating on a smooth sphere",
            "itemtype": "property",
            "name": "drag",
            "type": "Number",
            "default": "0.42",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 334,
            "description": "Elasticity coefficient, where 0.0 = 100% elastic and 1.0 is 100% inelastic",
            "itemtype": "property",
            "name": "elasticity",
            "type": "Number",
            "default": "1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 341,
            "description": "Object in which user key:value pairs can be stored - clonable",
            "itemtype": "property",
            "name": "userVar",
            "type": "Object",
            "default": "{}",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 349,
            "description": "Position vector - assume 1 pixel = 1 meter\n\nVector attributes can be set using the following alias attributes:\n\n* place.x - __startX__ or __start.x__\n* place.y - __startY__ or __start.y__",
            "itemtype": "property",
            "name": "place",
            "type": "Vector",
            "default": "Zero values vector",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 365,
            "description": "Velocity vector - assume 1 pixel = 1 meter per second\n\nVector attributes can be set using the following alias attributes:\n\n* velocity.x - __deltaX__ or __delta.x__\n* velocity.y - __deltaY__ or __delta.y__",
            "itemtype": "property",
            "name": "velocity",
            "type": "Vector",
            "default": "Zero values vector",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 381,
            "description": "Particle calculator engine - a String value. \n\nCurrent engines include: 'rungeKutter' (most accurate), 'improvedEuler', 'euler' (default)",
            "itemtype": "property",
            "name": "engine",
            "type": "String",
            "default": "'euler'",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 390,
            "description": "An Array containing FORCENAME Strings and/or force Functions",
            "itemtype": "property",
            "name": "forces",
            "type": "Array",
            "default": "[]",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 397,
            "description": "An Array containing SPRINGNAME Strings",
            "itemtype": "property",
            "name": "springs",
            "type": "Array",
            "default": "[]",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 404,
            "description": "Load Vector - recreated at the start of every calculation cycle iteration",
            "itemtype": "property",
            "name": "load",
            "type": "Vector",
            "default": "Zero vector",
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 414,
            "description": "Particle.getStartValues",
            "itemtype": "method",
            "name": "getStartValues",
            "return": {
                "description": "Object containing x and y Number attributes representing the particle's current position with respect to its Cell's top left hand corner"
            },
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 426,
            "description": "Augments Base.set()\n\nAllows users to set the Particle's position and velocity attributes using startX, startY, start, deltaX, deltaY, delta or velocity, velocityX, velocityY values (delta and velocity are synonyms for each other)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 468,
            "description": "Augments Base.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned Particle object"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 488,
            "description": "Add a force to the forces array",
            "itemtype": "method",
            "name": "addForce",
            "params": [
                {
                    "name": "item",
                    "description": "Anonymous Function, or FORCENAME String",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 505,
            "description": "Undertake a calculation cycle iteration",
            "itemtype": "method",
            "name": "stamp",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 519,
            "description": "stamp helper object",
            "itemtype": "method",
            "name": "stampActions (not a function)",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 536,
            "description": "Alias for Particle.stamp()",
            "itemtype": "method",
            "name": "forceStamp",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 545,
            "description": "Alias for Particle.stamp()",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 554,
            "description": "Calculate the loads (via forces) acting on the particle for this calculation cycle iteration",
            "itemtype": "method",
            "name": "calculateLoads",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 591,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateEuler",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 611,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateImprovedEuler",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 636,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateRungeKutter",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 668,
            "description": "Calculation cycle engine - linear particle collisions",
            "itemtype": "method",
            "name": "linearCollide",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 694,
            "description": "Create a new Spring object and add it to this, and another, Particle objects' springs array\n\nArgument can be either a PARTICLENAME String, or an Object which includes an __end__ attribute set to a PARTICLENAME String",
            "itemtype": "method",
            "name": "addSpring",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes; alternatively, use a PARTICLENAME String",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 733,
            "description": "Delete all springs associated with this Particle",
            "itemtype": "method",
            "name": "removeSprings",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 750,
            "description": "Delete a named Spring object from this Particle",
            "itemtype": "method",
            "name": "removeSpringsTo",
            "params": [
                {
                    "name": "item",
                    "description": "SPRINGNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 778,
            "description": "Dummy function - required to allow Particles to be processed alongside Entity objects",
            "itemtype": "method",
            "name": "pickupEntity",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 787,
            "description": "Dummy function - required to allow Particles to be processed alongside Entity objects",
            "itemtype": "method",
            "name": "dropEntity",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 796,
            "description": "Dummy function - required to allow Particles to be processed alongside Entity objects",
            "itemtype": "method",
            "name": "updateStart",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 862,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Spring'",
            "final": 1,
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 871,
            "description": "First Particle PARTICLENAME",
            "itemtype": "property",
            "name": "start",
            "type": "String",
            "default": "''",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 878,
            "description": "Second Particle PARTICLENAME",
            "itemtype": "property",
            "name": "end",
            "type": "String",
            "default": "''",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 885,
            "description": "Spring constant",
            "itemtype": "property",
            "name": "springConstant",
            "type": "Number",
            "default": "1000",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 892,
            "description": "Spring damper constant",
            "itemtype": "property",
            "name": "damperConstant",
            "type": "Number",
            "default": "100",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 899,
            "description": "Rest length, in pixels, between the Spring object's two Particle objects",
            "itemtype": "property",
            "name": "restLength",
            "type": "Number",
            "default": "1",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 906,
            "description": "Current length, in pixels, between the Spring object's two Particle objects\n\nRecalculated as part of each  calculation cycle iteration",
            "itemtype": "property",
            "name": "currentLength",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 916,
            "description": "Vector representing the Spring object's current force on its Particles\n\nRecalculated as part of each  calculation cycle iteration",
            "itemtype": "property",
            "name": "force",
            "type": "Vector",
            "default": "Zero value vector",
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 932,
            "description": "Calculate the force exerted by the spring for this calculation cycle iteration",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 955,
            "description": "Remove this Spring from its Particle objects, and from the scrawl-canvas library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 1002,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Force'",
            "final": 1,
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 1011,
            "description": "Anonymous function for calculating a force on a Particle\n\nFunctions need to be in the form:\n\n\tfunction(ball){\n\t\t//get or build a Vector object to hold the result\n\t\tvar result = scrawl.makeVector();\t//creating the vector\n\t\tvar result = scrawl.work.workphys.v1;\t//using an existing work vector: scrawl.work.workphys.v1 to v5\n\n\t\t//calculate the force - Particle attributes are available via the _ball_ argument\n\t\t\n\t\t//add the force to the Particle's load Vector\n\t\tball.load.vectorAdd(result);\n\t\t}",
            "itemtype": "property",
            "name": "fn",
            "type": "Function",
            "default": "function(){}",
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 1034,
            "description": "Calculate the force for this calculation cycle iteration",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "force Vector, as defined in the force function"
            },
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 1042,
            "description": "Remove this Force from the scrawl-canvas library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 27,
            "description": "Alias for makeQuaternion()",
            "itemtype": "method",
            "name": "newQuaternion",
            "deprecated": true,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 35,
            "description": "A __factory__ function to build a Quaternion object from Euler angle values\n\nArgument object can be in the following form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "makeQuaternion",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.makeQuaternion({\n\t\tpitch: 90,\n\t\tyaw: 10,\n\t\t});"
            ],
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 87,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Quaternion'",
            "final": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 95,
            "description": "Quaternion name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "'generic'",
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 102,
            "description": "3d rotation value",
            "itemtype": "property",
            "name": "n",
            "type": "Number",
            "default": "1",
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 109,
            "description": "3d rotation axis",
            "itemtype": "property",
            "name": "v",
            "type": "Vector",
            "default": "{x:0, y:0, z:0}",
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 121,
            "description": "set to zero quaternion (n = 1)",
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 135,
            "description": "Calculate magnitude of a quaternion",
            "itemtype": "method",
            "name": "getMagnitude",
            "return": {
                "description": "Magnitude value"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 144,
            "description": "Normalize the quaternion",
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 161,
            "description": "Check to see if quaternion is a unit quaternion, within permitted tolerance",
            "itemtype": "method",
            "name": "checkNormal",
            "params": [
                {
                    "name": "tolerance",
                    "description": "Tolerance value; default: 0",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if quaternion is a normalized quaternion; false otherwise"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 176,
            "description": "Retrieve quaternion's vector (rotation axis) component",
            "itemtype": "method",
            "name": "getVector",
            "return": {
                "description": "Vector component"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 184,
            "description": "Retrieve quaternion's scalar (rotation around axis) component",
            "itemtype": "method",
            "name": "getScalar",
            "return": {
                "description": "Number - scalar component of this quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 192,
            "description": "Add a quaternion to this quaternion",
            "itemtype": "method",
            "name": "quaternionAdd",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to be added to this quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 212,
            "description": "Subtract a quaternion from this quaternion",
            "itemtype": "method",
            "name": "quaternionSubtract",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to be subtracted from this quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 232,
            "description": "Multiply quaternion by a scalar value",
            "itemtype": "method",
            "name": "scalarMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Value to multiply quaternion by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 250,
            "description": "Divide quaternion by a scalar value",
            "itemtype": "method",
            "name": "scalarDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Value to divide quaternion by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 269,
            "description": "Conjugate (reverse) value for this quaternion",
            "itemtype": "method",
            "name": "conjugate",
            "return": {
                "description": "Conjugated quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 281,
            "description": "Set the values for this quaternion\n\nArgument object can contain the following attributes:\n\n* for the scalar (n) value, __scalar__ or __n__ (Number)\n* for the vector (v) value, __vector__ or __v__ (Vector object, or object containing xyz attribnutes)\n* for the x value (v.x), __x__ (Number)\n* for the y value (v.y), __y__ (Number)\n* for the z value (v.z), __z__ (Number)\n\nIf the argument object includes values for __pitch__, __yaw__ or __roll__, the set will be performed via the setFromEuler() function\n\nArgument can also be either an existing Quaternion object, or an existing Vector object - for vectors, the scalar value will be set to 0",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing key:value attributes"
                }
            ],
            "return": {
                "description": "Amended quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 328,
            "description": "Set the values for this quaternion based on the values of the argument quaternion",
            "itemtype": "method",
            "name": "setFromQuaternion",
            "params": [
                {
                    "name": "item",
                    "description": "Reference quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 348,
            "description": "Set the values for this quaternion based on the values of the reference vector",
            "itemtype": "method",
            "name": "setFromVector",
            "params": [
                {
                    "name": "item",
                    "description": "Reference vector",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 367,
            "description": "Multiply this quaternion by a second quaternion\n\n_Quaternion multiplication is not comutative - arithmetic is this*item, not item*this_",
            "itemtype": "method",
            "name": "quaternionMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to multiply this quaternion by",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 405,
            "description": "Multiply this quaternion by a Vector\n\n_Quaternion multiplication is not comutative - arithmetic is this*item, not item*this_",
            "itemtype": "method",
            "name": "getVectorMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to multiply this quaternion by",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 440,
            "description": "Retrieve rotational component of this quaternion",
            "itemtype": "method",
            "name": "getAngle",
            "params": [
                {
                    "name": "degree",
                    "description": "Returns rotation in degrees if true; false (radians) by default",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Rotation angle"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 452,
            "description": "Retrieve axis component of this quaternion",
            "itemtype": "method",
            "name": "getAxis",
            "return": {
                "description": "Normalized Vector (scrawl.v Vector)"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 464,
            "description": "Rotate this quaternion by another quaternion\n\n_Quaternion multiplication is not comutative - arithmetic is item (representing the local rotation to be applied) * this, not this * item (for which, use quaternionMultiply)_",
            "itemtype": "method",
            "name": "quaternionRotate",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to rotate this quaternion by",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 483,
            "description": "Rotate a Vector by this quaternion",
            "itemtype": "method",
            "name": "vectorRotate",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be rotated by this quaternion",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Vector (amended argument); false on failure"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 495,
            "description": "Build a quaternion from Euler angle values\n\nArgument object can be in the form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "makeFromEuler",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.quaternion.makeFromEuler({\n\t\troll: 30,\n\t\tpitch: 90,\n\t\tyaw: 125,\n\t\t});"
            ],
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 550,
            "description": "Set quaternion with Euler angle values\n\nArgument object can be in the form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "setFromEuler",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.quaternion.setFromEuler({\n\t\troll: 30,\n\t\tpitch: 90,\n\t\tyaw: 125,\n\t\t});"
            ],
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 597,
            "description": "Retrieve rotations (Euler angles) from a quaternion",
            "itemtype": "method",
            "name": "getEulerAngles",
            "return": {
                "description": "Object in the form",
                "type": "Pitch:Number, yaw:Number, roll:Number"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 657,
            "description": "Retrieve Euler roll value from a quaternion",
            "itemtype": "method",
            "name": "getEulerRoll",
            "return": {
                "description": "Number"
            },
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlQuaternion.js",
            "line": 693,
            "description": "Object containing a set of quaternions, for calculations",
            "itemtype": "property",
            "name": "scrawl.work.workquat",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Quaternion",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 47,
            "description": "A __load__ function\n\nArgument should be a JSON String, or an Array of JSON Strings, of objects to be loaded or updated",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "item",
                    "description": "Array of JSON Strings; alternatively, a JSON String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 114,
            "description": "A __save__ function\n\nArgument should be a String literal: 'pads', 'cells', 'groups', 'entitys', 'designs', 'spriteanimations', 'springs'\n\n_Note: this function does not check for duplicate objects_",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "item",
                    "description": "A String literal",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of saved data"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 171,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Base.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 190,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Position.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 215,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "PageElement.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 264,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Pad.toString",
            "params": [
                {
                    "name": "noexternalobjects",
                    "description": "True to exclude external objects such as entitys, designs and groups",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 333,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Cell.toString",
            "params": [
                {
                    "name": "noexternalobjects",
                    "description": "True to exclude external objects such as entitys, designs and groups",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 396,
            "description": "Turn the object into a JSON String; doesn't include name and type attributes",
            "itemtype": "method",
            "name": "Context.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 415,
            "description": "Turn the object into a JSON String\n\nAutomatically removes the entitys attribute from the result; when loading, existing entitys need to be re-added to the group",
            "itemtype": "method",
            "name": "Group.toString",
            "params": [
                {
                    "name": "noentitys",
                    "description": "True to exclude the entitys attribute; false will return an array containing this and each of the entitys in the entitys array",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 463,
            "description": "Turn the object into a JSON String\n\nRetains the entitys attribute Array; does not include any other objects in the return Array",
            "itemtype": "method",
            "name": "Group.save",
            "return": {
                "description": "Array of JSON Strings"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 484,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Entity.toString",
            "return": {
                "description": "JSON string of non-default value attributes, including non-default context values"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 48,
            "description": "Alias for makeShape()",
            "itemtype": "method",
            "name": "newShape",
            "deprecated": true,
            "class": "window.scrawl_Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 56,
            "description": "A __factory__ function to generate new Shape entitys",
            "itemtype": "method",
            "name": "makeShape",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape object"
            },
            "example": [
                "\n\tscrawl.makeShape({\n\t\tstartX: 50,\n\t\tstartY: 20,\n\t\tfillStyle: 'red',\n\t\tdata: 'M0,0 50,0 60,20, 10,20 0,0z',\n\t\t});"
            ],
            "class": "window.scrawl_Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 108,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Shape'",
            "final": 1,
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 117,
            "description": "Interpreted path data - calculated by scrawl-canvas from the data attribute",
            "itemtype": "property",
            "name": "dataSet",
            "type": "Array",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 125,
            "description": "Drawing flag - when set to true, will treat the first drawing (not positioning) data point as the start point\n\nGenerally this is set automatically as part of a shape factory function",
            "itemtype": "property",
            "name": "isLine",
            "type": "Boolean",
            "default": "true",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 134,
            "description": "Shape entity default method attribute is 'draw', not 'fill'",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'draw'",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 141,
            "description": "Winding value",
            "itemtype": "property",
            "name": "winding",
            "type": "String",
            "default": "'non-zero'",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 150,
            "description": "Augments Entity.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 165,
            "description": "Constructor, clone and set helper function\n\nCreate native path data from data attribute String",
            "itemtype": "method",
            "name": "buildDataSet",
            "params": [
                {
                    "name": "d",
                    "description": "Path string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Native path data"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 324,
            "description": "Helper function - define the entity's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "doOutline",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 339,
            "description": "Helper function - define the entity's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "completeOutline",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 567,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 582,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 597,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 614,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 628,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 642,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 658,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 674,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 689,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 704,
            "description": "Stamp helper function - perform a 'none' method draw",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 717,
            "description": "Check Cell coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 753,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the entity's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 832,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 79,
            "description": "Array of css attributes not requiring prefixes",
            "itemtype": "property",
            "name": "scrawl.work.css",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 86,
            "description": "Array of css attributes that do require prefixes",
            "itemtype": "property",
            "name": "scrawl.work.xcss",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 94,
            "description": "scrawl.init hook function - modified by stacks module",
            "itemtype": "method",
            "name": "pageInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 106,
            "description": "A __utility__ function for performing bucket sorts on scrawl-canvas string arrays eg Group.elements",
            "itemtype": "method",
            "name": "multiSectionBucketSort",
            "params": [
                {
                    "name": "section",
                    "description": "Array of scrawl-canvas library section names",
                    "type": "Array"
                },
                {
                    "name": "attribute",
                    "description": "on which sort will be performed",
                    "type": "String"
                },
                {
                    "name": "a",
                    "description": "array to be sorted",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "sorted array"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 143,
            "description": "A __private__ function that searches the DOM for elements with class=\"scrawlstack\"; generates Stack objects",
            "itemtype": "method",
            "name": "getStacks",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 203,
            "description": "A __private__ function that searches the DOM for canvas elements and generates Pad/Cell/Context objects for each of them\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "getCanvases",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 282,
            "description": "A __private__ function that searches the DOM for elements with class=\"scrawl stack:STACKNAME\"; generates Element objects",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 326,
            "description": "A __general__ function to add a visible &lt;canvas&gt; element to the web page, and create a Pad controller and Cell wrappers for it\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Pad and/or Cell object attribute\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "addCanvasToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Cell's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The new Pad object"
            },
            "example": [
                "\n    <body>\n        <div id=\"canvasholder\"></div>\n        <script src=\"js/scrawlCore-min.js\"></script>\n        <script>\n            scrawl.addCanvasToPage({\n                name:   'mycanvas',\n                stackName: 'mystack',\n                width: 400,\n                height: 200,\n                }).makeCurrent();\n        </script>\n    </body>\n\n<a href=\"../../demo002.html\">Live demo</a>"
            ],
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 401,
            "description": "A __general__ function to generates a new Stack object, together with a new DOM &lt;div&gt; element to act as the stack\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Stack object attribute",
            "itemtype": "method",
            "name": "addStackToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Stack's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New stack object"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 431,
            "description": "A __general__ function to reset display offsets for all pads, stacks and elements\n\nThe argument is an optional String - permitted values include 'stack', 'pad', 'element'; default: 'all'\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "params": [
                {
                    "name": "item",
                    "description": "Command string detailing which element types are to be set",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The scrawl-canvas library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n    scrawl.setDisplayOffsets();"
            ],
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 471,
            "description": "Set the perspective for all stacks\n\n(Replaces Core.setPerspectives)",
            "itemtype": "method",
            "name": "setPerspectives",
            "params": [
                {
                    "name": "stacks",
                    "description": "Array of STACKNAMEs - can also be a String - if null, all stacks will be processed",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The scrawl-canvas library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 497,
            "description": "A __display__ function to ask Pads to undertake a complete clear-compile-show display cycle, and stacks to undertake a render cycle\n\n(Replaces Core.render)",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The scrawl-canvas library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 520,
            "description": "A __display__ function to move DOM elements within a Stack",
            "itemtype": "method",
            "name": "renderElements",
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 539,
            "description": "A __display__ function to initialize DOM elements with their existing values",
            "itemtype": "method",
            "name": "domInit",
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 559,
            "description": "A __display__ function to update DOM elements' 3d position/rotation\n\nArgument can contain the following (optional) attributes:\n\n* __quaternion__ - quaternion representing the rotation to be applied to the element\n* __distance__ - distance of element from the rotation origin\n* __group__ - optional String name of ElementGroup on which to commence the operation; the operation will also be performed on the groups of any Stack elements cotained within this group. If this argument is not included in the argument object then all Pads, Stacks and Elements will be updated.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object containing key:value pairs",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 594,
            "description": "DOM element css3 3d transform support\n\nTrue if the CSS2 3d functionality is supported; false otherwise",
            "itemtype": "property",
            "name": "transform",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 604,
            "description": "Check if device supports CSS3 3d transforms",
            "itemtype": "method",
            "name": "getStacksDeviceData",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 614,
            "description": "The coordinate Vector representing the object's rotation/flip point\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __startX__ - (Mixed) the x coordinate of the object's rotation/flip point, in pixels, from the left side of the object's stack\n* __startY__ - (Mixed) the y coordinate of the object's rotation/flip point, in pixels, from the top side of the object's stack\n\nThis attribute's attributes accepts absolute number values (in pixels), or string percentages where the percentage is relative to the container stack's width or height, or string literals which again refer to the containing stack's dimensions:\n\n* _startX_ - 'left', 'right' or 'center'\n* _startY_ - 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "PageElement.start",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 636,
            "description": "A change Vector which can be applied to the object's rotation/flip point\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __deltaX__ - (Number) a horizontal change value, in pixels\n* __deltaY__ - (Number) a vertical change value, in pixels",
            "itemtype": "property",
            "name": "PageElement.delta",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 652,
            "description": "A change Vector for translating elements away from their start coordinate\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __translateX__ - (Number) movement along the x axis, in pixels\n* __translateY__ - (Number) movement along the y axis, in pixels\n* __translateZ__ - (Number) movement along the z axis, in pixels",
            "itemtype": "property",
            "name": "PageElement.translate",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 669,
            "itemtype": "property",
            "name": "PageElement.deltaTranslate",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 678,
            "description": "An Object (in fact, a Vector) containing offset instructions from the object's rotation/flip point, where drawing commences. \n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __handleX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __handleY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "PageElement.handle",
            "type": "Object",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 696,
            "description": "The ENTITYNAME or POINTNAME of a entity or Point object to be used for setting this object's start point",
            "itemtype": "property",
            "name": "PageElement.pivot",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 703,
            "description": "The element's current ELEMENTGROUPNAME",
            "itemtype": "property",
            "name": "PageElement.group",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 710,
            "description": "The SPRITENAME of a Shape entity whose path is used to calculate this object's start point",
            "itemtype": "property",
            "name": "PageElement.path",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 717,
            "description": "A value between 0 and 1 to represent the distance along a Shape object's path, where 0 is the path start and 1 is the path end",
            "itemtype": "property",
            "name": "PageElement.pathPlace",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 724,
            "description": "A change value which can be applied to the object's pathPlace attribute",
            "itemtype": "property",
            "name": "PageElement.deltaPathPlace",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 731,
            "description": "A flag to determine whether the object will calculate its position along a Shape path in a regular (true), or simple (false), manner",
            "itemtype": "property",
            "name": "PageElement.pathSpeedConstant",
            "type": "Boolean",
            "default": "true",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 738,
            "description": "The rotation value (in degrees) of an object's current position along a Shape path",
            "itemtype": "property",
            "name": "PageElement.pathRoll",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 745,
            "description": "A flag to determine whether the object will calculate the rotation value of its current position along a Shape path",
            "itemtype": "property",
            "name": "PageElement.addPathRoll",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 752,
            "description": "When element is pivoted to another element, determines placement in relation to that element\n\nPermitted values: 'top', 'right', 'bottom', 'left', '' (default)",
            "itemtype": "property",
            "name": "PageElement.lockTo",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 761,
            "description": "When true, element ignores horizontal placement data via pivot and path attributes",
            "itemtype": "property",
            "name": "PageElement.lockX",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 768,
            "description": "When true, element ignores vertical placement data via pivot and path attributes",
            "itemtype": "property",
            "name": "PageElement.lockY",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 775,
            "description": "Element 2d roll value",
            "itemtype": "property",
            "name": "PageElement.roll",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 782,
            "description": "Element 2d pitch value",
            "itemtype": "property",
            "name": "PageElement.pitch",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 789,
            "description": "Element 2d yaw value",
            "itemtype": "property",
            "name": "PageElement.yaw",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 796,
            "description": "Element 2d deltaRoll value",
            "itemtype": "property",
            "name": "PageElement.deltaRoll",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 803,
            "description": "Element 2d deltaPitch value",
            "itemtype": "property",
            "name": "PageElement.deltaPitch",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 810,
            "description": "Element 2d deltaYaw value",
            "itemtype": "property",
            "name": "PageElement.deltaYaw",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 817,
            "description": "Element rotation around its transform (start) coordinate",
            "itemtype": "property",
            "name": "PageElement.rotation",
            "type": "Quaternion",
            "default": "Unit quaternion with no rotation",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 831,
            "description": "Element's delta (change in) rotation around its transform (start) coordinate",
            "itemtype": "property",
            "name": "PageElement.deltaRotation",
            "type": "Quaternion",
            "default": "Unit quaternion with no rotation",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 845,
            "description": "Element's rotation tolerance - all Quaternions need to be unit quaternions; this value represents the acceptable tolerance away from the norm",
            "itemtype": "property",
            "name": "PageElement.rotationTolerance",
            "type": "Number",
            "default": "0.001",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 852,
            "description": "A flag to determine whether an element displays itself",
            "itemtype": "property",
            "name": "PageElement.visibility",
            "type": "Boolean",
            "default": "true",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 859,
            "description": "A flag to determine whether an element uses the browser viewport for its position and dimensions reference",
            "itemtype": "property",
            "name": "PageElement.viewport",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 866,
            "description": "A flag to tell scrawl-canvas to add corner trackers to the element\n\nCorner trackers can be used by the Frame entity to bind its corners to a DOM element within a stack",
            "itemtype": "property",
            "name": "PageElement.includeCornerTrackers",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 875,
            "description": "Corner tracker vector - used only with Frame emtitys",
            "itemtype": "property",
            "name": "PageElement.topLeft",
            "type": "Vector",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 882,
            "description": "Corner tracker vector - used only with Frame emtitys",
            "itemtype": "property",
            "name": "PageElement.topRight",
            "type": "Vector",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 889,
            "description": "Corner tracker vector - used only with Frame emtitys",
            "itemtype": "property",
            "name": "PageElement.bottomRight",
            "type": "Vector",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 896,
            "description": "Corner tracker vector - used only with Frame emtitys",
            "itemtype": "property",
            "name": "PageElement.bottomLeft",
            "type": "Vector",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 903,
            "description": "Corner tracker div element - used only with Frame entitys",
            "itemtype": "property",
            "name": "PageElement.topLeftDiv",
            "type": "DOM element object",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 910,
            "description": "Corner tracker div element - used only with Frame entitys",
            "itemtype": "property",
            "name": "PageElement.topRightDiv",
            "type": "DOM element object",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 917,
            "description": "Corner tracker div element - used only with Frame entitys",
            "itemtype": "property",
            "name": "PageElement.bottomRightDiv",
            "type": "DOM element object",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 924,
            "description": "Corner tracker div element - used only with Frame entitys",
            "itemtype": "property",
            "name": "PageElement.bottomLeftDiv",
            "type": "DOM element object",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 931,
            "description": "Index of mouse vector to use when pivot === 'mouse'\n\nThe Pad/Stack/Element.mice object can hold details of multiple touch events - when an entity is assigned to a 'mouse', it needs to know which of those mouse trackers to use. Default: mouse (for the mouse cursor vector)",
            "itemtype": "property",
            "name": "mouseIndex",
            "type": "String",
            "default": "'mouse'",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 940,
            "description": "Sorting order - must be a positive integer",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 947,
            "description": "Drag boolean - indicates the element can be manipulated via mouse/touch events (eg pickup, drop)",
            "itemtype": "property",
            "name": "drag",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 955,
            "description": "PageElement constructor hook function - modified by stacks module",
            "itemtype": "method",
            "name": "stacksPageElementConstructor",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1052,
            "itemtype": "method",
            "name": "addCornerTrackers - used only with Frame entitys",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1099,
            "itemtype": "method",
            "name": "updateCornerTrackers - used only with Frame entitys",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1126,
            "description": "Augments Base.get() to retrieve DOM element width and height values, and stack-related attributes (startX, startY, handleX, handleY, deltaX, deltaY, translateX, translateY, translateZ, deltaTranslateX, deltaTranslateY, deltaTranslateZ). Can also be used to retrieve a number of current CSS attributes on the DOM element\n\n(The stack module replaces the core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "PageElement.get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1194,
            "description": "Augments Base.set() to allow the setting of DOM element dimension values, and stack-related attributes (start, startX, startY, handle, handleX, handleY, delta, deltaX, deltaY, translate, translateX, translateY, 'translateZ, deltaTranslate, deltaTranslateX, deltaTranslateY, deltaTranslateZ). Can also be used to set a number of current CSS attributes on the DOM element\n\n(The stack module replaces the core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "PageElement.set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1277,
            "description": "Augments Base.setStart(), to allow users to set the start attributes using start, startX, startY",
            "itemtype": "method",
            "name": "setStart",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1306,
            "description": "Augments Base.setHandle(), to allow users to set the handle attributes using handle, handleX, handleY",
            "itemtype": "method",
            "name": "setHandle",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1335,
            "description": "Augments PageElement.set(), to allow users to set the delta attributes using delta, deltaX, deltaY\n\nThe scrawlAnimation extension adds a __delta__ attribute to Cells and Entitys - this is an inbuilt delta vector which can be used to automatically animate the start vector of these objects - via the updateStart, revertStart and reverse functions - as part of the animation cycle.\n\nBe aware that this is different to the PageElement.setDelta() function inherited by Cells and Entitys. setDelta is used to add a supplied argument value to the existing values of any numerical attribute of a Cell or Entity object, and is thus not limited to the animation cycle.",
            "itemtype": "method",
            "name": "setDeltaAttribute",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1360,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setPivotAttribute",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1375,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setGroupAttribute",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1404,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setRotation",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1419,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setDeltaRotation",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1434,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setTranslate",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1456,
            "description": "Add a CSS class to the DOM element",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "item",
                    "description": "String consisting of one or more classes to be added to the DOM element - a space will be prepended to the start of the string automatically",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1479,
            "description": "Remove a CSS class from the DOM element",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "item",
                    "description": "String consisting of one or more classes to be removed from the DOM element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1504,
            "description": "Augments PageElement.set()",
            "itemtype": "method",
            "name": "setDeltaTranslate",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1526,
            "description": "Handles the setting of many CSS attributes",
            "itemtype": "method",
            "name": "PageElement.setStyles",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1575,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function",
            "itemtype": "method",
            "name": "PageElement.setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1643,
            "description": "Adds the value of each attribute supplied in the argument to existing values; This function accepts start, startX, startY",
            "itemtype": "method",
            "name": "setDeltaStart",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1666,
            "description": "Adds the value of each attribute supplied in the argument to existing values. This function accepts handle, handleX, handleY",
            "itemtype": "method",
            "name": "setDeltaHandle",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1689,
            "description": "Adds delta values to the start vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x\n* 'y' - delta.y added to start.y\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "PageElement.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1712,
            "description": "updateStart helper object",
            "itemtype": "method",
            "name": "PageElement.updateStartActions (not a function)",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1740,
            "description": "Subtracts delta values from the start vector; subtracts deltaPathPlace from pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x\n* 'y' - delta.y subtracted from start.y\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "PageElement.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1763,
            "description": "revertStart helper object",
            "itemtype": "method",
            "name": "PageElement.revertStartActions (not a function)",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1791,
            "description": "Swaps the values of an attribute between two objects",
            "itemtype": "method",
            "name": "PageElement.exchange",
            "params": [
                {
                    "name": "obj",
                    "description": "Object with which this object will swap attribute values",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Attribute to be swapped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1809,
            "description": "Changes the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "PageElement.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1822,
            "description": "reverse helper object",
            "itemtype": "method",
            "name": "PageElement.reverseActions (not a function)",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1847,
            "description": "Rotate and translate a DOM element around a quaternion rotation\n\n* Element's initial rotation values should be stored in the deltaRotation attribute quaternion\n* Element's initial translation values should be stored in the deltaTranslate attribute vector\n\nArgument can contain the following (optional) attributes:\n\n* __quaternion__ - quaternion representing the rotation to be applied to the element\n* __distance__ - distance of element from the rotation origin",
            "itemtype": "method",
            "name": "PageElement.update3d",
            "params": [
                {
                    "name": "items",
                    "description": "- Distance between the effective rotation point and the DOM element's start attribute - default: deltaTranslate vector's magnitude",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1881,
            "description": "Reposition an element within its stack by changing 'left' and 'top' style attributes; rotate it using matrix3d transform",
            "itemtype": "method",
            "name": "PageElement.renderElement",
            "return": {
                "description": "This left"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1967,
            "description": "updateCurrentHandle helper object",
            "itemtype": "method",
            "name": "getReferenceDimensions",
            "params": [
                {
                    "name": "reference",
                    "description": "object - Stack, Pad, Element, Cell or Entity (Block, Wheel, Phrase, Picture, Path, Shape or Frame)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object with attributes",
                "type": "W: width, h: height, c: centered"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1995,
            "description": "Convert handle percentage values to numerical values, stored in currentHandle",
            "itemtype": "method",
            "name": "updateCurrentHandle",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2027,
            "description": "Convert start percentage values to numerical values, stored in currentStart",
            "itemtype": "method",
            "name": "updateCurrentStart",
            "params": [
                {
                    "name": "reference",
                    "description": "object - Stack, Pad, Element, Cell or Entity (Block, Wheel, Phrase, Picture, Path, Shape or Frame)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2064,
            "description": "Calculate start Vector in reference to a Shape entity object's path",
            "itemtype": "method",
            "name": "PageElement.setStampUsingPath",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2101,
            "description": "Directly calls the equivalent Position function",
            "itemtype": "method",
            "name": "PageElement.setStampUsingPivot",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2106,
            "description": "stamp helper object",
            "itemtype": "method",
            "name": "PageElement.setStampUsingPivot (not a function)",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2135,
            "description": "setStampUsingPivot helper function",
            "itemtype": "method",
            "name": "PageElement.setStampUsingDomElementPivot",
            "return": {
                "description": "nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2148,
            "description": "setStampUsingPivot helper function",
            "itemtype": "method",
            "name": "PageElement.setStampUsingLockTo",
            "return": {
                "description": "nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2190,
            "description": "Set the transform origin style attribute",
            "itemtype": "method",
            "name": "PageElement.setTransformOrigin",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2220,
            "description": "Calculate the element's display offset values",
            "itemtype": "method",
            "name": "PageElement.setDisplayOffsets",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2249,
            "description": "Helper function - set local dimensions (width, height)",
            "itemtype": "method",
            "name": "setLocalDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2330,
            "description": "Helper function - set DOM element dimensions (width, height)\n\nOverwritesa core setDimensions()",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2356,
            "description": "Reinitialize element with existing values",
            "itemtype": "method",
            "name": "domInitialize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2377,
            "description": "Set element's pivot to 'mouse'; set handles to supplied Vector value; set order to +9999",
            "itemtype": "method",
            "name": "pickupEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an object with {x, y} attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2397,
            "description": "Revert pickupEntity() actions, ensuring element is left where the user drops it",
            "itemtype": "method",
            "name": "dropEntity",
            "params": [
                {
                    "name": "items",
                    "description": "Alternative pivot String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2421,
            "description": "Overrides PageElement.setDimensions(); &lt;canvas&gt; elements do not use styling to set their drawing region dimensions",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2444,
            "description": "Alias for makeStack()",
            "itemtype": "method",
            "name": "newStack",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Stack object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2454,
            "description": "Alias for makeElement()",
            "itemtype": "method",
            "name": "newElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Element object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2464,
            "description": "Alias for makeElementGroup()",
            "itemtype": "method",
            "name": "newElementGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ElementGroup object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2474,
            "description": "A __factory__ function to generate new Stack objects",
            "itemtype": "method",
            "name": "makeStack",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Stack object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2484,
            "description": "A __factory__ function to generate new Element objects",
            "methodmakewelement": "",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Element object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2494,
            "description": "A __factory__ function to generate new ElementGroup objects",
            "itemtype": "method",
            "name": "makeElementGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ElementGroup object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2508,
            "description": "Pad constructor hook function - amended by Stacks module",
            "itemtype": "method",
            "name": "sortCellsCompile",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2518,
            "description": "Pad set hook function - amended by Stacks module",
            "itemtype": "method",
            "name": "padStacksSet",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2540,
            "description": "Pad lockTo helper",
            "itemtype": "method",
            "name": "setCellLocalDimensions",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2570,
            "description": "Stamp helper hook function - amended by stacks module",
            "itemtype": "method",
            "name": "setStampUsingStacksPivot",
            "return": {
                "description": "always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2678,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Stack'",
            "final": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2687,
            "description": "An Object (in fact, a Vector) containing perspective details for the stack element. \n\nthe Stack constructor, and set() function, supports the following 'virtual' attributes for this attribute:\n\n* __perspectiveX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __perspectiveY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n* __perspectiveZ__ - (Number) perspective depth, in pixels",
            "itemtype": "property",
            "name": "perspective",
            "type": "Object",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2708,
            "description": "The PADNAME String of a canvas locked to the stack",
            "itemtype": "property",
            "name": "canvas",
            "type": "String",
            "default": "''",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2716,
            "description": "Groups array",
            "itemtype": "property",
            "name": "groups",
            "type": "Array",
            "default": "[]",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2726,
            "description": "Return the DOM element wrapped by this object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "Element"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2734,
            "description": "Augments PageElement.set(), to allow users to set the stack perspective using perspectiveX, perspectiveY, perspectiveZ",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2790,
            "description": "Augments PageElement.setDelta(), to allow users to set the stack perspective using perspectiveX, perspectiveY, perspectiveZ",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2850,
            "description": "Helper function - set local dimensions (width, height)\n\n_Replaces PageElement.setLocalDimensions",
            "itemtype": "method",
            "name": "setLocalDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2930,
            "description": "Import elements into the stack DOM object, and create element object wrappers for them",
            "itemtype": "method",
            "name": "addElementById",
            "params": [
                {
                    "name": "DOM",
                    "description": "element id String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Element wrapper object on success; false otherwise"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2948,
            "description": "Import elements into the stack DOM object, and create element object wrappers for them",
            "itemtype": "method",
            "name": "addElementsByClassName",
            "params": [
                {
                    "name": "DOM",
                    "description": "element class String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of element wrapper objects on success; false otherwise"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2981,
            "description": "Move DOM elements within a Stack, via the Stack's groups",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Always true"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 2994,
            "description": "Reinitialize element with existing values",
            "itemtype": "method",
            "name": "domInit",
            "return": {
                "description": "Always true"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3007,
            "description": "Update element 3d transitions, via the Stack's groups",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "Always true"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3020,
            "description": "Update Pads via the Stack's groups",
            "itemtype": "method",
            "name": "renderPads",
            "return": {
                "description": "Always true"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3033,
            "description": "Calculates the pixels value of the object's perspective attribute",
            "itemtype": "method",
            "name": "setPerspective",
            "return": {
                "description": "Set the Stack element's perspective point"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3064,
            "description": "setCurrentPerspective helper function",
            "itemtype": "method",
            "name": "setCurrentPerspective",
            "return": {
                "description": "Set the Stack element's perspective point"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3085,
            "description": "Get dimensions of Stack",
            "itemtype": "method",
            "name": "getStackDimensions",
            "return": {
                "description": "Object with width and height attributes"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3153,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Element'",
            "final": 1,
            "class": "Element",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3162,
            "description": "Element's default height",
            "itemtype": "property",
            "name": "height",
            "type": "String",
            "default": "'auto'",
            "class": "Element",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3171,
            "description": "Return the DOM element wrapped by this object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "Element"
            },
            "class": "Element",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3224,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'ElementGroup'",
            "final": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3233,
            "description": "Array of SPRITENAME Strings of entitys that complement this ElementGroup",
            "itemtype": "property",
            "name": "entitys",
            "type": "Array",
            "default": "[]",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3240,
            "description": "Array of ELEMENTNAME Strings of elements that complement this ElementGroup",
            "itemtype": "property",
            "name": "elements",
            "type": "Array",
            "default": "[]",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3247,
            "description": "current value of widest element width",
            "itemtype": "property",
            "name": "currentWidth",
            "type": "Number",
            "default": "0",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3254,
            "description": "Current value of takkest element height",
            "itemtype": "property",
            "name": "currentHeight",
            "type": "Number",
            "default": "0",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3261,
            "description": "When true, forces all elements (including stacks, pads) to use the width of the currently widest element; default: false",
            "itemtype": "property",
            "name": "equalWidth",
            "type": "Boolean",
            "default": "false",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3268,
            "description": "When true, forces all elements (including stacks, pads) to use the height of the currently tallest element; default: false",
            "itemtype": "property",
            "name": "equalHeight",
            "type": "Boolean",
            "default": "false",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3275,
            "description": "STACKNAME of the default Stack object to which this group is associated",
            "itemtype": "property",
            "name": "recalculateDimensions",
            "type": "Boolean",
            "default": "false",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3282,
            "description": "STACKNAME of the default Stack object to which this group is associated",
            "itemtype": "property",
            "name": "stack",
            "type": "String",
            "default": "''",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3292,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "set",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3299,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "sortEntitys",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3306,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "forceStamp",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3313,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "stamp",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3323,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "filtersGroupInit",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3330,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "addEntitysToGroup",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3337,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "removeEntitysFromGroup",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3344,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "updateEntitysBy",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3351,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "setEntitysTo",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3358,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "pivotEntitysTo",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3365,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "getEntityAt",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3372,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "getEntitysByMouseIndex",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3379,
            "description": "Directly calls the equivalent Group function",
            "itemtype": "method",
            "name": "getAllEntitysAt",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3387,
            "description": "Element sorting routine - elements are sorted according to their element.order attribute value, in ascending order\n\nOrder values are treated as integers. The sort routine is a form of bucket sort, and should be stable (elements with equal order values should not be swapped)",
            "itemtype": "method",
            "name": "sortElements",
            "params": [
                {
                    "name": "force",
                    "description": "Force a resort, whatever the settings of the group's entitySort and resort attributes",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3402,
            "description": "Get collective dimensions of ElementGroup elements",
            "itemtype": "method",
            "name": "getElementGroupDimensions",
            "return": {
                "description": "Object with width and height attributes"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3440,
            "description": "Tell the Group to ask its constituent elements to render",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3489,
            "description": "Tell the Group to ask its constituent pads to render - will cascade through to sub-stacks",
            "itemtype": "method",
            "name": "renderPads",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3517,
            "description": "Reinitialize group elements with existing values",
            "itemtype": "method",
            "name": "domInit",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3538,
            "description": "A __display__ function to update DOM elements' 3d position/rotation\n\nArgument can contain the following (optional) attributes:\n\n* __quaternion__ - quaternion representing the rotation to be applied to the element\n* __distance__ - distance of element from the rotation origin",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3566,
            "description": "check whether this.equalHeight or this.equalWidth has been set to true",
            "itemtype": "method",
            "name": "checkEqualDimensions",
            "return": {
                "description": "True if either equalWidth or equalHeight is true; false otherwise"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3575,
            "description": "Add elements to the Group",
            "itemtype": "method",
            "name": "addElementsToGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of ELEMENTNAME Strings; alternatively, a single ELEMENTNAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3593,
            "description": "Remove elements from the Group",
            "itemtype": "method",
            "name": "removeElementsFromGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of ELEMENTNAME Strings; alternatively, a single ELEMENTNAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3611,
            "description": "Ask all elements in the Group to perform a setDelta() operation",
            "itemtype": "method",
            "name": "updateElementsBy",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3631,
            "description": "Ask all elements and entitys in the Group to perform a setDelta() operation",
            "itemtype": "method",
            "name": "updateBy",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3644,
            "description": "Ask all elements in the Group to perform a set() operation",
            "itemtype": "method",
            "name": "setElementsTo",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3662,
            "description": "Ask all elements in the Group to perform a dimension update operation",
            "itemtype": "method",
            "name": "updateDimensions",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3685,
            "description": "Ask all elements and entitys in the Group to perform a set() operation",
            "itemtype": "method",
            "name": "setEntitysTo",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3697,
            "description": "Return the entity or element at a given coordinate (in that order)",
            "itemtype": "method",
            "name": "getAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                },
                {
                    "name": "if",
                    "description": "true, elements are checked first; default is false",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "entity or element, or false"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3720,
            "description": "Check all entitys and elements in the Group to see which one(s) are associated with a particular mouse index",
            "itemtype": "method",
            "name": "getByMouseIndex",
            "params": [
                {
                    "name": "item",
                    "description": "Mouse index string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of Entity, Stack, Pad and Element objects"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3732,
            "description": "Check all entitys and elements in the Group to see if they are colliding with the supplied coordinate.",
            "itemtype": "method",
            "name": "getAllAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Entity object, or false if no entitys are colliding with the coordinate"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3744,
            "description": "Return the element at a given coordinate (in that order)",
            "itemtype": "method",
            "name": "getElementAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "element, or false"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3767,
            "description": "Check all elements in the Group to see which one(s) are associated with a particular mouse index",
            "itemtype": "method",
            "name": "getElementsByMouseIndex",
            "params": [
                {
                    "name": "item",
                    "description": "Mouse index string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of Stack, Pad and Element objects"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3776,
            "description": "Check all elements in the Group to see if they are colliding with the supplied coordinate.",
            "itemtype": "method",
            "name": "getAllElementsAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Array of Stack, Pad and Element objects"
            },
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3785,
            "description": "Require all elements in the Group to set their pivot attribute to the supplied STACKNAME, PADNAME, ELEMENTNAME, POINTNAME or SPRITENAME string, and set their handle Vector to reflect the current vector between that object's start Vector and their own Vector\n\nThis has the effect of turning a set of disparate eelements into a single, coordinated group.",
            "itemtype": "method",
            "name": "pivotElementsTo",
            "params": [
                {
                    "name": "item",
                    "description": "STACKNAME, PADNAME, ELEMENTNAME, POINTNAME or SPRITENAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3828,
            "description": "Augments ElementGroup.set()",
            "itemtype": "method",
            "name": "setDirtyStarts",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 3863,
            "description": "Augments ElementGroup.set()",
            "itemtype": "method",
            "name": "setDirtyHandles",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "ElementGroup",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 46,
            "description": "Alias for makeWheel()",
            "itemtype": "method",
            "name": "newWheel",
            "deprecated": true,
            "class": "window.scrawl_Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 54,
            "description": "A __factory__ function to generate new Wheel entitys",
            "itemtype": "method",
            "name": "makeWheel",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Wheel object"
            },
            "example": [
                "\n\tscrawl.makeWheel({\n\t\tradius: 50,\n\t\tstartX: 150,\n\t\tstartY: 60,\n\t\tfillStyle: 'blue',\n\t\tstrokeStyle: 'red',\n\t\tmethod: 'drawFill',\n\t\t});"
            ],
            "class": "window.scrawl_Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 72,
            "description": "Work vector, for wheel-specific calculations",
            "itemtype": "property",
            "name": "scrawl.work.workwheel",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 108,
            "description": "Circle radius - can be an absolute Numbewr value, or a percentage String value (relative to the Cell's width)",
            "itemtype": "property",
            "name": "radius",
            "type": "Number (or String)",
            "default": "0",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 129,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Wheel'",
            "final": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 138,
            "description": "Angle of the path's start point, from due east, in degrees",
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "default": "0",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 145,
            "description": "Angle of the path's end point, from due east, in degrees",
            "itemtype": "property",
            "name": "endAngle",
            "type": "Number",
            "default": "360",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 152,
            "description": "Drawing flag - true to draw the arc in a clockwise direction; false for anti-clockwise",
            "itemtype": "property",
            "name": "clockwise",
            "type": "Boolean",
            "default": "false",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 159,
            "description": "Drawing flag - true to close the path; false to keep the path open",
            "itemtype": "property",
            "name": "closed",
            "type": "Boolean",
            "default": "true",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 166,
            "description": "Drawing flag - true to include the center in the path (for wedge shapes); false for circles",
            "itemtype": "property",
            "name": "includeCenter",
            "type": "Boolean",
            "default": "false",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 173,
            "description": "Collision calculation flag - true to use a simple radius check; false to use the JavaScript isPointInPath() function",
            "itemtype": "property",
            "name": "checkHitUsingRadius",
            "type": "Boolean",
            "default": "true",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 180,
            "description": "Collision calculation value - collision radius, from start vector\n\nMay be an absolute number value, or a percentage String (relative to the Cell's width)",
            "itemtype": "property",
            "name": "checkHitRadius",
            "type": "Number (or String)",
            "default": "0",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 189,
            "description": "Calculated radius value",
            "itemtype": "property",
            "name": "localRadius",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 197,
            "description": "Collision calculation value - collision radius, from start vector",
            "itemtype": "property",
            "name": "localCheckHitRadius",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 208,
            "description": "Augments Entity.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 230,
            "description": "set helper function",
            "itemtype": "method",
            "name": "setRadius",
            "return": {
                "description": "Number - local radius value"
            },
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 247,
            "description": "Augments Entity.setDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 284,
            "description": "Check a set of coordinates to see if any of them fall within this entity's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n* __pad__ - PADNAME String\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values\n\nIf the __checkHitUsingRadius__ attribute is true, collisions will be detected using a simple distance comparison; otherwise the JavaScript isPointInPath() function will be invoked",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the entity's path; false if none fall within the path"
            },
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 357,
            "description": "Stamp helper function - define the entity's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 382,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 396,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 413,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 446,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 461,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 476,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 493,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 510,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 526,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 542,
            "description": "Stamp helper function - perform a 'none' method draw",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this entity's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 555,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the entity's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 650,
            "description": "Calculate the box position of the entity\n\nReturns an object with the following attributes:\n\n* __left__ - x coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __top__ - y coordinate of top-left corner of the enclosing box relative to the current cell's top-left corner\n* __bottom__ - x coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner\n* __left__ - y coordinate of bottom-right corner of the enclosing box relative to the current cell's top-left corner",
            "itemtype": "method",
            "name": "getMaxDimensions",
            "params": [
                {
                    "name": "cell",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "entity",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "dimensions object"
            },
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: methodmakewelement",
            "line": " source\\scrawlStacks.js:2484"
        },
        {
            "message": "Missing item type\nsetStampUsingPivot helper object",
            "line": " source\\scrawlCore.js:3687"
        },
        {
            "message": "Missing item type\nInterrogates a &lt;canvas&gt; element's context engine and returns an object of non-default attributes",
            "line": " source\\scrawlCore.js:6626"
        },
        {
            "message": "Missing item type\nAlias for makeVideo()\nmethod newVideo",
            "line": " source\\scrawlImageLoad.js:88"
        },
        {
            "message": "Missing item type\nA __factory__ function to generate new Element objects",
            "line": " source\\scrawlStacks.js:2484"
        }
    ]
}