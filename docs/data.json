{
    "project": {
        "name": "scrawl",
        "description": "",
        "version": "3.1.5",
        "url": ""
    },
    "files": {
        "source\\scrawlAnimation.js": {
            "name": "source\\scrawlAnimation.js",
            "modules": {
                "scrawlAnimation": 1
            },
            "classes": {
                "window.scrawl_Animation": 1,
                "Animation": 1,
                "Tween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlBlock.js": {
            "name": "source\\scrawlBlock.js",
            "modules": {
                "scrawlBlock": 1
            },
            "classes": {
                "window.scrawl_Block": 1,
                "Block": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlCollisions.js": {
            "name": "source\\scrawlCollisions.js",
            "modules": {
                "scrawlCollisions": 1
            },
            "classes": {
                "window.scrawl_Collisions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlColor.js": {
            "name": "source\\scrawlColor.js",
            "modules": {
                "scrawlColor": 1
            },
            "classes": {
                "window.scrawl_Color": 1,
                "Color": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlCore.js": {
            "name": "source\\scrawlCore.js",
            "modules": {
                "scrawlCore": 1
            },
            "classes": {
                "window.scrawl": 1,
                "Vector": 1,
                "Quaternion": 1,
                "Base": 1,
                "Position": 1,
                "PageElement": 1,
                "Pad": 1,
                "Cell": 1,
                "Context": 1,
                "Group": 1,
                "Sprite": 1,
                "Design": 1,
                "Gradient": 1,
                "RadialGradient": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlFilters.js": {
            "name": "source\\scrawlFilters.js",
            "modules": {
                "scrawlFilters": 1
            },
            "classes": {
                "window.scrawl_Filters": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlImages.js": {
            "name": "source\\scrawlImages.js",
            "modules": {
                "scrawlImages": 1
            },
            "classes": {
                "window.scrawl_Images": 1,
                "Pattern": 1,
                "Picture": 1,
                "ScrawlImage": 1,
                "AnimSheet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPath.js": {
            "name": "source\\scrawlPath.js",
            "modules": {
                "scrawlPath": 1
            },
            "classes": {
                "window.scrawl_Path": 1,
                "Path": 1,
                "Point": 1,
                "Link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPathFactories.js": {
            "name": "source\\scrawlPathFactories.js",
            "modules": {
                "scrawlPathFactories": 1
            },
            "classes": {
                "window.scrawl_Factories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPhrase.js": {
            "name": "source\\scrawlPhrase.js",
            "modules": {
                "scrawlPhrase": 1
            },
            "classes": {
                "window.scrawl_Phrase": 1,
                "Phrase": 1,
                "Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlPhysics.js": {
            "name": "source\\scrawlPhysics.js",
            "modules": {
                "scrawlPhysics": 1
            },
            "classes": {
                "window.scrawl_Physics": 1,
                "Particle": 1,
                "Spring": 1,
                "Force": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlSaveLoad.js": {
            "name": "source\\scrawlSaveLoad.js",
            "modules": {
                "scrawlSaveLoad": 1
            },
            "classes": {
                "window.scrawl_SaveLoad": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlShape.js": {
            "name": "source\\scrawlShape.js",
            "modules": {
                "scrawlShape": 1
            },
            "classes": {
                "window.scrawl_Shape": 1,
                "Shape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlStacks.js": {
            "name": "source\\scrawlStacks.js",
            "modules": {
                "scrawlStacks": 1
            },
            "classes": {
                "window.scrawl_Stacks": 1,
                "Stack": 1,
                "Element": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source\\scrawlWheel.js": {
            "name": "source\\scrawlWheel.js",
            "modules": {
                "scrawlWheel": 1
            },
            "classes": {
                "window.scrawl_Wheel": 1,
                "Wheel": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "scrawlAnimation": {
            "name": "scrawlAnimation",
            "submodules": {},
            "classes": {
                "window.scrawl_Animation": 1,
                "Animation": 1,
                "Tween": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlAnimation.js",
            "line": 806,
            "description": "# scrawlAnimation\n\n## Purpose and features\n\nThe Animation module adds support for animation and tweening to the core\n\n* Adds and starts an animation loop to the core\n* Defines the Animation object, used to program animation sequences\n* Defines the Tween object - a specialized form of animation which has pre-determined start and end points, durations and easing options\n* Adds functionality to various core objects and functions so they can take advantage of the animation object"
        },
        "scrawlBlock": {
            "name": "scrawlBlock",
            "submodules": {},
            "classes": {
                "window.scrawl_Block": 1,
                "Block": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlBlock.js",
            "line": 69,
            "description": "# scrawlBlock\n\n## Purpose and features\n\nThe Block module adds Block sprites - squares and rectangles - to the core module\n\n* Defines 'rect' objects for displaying on a Cell's canvas\n* Performs 'rect' based drawing operations on canvases"
        },
        "scrawlCollisions": {
            "name": "scrawlCollisions",
            "submodules": {},
            "classes": {
                "window.scrawl_Collisions": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlCollisions.js",
            "line": 39,
            "description": "# scrawlCollisions\n\n## Purpose and features\n\nThe Collisions module adds support for detecting collisions between sprites\n\n* Adds functionality to various core objects and functions so they can take detect collisions"
        },
        "scrawlColor": {
            "name": "scrawlColor",
            "submodules": {},
            "classes": {
                "window.scrawl_Color": 1,
                "Color": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlColor.js",
            "line": 56,
            "description": "# scrawlColor\n\n## Purpose and features\n\nThe Color module adds a controllable color object that can be used with sprite fillStyle and strokeStyle attributes"
        },
        "scrawlCore": {
            "name": "scrawlCore",
            "submodules": {},
            "classes": {
                "window.scrawl": 1,
                "Vector": 1,
                "Quaternion": 1,
                "Base": 1,
                "Position": 1,
                "PageElement": 1,
                "Pad": 1,
                "Cell": 1,
                "Context": 1,
                "Group": 1,
                "Sprite": 1,
                "Design": 1,
                "Gradient": 1,
                "RadialGradient": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlCore.js",
            "line": 5962,
            "description": "# scrawlCore\n\n## Version 3.1.5 - 30 July 2014\n\nDeveloped by Rik Roots - <rik.roots@gmail.com>, <rik@rikweb.org.uk>\n\nScrawl demo website: <http://scrawl.rikweb.org.uk>\n\n## Purpose and features\n\nThe core module is the only essential module in Scrawl. It must always be directly, and completely, loaded into the web page before any additional Scrawl modules are added to it. \n\n* Defines the Scrawl scope - __window.scrawl__\n\n* Defines a number of utility methods used throughout Scrawl.js\n\n* Defines the Scrawl library - all significant objects created by Scrawl can be found here\n\n* Searches the DOM for &lt;canvas&gt; elements, and imports them into the Scrawl library\n\n* Instantiates controllers (Pad objects) and wrappers (Cell objects) for each &lt;canvas&gt; element\n\n* Instantiates Context engine objects for each Cell object\n\n* Defines mouse functionality in relation to &lt;canvas&gt; elements\n\n* Defines the core functionality for Sprite objects to be displayed on &lt;canvas&gt; elements; the different types of Sprites are defined in separate modules which need to be loaded into the core\n\n* Defines Group objects, used to group sprites together for display and interaction purposes\n\n* Defines Design objects - Gradient and RadialGradient - which can be used by Sprite objects for their _fill_ and _stroke_ styles; additional Design objects (Pattern, Color) are defined in separate modules\n\n## Loading the module",
            "example": [
                "\n\t<script src=\"path/to/scrawlCore-min.js\"></script>"
            ]
        },
        "scrawlFilters": {
            "name": "scrawlFilters",
            "submodules": {},
            "classes": {
                "window.scrawl_Filters": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlFilters.js",
            "line": 38,
            "description": "# scrawlFilters\n\n## Purpose and features\n\nThe Filters module adds a set of filter algorithms to the Scrawl library"
        },
        "scrawlImages": {
            "name": "scrawlImages",
            "submodules": {},
            "classes": {
                "window.scrawl_Images": 1,
                "Pattern": 1,
                "Picture": 1,
                "ScrawlImage": 1,
                "AnimSheet": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlImages.js",
            "line": 1441,
            "description": "# scrawlImages\n\n## Purpose and features\n\nThe Images module adds support for displaying images on canvas elements\n\n* Defines the SpriteImage object, which wraps &lt;img&gt; and &lt;svg&gt; elements\n* Adds functionality to load images into the Scrawl library dynamically (after the web page hads loaded)\n* Defines the Picture sprite, which can be used to display file images (including animated sprite sheets), other &lt;canvas&gt; elements, and &lt;video&gt; elements (experimental)\n* Defines the AnimSheet object, which in turn define and control action sequences from sprite sheet images\n* Defines the Pattern design, which uses images for sprite fillStyle and strokeStyle attributes"
        },
        "scrawlPath": {
            "name": "scrawlPath",
            "submodules": {},
            "classes": {
                "window.scrawl_Path": 1,
                "Path": 1,
                "Point": 1,
                "Link": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPath.js",
            "line": 1474,
            "description": "# scrawlPath\n\n## Purpose and features\n\nThe Path module adds Path sprites - path-based objects - to the core module\n\n* Defines a sprite composed of lines, quadratic and bezier curves, etc\n* Can act as a path along which other sprites can be positioned and animated\n* See also Shape object, which achieves a similar thing in a different way"
        },
        "scrawlPathFactories": {
            "name": "scrawlPathFactories",
            "submodules": {},
            "classes": {
                "window.scrawl_Factories": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPathFactories.js",
            "line": 37,
            "description": "# scrawlPathFactories\n\n## Purpose and features\n\nThe Factories module adds a set of factory functions to the Scrawl library, which can be used to generate both Path and Shape sprites"
        },
        "scrawlPhrase": {
            "name": "scrawlPhrase",
            "submodules": {},
            "classes": {
                "window.scrawl_Phrase": 1,
                "Phrase": 1,
                "Text": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPhrase.js",
            "line": 736,
            "description": "# scrawlPhrase\n\n## Purpose and features\n\nThe Phrase module adds Phrase sprites - single and multi-line text objects - to the core module\n\n* Defines text objects for displaying on a Cell's canvas\n* Handles all related font functionality\n* Performs text drawing operations on canvases"
        },
        "scrawlPhysics": {
            "name": "scrawlPhysics",
            "submodules": {},
            "classes": {
                "window.scrawl_Physics": 1,
                "Particle": 1,
                "Spring": 1,
                "Force": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlPhysics.js",
            "line": 774,
            "description": "# scrawlPhysics\n\n## Purpose and features\n\nAdds an (experimental) physics engine to the core\n\n* Adds Particle, Spring and Force objects to the mix\n* Defines a number of engines for calculating interactions between these objects"
        },
        "scrawlSaveLoad": {
            "name": "scrawlSaveLoad",
            "submodules": {},
            "classes": {
                "window.scrawl_SaveLoad": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlSaveLoad.js",
            "line": 40,
            "description": "# scrawlSaveLoad\n\n## Purpose and features\n\nAdds the ability to save and load Scrawl objects and scenes as JSON strings\n\n_This module is experimental and thus likely to change significantly as Scrawl evolves_"
        },
        "scrawlShape": {
            "name": "scrawlShape",
            "submodules": {},
            "classes": {
                "window.scrawl_Shape": 1,
                "Shape": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlShape.js",
            "line": 66,
            "description": "# scrawlShape\n\n## Purpose and features\n\nThe Shape module adds Shape sprites - path-based objects - to the core module\n\n* Defines a sprite composed of lines, quadratic and bezier curves, etc\n* See also Path object, which achieves a similar thing in a different way"
        },
        "scrawlStacks": {
            "name": "scrawlStacks",
            "submodules": {},
            "classes": {
                "window.scrawl_Stacks": 1,
                "Stack": 1,
                "Element": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlStacks.js",
            "line": 1534,
            "description": "# scrawlStacks\n\n## Purpose and features\n\nThe Stacks module adds support for CSS3 3d transformations to visible &lt;canvas&gt;, and other, elements\n\n* Significantly amends the PageElement object and functions\n* Adds core functions for detecting and including Scrawl stacks and associated elements in the library\n* Defines the Stack object, which contains all DOM elements to be manipulated by this stack\n* Defines the Element object, which wrap DOM elements (excluding &lt;canvas&gt; elements) included in a stack"
        },
        "scrawlWheel": {
            "name": "scrawlWheel",
            "submodules": {},
            "classes": {
                "window.scrawl_Wheel": 1,
                "Wheel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source\\scrawlWheel.js",
            "line": 72,
            "description": "# scrawlWheel\n\n## Purpose and features\n\nThe Wheel module adds Wheel sprites - circles, segments and filled arcs - to the core module\n\n* Defines 'arc' objects for displaying on a Cell's canvas\n* Performs 'arc' based drawing operations on canvases"
        }
    },
    "classes": {
        "window.scrawl_Animation": {
            "name": "window.scrawl_Animation",
            "shortname": "window.scrawl_Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 47,
            "description": "# window.scrawl\n\nscrawlAnimation module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.animation - for Animation and Tween objects\n\n* scrawl.doAnimation - a boolean switch to start/stop the animation loop\n* scrawl.animate - the animation loop function\n\n## New default attributes\n\n* Position.delta - default: {x:0,y:0,z:0};\n* Position.deltaPathPlace - default: 0;\n* Position.pathSpeedConstant - default: true;\n* Position.path - default: '';\n\n* Cell.sourceDelta - default: {x:0, y:0, z:0};\n* Cell.sourceMinWidth - default: 0;\n* Cell.sourceMaxWidth - default: 0;\n* Cell.sourceMinHeight - default: 0;\n* Cell.sourceMaxHeight - default: 0;\n\n* Design.roll - default: 0;\n* Design.autoUpdate - default: false;"
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 709,
            "description": "# Animation\n\t\n## Instantiation\n\n* scrawl.newAnimation()\n\n## Purpose\n\n* Defines an animation function to be run by the scrawl.animationLoop() function\n\n## Access\n\n* scrawl.animation.ANIMATIONNAME - for the Animation object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlAnimation",
            "namespace": "",
            "file": "source\\scrawlAnimation.js",
            "line": 806,
            "description": "# Tween\n\t\n## Instantiation\n\n* scrawl.newTween()\n\n## Purpose\n\n* Defines an animation to be applied to a Scrawl object\n\nTweens are animations defined by duration (how long they should run for) and distance (how much an attribute needs to change over the course of the tween).\n\n* One tween can change several attributes of an object, and can apply these changes to one or more objects as the tween runs its course.\n* Any attribute that holds a Number type value can be tweened\n* The starting point for each attribute tween is set in the __start__ attribute object\n* The ending point for each attribute tween is set in the __end__ attribute object\n* If an ending point is defined for an attribute, but no starting point, then the tween will use the object's attribute's current value for the starting point.\n* Individual _easing engines_ can be defined for each attribute in the __engines__ attribute object.\n\nThe objects on which the tween will operate are passed to the tween as an array of objects, in the __targets__ attribute\n\n* A tween will only run on an object that is not currently being animated by another tween\n* A tween cannot be run if it is already running.\n\nThe duration of the tween is set in the __duration__ attribute, in milliseconds.\n\nTweens can hold data for attribute changes to be applied to their object(s) before the tween starts(__onCommence__) and after the tween ends (__onComplete__).\n\nTweens can be chained by setting the __nextTween__ attribute to the String _name_ attribute of the next tween to be run.\n\nTweens come with a number of flags and attributes to indicate how many times they should be run before completing:\n\n* Set the __count__ attribute to a positive integer to run the tween that many times. Setting the attribute to _true_ will run the tween forever\n* Tween direction can be reversed by setting the __reverse__ flag to _true_\n* Setting the __autoReverse__ flag to true will automatically reverse the tween's direction at the end of each run\n* Setting the __autoReverseAndRun__ reverses the tween's direction and immediately running it again.\n\n## Access\n\n* scrawl.animation.TWEENNAME - for the Tween object\n\n## Tween functions\n\n* Start a tween by calling the __run()__ function on it.\n* Tween animation can be stopped by calling the __halt()__ function on it.\n* A Tween can be deleted by calling the __kill()__ function on it.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Block": {
            "name": "window.scrawl_Block",
            "shortname": "window.scrawl_Block",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlBlock",
            "namespace": "",
            "file": "source\\scrawlBlock.js",
            "line": 40,
            "description": "# window.scrawl\n\nscrawlBlock module adaptions to the Scrawl library object"
        },
        "Block": {
            "name": "Block",
            "shortname": "Block",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlBlock",
            "namespace": "",
            "file": "source\\scrawlBlock.js",
            "line": 69,
            "description": "# Block\n\t\n## Instantiation\n\n* scrawl.newBlock()\n\n## Purpose\n\n* Defines 'rect' objects for displaying on a Cell's canvas\n* Performs 'rect' based drawing operations on canvases\n\n## Access\n\n* scrawl.sprite.BLOCKNAME - for the Block sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Collisions": {
            "name": "window.scrawl_Collisions",
            "shortname": "window.scrawl_Collisions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCollisions",
            "namespace": "",
            "file": "source\\scrawlCollisions.js",
            "line": 39,
            "description": "# window.scrawl\n\nscrawlCollisions module adaptions to the Scrawl library object\n\n## New default attributes\n\n* Position.delta - default: {x:0,y:0,z:0};\n* Cell.fieldLabel - default: '';\n* Sprite.fieldChannel - default: 'anycolor';\n* Sprite.fieldTest - default: 0;\n* Sprite.collisionVectors - default: [];\n* Sprite.collisionPoints - default: [];"
        },
        "window.scrawl_Color": {
            "name": "window.scrawl_Color",
            "shortname": "window.scrawl_Color",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlColor",
            "namespace": "",
            "file": "source\\scrawlColor.js",
            "line": 38,
            "description": "# window.scrawl\n\nscrawlColor module adaptions to the Scrawl library object"
        },
        "Color": {
            "name": "Color",
            "shortname": "Color",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlColor",
            "namespace": "",
            "file": "source\\scrawlColor.js",
            "line": 56,
            "description": "# Color\n\t\n## Instantiation\n\n* scrawl.newColor()\n\n## Purpose\n\n* Defines a color object\n* Used with sprite.strokeStyle and sprite.fillStyle attributes\n\n## Access\n\n* scrawl.design.COLORNAME - for the Color design object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl": {
            "name": "window.scrawl",
            "shortname": "window.scrawl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 70,
            "description": "# window.scrawl\n\nThe Scrawl library object. All objects, attributes and functions contained in the library can be accessed by any other JavaScript code running on the web page.\n\nThe library will expand and change as additional Scrawl modules load.\n\n## Purpose:\n\n* Holds links to every substantive object created by Scrawl.js and user code\n* Also holds links to key DOM objects\n* Functions for loading canvas elements on initialization, and for dynamically creating canvases on the web page\n* Shorthand functions for rendering canvases\n* Some general helper functions for testing variables that can be used by coders \n\nCore creates the following sections in the library:\n\n* scrawl.__object__ - Contains key:value pairs for storing miscellaneous objects, for instance handles to DOM image elements imported into scrawl via scrawl.getImagesByClass()\n* scrawl.__pad__ - Contains PADNAME:Object pairs for each instantiated Pad canvas controller object\n* scrawl.__cell__ - Contains CELLNAME:Object pairs for each instantiated Cell canvas wrapper object\n* scrawl.__canvas__ - Contains CELLNAME:object pairs linking to each Cell object's DOM &lt;canvas&gt; element\n* scrawl.__context__ - Contains CELLNAME:Object pairs linking to each &lt;canvas&gt; element's context engine\n* scrawl.__ctx__ - Contains CONTEXTNAME:Object pairs linking to each instantiated Scrawl Context object (used by Cell and Sprite objects)\n* scrawl.__imageData__ - Contains key:value pairs linking to JavaScript image data objects\n* scrawl.__group__ - Contains GROUPNAME:Object pairs linking to each instantiated Group object\n* scrawl.__design__ - Contains DESIGNNAME:Object pairs for each instantiated design object (Gradient, RadialGradient, Pattern, Color)\n* scrawl.__dsn__ - Contains DESIGNNAME:precompiled gradient/pattern context object pairs (Gradient, RadialGradient, Pattern)\n* scrawl.__sprite__ - Contains SPRITENAME:Object pairs for each instantiated sprite object (Block, Phrase, Picture, Wheel, Path, Shape, Particle)"
        },
        "Vector": {
            "name": "Vector",
            "shortname": "Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 1121,
            "description": "# Vector\n\n## Instantiation\n\n* scrawl.newVector()\n\n## Purpose\n\n* To hold vector (coordinate, movement) data",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 1534,
            "description": "# Quaternion\n\n## Instantiation\n\n* scrawl.newQuaternion()\n\n## Purpose\n\n* To hold quaternion (3d rotation) data",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Base": {
            "name": "Base",
            "shortname": "Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2029,
            "description": "# Base \n\n## Instantiation\n\n* This object should never be instantiated by users\n\t\n## Purpose\n\n* the root object for all other Scrawl objects (except Vectors, Quaternions)\n* gives every object its (unique) name attribute\n* also supplies title and comment attributes (very basic assistive technology)\n* provides basic getter and setter functions, and a JSON-based toString function\n* sets out the cloning strategy for other objects, and restricts which object types can be cloned",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Position": {
            "name": "Position",
            "shortname": "Position",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2188,
            "description": "# Position\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* supplies objects with basic positional and scaling attributes, and methods for manipulating them\n* start coordinates are relative to the top left corner of the object's Cell\n* handle coordinates are relative to the object's start coordinate\n\nCertain Scrawl modules will add functionality to this object, for instance scrawlAnimation adds delta attributes which can be used to automatically update the position of a Scrawl sprite.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "PageElement": {
            "name": "PageElement",
            "shortname": "PageElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 2663,
            "description": "# PageElement\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* supplies DOM elements with basic dimensional, positional and scaling attributes, and methods for manipulating them\n\nThe core implementation of this object is a stub that supplies Pad objects with basic mouse position support. The stacks module will substantially modify it to provide CSS3 3d positioning and animation functionality for Stack, Element and Pad objects.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Pad": {
            "name": "Pad",
            "shortname": "Pad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 3040,
            "description": "# Pad\n\t\n## Instantiation\n\n* created automatically for any &lt;canvas&gt; element found on the web page when it loads\n* also, scrawl.addCanvasToPage()\n* should not be instantiated directly by users\n\n## Purpose\n\n* controller (not wrapper) object for canvas elements included in the DOM\n* coordinates activity between visible canvas element and other (non-DOM) canvas elements that contribute to it\n\nBecause the Pad constructor calls the Cell constructor as part of the construction process (Cell objects __wrap__ &lt;canvas&gt; elements; Pad objects __control__ &lt;canvas&gt; elements), Cell attributes can be included in the Pad constructor object and picked up by the resultant Cell objects.\n\n## Access\n\n* scrawl.pad.PADNAME - for the Pad object\n* scrawl.canvas.PADNAME - for the Pad object's visible &lt;canvas&gt; element\n* scrawl.context.PADNAME - for the &ltcanvas&gt; element's 2d context engine\n* scrawl.cell[scrawl.pad.PADNAME.display] - for the Pad object's display cell\n* scrawl.cell[scrawl.pad.PADNAME.base] - for the Pad object's base cell",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 3574,
            "description": "# Cell\n\t\n## Instantiation\n\n* created automatically for any &lt;canvas&gt; element found on the web page when it loads\n* scrawl.addCanvasToPage()\n* scrawl.addNewCell()\n* Pad.addNewCell()\n* should not be instantiated directly by users\n\n## Purpose\n\n* Acts as a wrapper for each &lt;canvas&gt; element - whether that canvas is part of the DOM or not\n* Oversees manipulation of the &lt;canvas&gt; element's context engine\n* Responsible clearing &lt;canvas&gt; elements, and for copying one &lt;canvas&gt; to another\n* Includes functionality to pivot, path, flip, lock and roll cell positioning in the display scene\n* Controls scrolling and zoom effects between &lt;canvas&gt; elements\n* Builds &lt;canvas&gt; element collision fields from sprite data\n* Undertakes collision detection between sprites and a collision field\n\n_Note: A Cell is entirely responsible for determining what portion of its &lt;canvas&gt; element's content will be copied to another &lt;canvas&gt; and where that copy will appear on the destination &lt;canvas&gt;._\n\n## Access\n\n* scrawl.cell.CELLNAME - for the Cell object\n* scrawl.pad[scrawl.cell.CELLNAME.pad] - for the Cell object's Pad object",
            "is_constructor": 1,
            "extends": "Position",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Context": {
            "name": "Context",
            "shortname": "Context",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Sprite"
            ],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 4356,
            "description": "# Context\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* wraps a given context for a Cell or Sprite object\n* responsible for comparing contexts and listing changes that need to be made for successful Sprite stamping on a canvas\n* all updates to a Context object's attributes should be performed via the Sprite object's set() function",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Group": {
            "name": "Group",
            "shortname": "Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 4716,
            "description": "# Group\n\t\n## Instantiation\n\n* scrawl.newGroup()\n\n## Purpose\n\n* associates sprite objects with a cell object, for stamping/compiling the &lt;canvas&gt; scene\n* groups Sprite objects for specific purposes\n* (with collisions module) plays a key role in collision detection between Sprites\n\n## Access\n\n* scrawl.group.GROUPNAME - for the Group object\n* scrawl.cell[scrawl.group.GROUPNAME.cell] - for the Group object's default Cell object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 5009,
            "description": "# Sprite\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Supplies the common methodology for all Scrawl sprites: Phrase, Block, Wheel, Picture, Path, Shape\n* Sets up the attributes for holding a sprite's current state: position, visibility, rotation, drawing order, context\n* Describes how sprites should be stamped onto a Cell's canvas\n* Provides drag-and-drop functionality\n\n__Scrawl core does not include any sprite type constructors.__ Each sprite type used on a web page canvas needs to be added to the core by loading its associated module:\n\n* __Block__ sprites are defined in the _scrawlBlock_ module (alias: block)\n* __Wheel__ sprites are defined in the _scrawlWheel_ module (alias: wheel)\n* __Phrase__ sprites are defined in the _scrawlPhrase_ module (alias: phrase)\n* __Picture__ sprites are defined as part of the _scrawlImages_ module (alias: images)\n* __Path__ sprites are defined in the _scrawlPath_ module (alias: path)\n* __Shape__ sprites are defined in the _scrawlShape_ module (alias: shape)\n* additional factory functions for defining common Path and Shape objects (lines, curves, ovals, triangles, stars, etc) are supplied by the _scrawlPathFactories_ module (alias: factories)",
            "is_constructor": 1,
            "extends": "Position",
            "uses": [
                "Context"
            ],
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Design": {
            "name": "Design",
            "shortname": "Design",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 5637,
            "description": "# Design\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n\n## Purpose\n\n* Defines gradients and radial gradients used with sprite objects' strokeStyle and fillStyle attributes",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Gradient": {
            "name": "Gradient",
            "shortname": "Gradient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 5901,
            "description": "# Gradient\n\t\n## Instantiation\n\n* scrawl.newGradient()\n\n## Purpose\n\n* Defines a linear gradient\n* Used with sprite.strokeStyle and sprite.fillStyle attributes\n\n## Access\n\n* scrawl.design.GRADIENTNAME - for the Gradient object",
            "is_constructor": 1,
            "extends": "Design",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "RadialGradient": {
            "name": "RadialGradient",
            "shortname": "RadialGradient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlCore",
            "namespace": "",
            "file": "source\\scrawlCore.js",
            "line": 5962,
            "description": "# RadialGradient\n\t\n## Instantiation\n\n* scrawl.newRadialGradient()\n\n## Purpose\n\n* Defines a radial gradient\n* Used with sprite.strokeStyle and sprite.fillStyle attributes\n\n## Access\n\n* scrawl.design.RADIALGRADIENTNAME - for the RadialGradient object",
            "is_constructor": 1,
            "extends": "Design",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Filters": {
            "name": "window.scrawl_Filters",
            "shortname": "window.scrawl_Filters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlFilters",
            "namespace": "",
            "file": "source\\scrawlFilters.js",
            "line": 38,
            "description": "# window.scrawl\n\nscrawlFilters module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.filter - for image filter algorithms"
        },
        "window.scrawl_Images": {
            "name": "window.scrawl_Images",
            "shortname": "window.scrawl_Images",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 45,
            "description": "# window.scrawl\n\nscrawlImages module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.image - for ScrawlImage objects\n* scrawl.img - linking to copies of DOM &lt;img&gt; elements - links to the original elements are stored in scrawl.object\n* scrawl.anim - for AnimSheet objects"
        },
        "Pattern": {
            "name": "Pattern",
            "shortname": "Pattern",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 256,
            "description": "# Pattern\n\t\n## Instantiation\n\n* scrawl.newPattern()\n\n## Purpose\n\n* Defines a pattern\n* Used with sprite.strokeStyle and sprite.fillStyle attributes\n\n## Access\n\n* scrawl.design.PATTERNNAME - for the Pattern design object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Picture": {
            "name": "Picture",
            "shortname": "Picture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 469,
            "description": "# Picture\n\t\n## Instantiation\n\n* scrawl.newPicture()\n\n## Purpose\n\n* Defines rectangular image-based objects for displaying on a Cell's canvas\n* Used to display both static and sprite sheet image animations\n* Links to details of an image's data; can use image data (rgba data) during collision detection\n* Can handle video input (experimental)\n* Performs 'rect' and 'drawImage' drawing operations on canvases\n\n## Access\n\n* scrawl.sprite.PICTURENAME - for the Picture sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "uses": [
                "AnimSheet"
            ],
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "ScrawlImage": {
            "name": "ScrawlImage",
            "shortname": "ScrawlImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 1231,
            "description": "# ScrawlImage\n\t\n## Instantiation\n\n* scrawl.getImagesByClass()\n\n## Purpose\n\n* Wraps DOM image elements imported into the scrawl library - &lt;img&gt;, &lt;video&gt;, &lt;svg&gt;\n* Used by __Picture__ sprites and __Pattern__ designs\n\n## Access\n\n* scrawl.image.SCRAWLIMAGENAME - for the ScrawlImage object\n* scrawl.object.SCRAWLIMAGENAME - for a link to the original &lt;img&gt;, &lt;svg&gt; or &lt;video&gt; element\n* scrawl.img.SCRAWLIMAGENAME - for a link to a working copy of the original &lt;img&gt; element (as generated by filters)",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "AnimSheet": {
            "name": "AnimSheet",
            "shortname": "AnimSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Picture"
            ],
            "module": "scrawlImages",
            "namespace": "",
            "file": "source\\scrawlImages.js",
            "line": 1441,
            "description": "# AnimSheet\n\t\n## Instantiation\n\n* scrawl.newAnimSheet()\n\n## Purpose\n\n* wraps a sprite sheet image\n* acts as the link between a Picture object and the sprite images on the sprite sheet\n* holds data about cells in the spritesheet animation\n* controls the animation playback\n\n## Access\n\n* scrawl.anim.ANIMSHEETNAME\n* scrawl.anim.[scrawl.sprite.PICTURENAME.animsheet]\n\nAnimSheet attributes can also be set and retrieved directly using Picture.get() and Picture.set() functions, where a Picture sprite is associated with the AnimSheet object via its .animSheet attribute",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Path": {
            "name": "window.scrawl_Path",
            "shortname": "window.scrawl_Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 42,
            "description": "# window.scrawl\n\nscrawlPath module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.point \n* scrawl.link \n\n## New default attributes\n\n* Position.pathPlace - default: 0\n* Position.pathRoll - default: 0;\n* Position.addPathRoll - default: false;\n* Position.path - default: '';"
        },
        "Path": {
            "name": "Path",
            "shortname": "Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 511,
            "description": "# Path\n\t\n## Instantiation\n\n* scrawl.makePath() - Irregular, path-based shapes\n\nAdditional factory functions to instantiate Path objects are available in the __pathFactoryFunctions__ module\n\n## Purpose\n\n* Defines a sprite composed of lines, quadratic and bezier curves, etc\n* Makes use of, but doesn't contain, Point and Link objects to define the sprite\n* Can be used as a path for placing and animating other sprites\n* Point objects can be used as pivots by other sprites\n\n## Access\n\n* scrawl.sprite.PATHNAME - for the Path sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 1190,
            "description": "# Point\n\t\n## Instantiation\n\n* Objects created via Path factories\n* scrawl.makeCartesianPoints() - deprecated\n* scrawl.makePolarPoints() - deprecated\n\n## Purpose\n\n* Defines a movable point within a Path sprite object\n* Acts as a coordinate vector for Link drawing\n\nPath creation factories will all create Point objects automatically as part of the generation process. Point objects will be named regularly, depending on the factory:\n\n* scrawl.makeLine(): SPRITENAME_p1 (start point), SPRITENAME_p2 (end point)\n* scrawl.makeQuadratic(): SPRITENAME_p1 (start point), SPRITENAME_p2 (control point), SPRITENAME_p3 (end point)\n* scrawl.makeBezier(): SPRITENAME_p1 (start point), SPRITENAME_p2 (first control point), SPRITENAME_p3 (second control point), SPRITENAME_p4 (end point)\n* scrawl.makeRegularShape(): each angle point is numbered consecutively, starting at SPRITENAME_p1\n* scrawl.makePath(): points are numbered consecutively, beginning from SPRITENAME_p1 at the start of the path; the end point of a line, quadratic curve or bezier curve will also act as the start point for the next line or curve\n\n## Access\n\n* scrawl.point.POINTNAME - for the Point object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Link": {
            "name": "Link",
            "shortname": "Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPath",
            "namespace": "",
            "file": "source\\scrawlPath.js",
            "line": 1474,
            "description": "# Link\n\t\n## Instantiation\n\n* Objects created via Path factories\n\n## Purpose\n\n* Defines the type of line to be drawn between two Point objects\n* Can be of the form (species): line, bezier, quadratic\n* Posesses actions: 'add', 'move' (to not draw a line), 'close' (end Point is Path object's startPoint), 'end' (for non-closed Path objects)\n* Makes use of additional control points to determine curves\n\n## Access\n\n* scrawl.link.LINKNAME - for the Link object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "window.scrawl_Factories": {
            "name": "window.scrawl_Factories",
            "shortname": "window.scrawl_Factories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPathFactories",
            "namespace": "",
            "file": "source\\scrawlPathFactories.js",
            "line": 37,
            "description": "# window.scrawl\n\nscrawlPathFactories module adaptions to the Scrawl library object"
        },
        "window.scrawl_Phrase": {
            "name": "window.scrawl_Phrase",
            "shortname": "window.scrawl_Phrase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 42,
            "description": "# window.scrawl\n\nscrawlPhrase module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.text"
        },
        "Phrase": {
            "name": "Phrase",
            "shortname": "Phrase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 75,
            "description": "# Phrase\n\t\n## Instantiation\n\n* scrawl.newPhrase()\n\n## Purpose\n\n* Defines text objects for displaying on a Cell's canvas\n* Handles all related font functionality\n* Performs text drawing operations on canvases\n\n## Access\n\n* scrawl.sprite.PHRASENAME - for the Phrase sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Text": {
            "name": "Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhrase",
            "namespace": "",
            "file": "source\\scrawlPhrase.js",
            "line": 736,
            "description": "# Text\n\t\n## Instantiation\n\n* This object should never be instantiated by users\n* Objects created via Phrase object\n\n## Purpose\n\n* Display single lines of text within a Phrase, or along a Shape path\n* Each time the Phrase object text changes, the associated Text objects are destroyed and regenerated from scratch",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "window.scrawl_Physics": {
            "name": "window.scrawl_Physics",
            "shortname": "window.scrawl_Physics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 40,
            "description": "# window.scrawl\n\nscrawlPhysics module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.force - for Force objects\n* scrawl.spring - for Spring objects\n* scrawl.physics - an area for storing physics constants and variables that affect multiple particles\n\nParticle objects are treated like sprites, and stored in the scrawl.sprite section of the library"
        },
        "Particle": {
            "name": "Particle",
            "shortname": "Particle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 170,
            "description": "# Particle\n\t\n## Instantiation\n\n* scrawl.newParticle()\n\n## Purpose\n\n* Defines Particle object, for physics simulations\n\n## Access\n\n* scrawl.sprite.PARTICLENAME - for the Animation object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Spring": {
            "name": "Spring",
            "shortname": "Spring",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 629,
            "description": "# Spring\n\t\n## Instantiation\n\n* scrawl.newSpring()\n* Particle.addSpring()\n\n## Purpose\n\n* Defines a Spring object connecting two Particle objects\n\n## Access\n\n* scrawl.spring.SPRINGNAME - for the Spring object",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Force": {
            "name": "Force",
            "shortname": "Force",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlPhysics",
            "namespace": "",
            "file": "source\\scrawlPhysics.js",
            "line": 774,
            "description": "# Force\n\t\n## Instantiation\n\n* scrawl.newForce()\n\n## Purpose\n\n* Defines a Force function that can calculate forces on Particle objects\n\nTwo forces are pre-defined by scrawl:\n\n* __scrawl.force.gravity__ - calculates the gravitational force acting on a Particle, as determined by the _scrawl.physics.gravity_ value and the Particle's _mass_\n* __scrawl.force.drag__ - calculates the air drag force acting on a Particle, as determined by the scrawl.physics.airDensity value, and the Particle's _area_ and _drag_ attribute values",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_SaveLoad": {
            "name": "window.scrawl_SaveLoad",
            "shortname": "window.scrawl_SaveLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlSaveLoad",
            "namespace": "",
            "file": "source\\scrawlSaveLoad.js",
            "line": 40,
            "description": "# window.scrawl\n\nscrawlSaveLoad module adaptions to the Scrawl library object"
        },
        "window.scrawl_Shape": {
            "name": "window.scrawl_Shape",
            "shortname": "window.scrawl_Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlShape",
            "namespace": "",
            "file": "source\\scrawlShape.js",
            "line": 41,
            "description": "# window.scrawl\n\nscrawlShape module adaptions to the Scrawl library object"
        },
        "Shape": {
            "name": "Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlShape",
            "namespace": "",
            "file": "source\\scrawlShape.js",
            "line": 66,
            "description": "# Shape\n\t\n## Instantiation\n\n* scrawl.newShape() - Irregular, path-based shapes\n\nAdditional factory functions to instantiate Shape objects are available in the __pathFactoryFunctions__ module\n\n## Purpose\n\n* Defines a sprite composed of lines, quadratic and bezier curves, etc\n* See also Path object, which achieves a similar thing in a different way\n\n## Access\n\n* scrawl.sprite.SHAPENAME - for the Shape sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Stacks": {
            "name": "window.scrawl_Stacks",
            "shortname": "window.scrawl_Stacks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 43,
            "description": "# window.scrawl\n\nscrawlStacks module adaptions to the Scrawl library object\n\n## New library sections\n\n* scrawl.stack - for Stack objects\n* scrawl.stk - for handles to DOM stack containers\n* scrawl.element - for Element objects\n* scrawl.elm - for handles to DOM elements within a stack\n\n## New default attributes\n\n* PageElement.start - default: {x:0,y:0,z:0};\n* PageElement.delta - default: {x:0,y:0,z:0};\n* PageElement.translate - default: {x:0,y:0,z:0};\n* PageElement.handle - default: {x:'center',y:'center',z:0};\n* PageElement.pivot - default: '';\n* PageElement.stack - default: '';\n* PageElement.path - default: '';\n* PageElement.pathPlace - default: 0;\n* PageElement.deltaPathPlace - default: 0;\n* PageElement.pathSpeedConstant - default: true;\n* PageElement.pathRoll - default: 0;\n* PageElement.addPathRoll - default: false;\n* PageElement.lockX - default: false;\n* PageElement.lockY - default: false;\n* PageElement.rotation - default: {n:1,v:{x:0,y:0,z:0}};\n* PageElement.deltaRotation - default: {n:1,v:{x:0,y:0,z:0}};\n* PageElement.rotationTolerance - default: 0.001;\n* PageElement.visibility - default: true;"
        },
        "Stack": {
            "name": "Stack",
            "shortname": "Stack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 1259,
            "description": "# Stack\n\t\n## Instantiation\n\n* scrawl.addStackToPage()\n\n## Purpose\n\n* add/manipulate perspective data to a DOM element\n\n## Access\n\n* scrawl.stack.STACKNAME - for the Stack object\n* scrawl.stk.STACKNAME - for a handle to the DOM stack element",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Element": {
            "name": "Element",
            "shortname": "Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlStacks",
            "namespace": "",
            "file": "source\\scrawlStacks.js",
            "line": 1534,
            "description": "# Element\n\t\n## Instantiation\n\n* Stack.addElementById()\n* Stack.addElementsByClassNames()\n\n## Purpose\n\n* provide a wrapper object for a DOM element\n\n## Access\n\n* scrawl.element.ELEMENTNAME - for the Element object\n* scrawl.elm.ELEMENTNAME - for a handle to the DOM element",
            "is_constructor": 1,
            "extends": "PageElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "window.scrawl_Wheel": {
            "name": "window.scrawl_Wheel",
            "shortname": "window.scrawl_Wheel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlWheel",
            "namespace": "",
            "file": "source\\scrawlWheel.js",
            "line": 42,
            "description": "# window.scrawl\n\nscrawlWheel module adaptions to the Scrawl library object"
        },
        "Wheel": {
            "name": "Wheel",
            "shortname": "Wheel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrawlWheel",
            "namespace": "",
            "file": "source\\scrawlWheel.js",
            "line": 72,
            "description": "# Wheel\n\t\n## Instantiation\n\n* scrawl.newWheel()\n\n## Purpose\n\n* Defines 'arc' objects for displaying on a Cell's canvas\n* Performs 'arc' based drawing operations on canvases\n\n## Access\n\n* scrawl.sprite.WHEELNAME - for the Wheel sprite object",
            "is_constructor": 1,
            "extends": "Sprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "source\\scrawlAnimation.js",
            "line": 78,
            "description": "Starts the animation loop",
            "itemtype": "method",
            "name": "animationInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 98,
            "description": "Position constructor hook function\n\nAdds a __delta__ (deltaX, deltaY) Vector to the object, used to give an object a 'velocity'",
            "itemtype": "method",
            "name": "animationPositionInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 116,
            "description": "Position.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionGet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 133,
            "description": "Position.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionSet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 147,
            "description": "Position.setDelta hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionClone",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 160,
            "description": "Adds delta values to the start vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x\n* 'y' - delta.y added to start.y\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Position.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 194,
            "description": "Subtracts delta values from the start vector; subtracts deltaPathPlace from pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x\n* 'y' - delta.y subtracted from start.y\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Position.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 228,
            "description": "Swaps the values of an attribute between two objects",
            "itemtype": "method",
            "name": "Position.exchange",
            "params": [
                {
                    "name": "obj",
                    "description": "Object with which this object will swap attribute values",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Attribute to be swapped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 244,
            "description": "Changes the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "Position.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 272,
            "description": "Cell constructor hook function\n\nAdds a __sourceDelta__ (sourceDeltaX, sourceDeltaY) Vector to the cell, used to give it a 'velocity'",
            "itemtype": "method",
            "name": "animationCellInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 288,
            "description": "Cell.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellGet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 302,
            "description": "Cell.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellSet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 315,
            "description": "Adds delta values to the start vector; adds sourceDelta values to the source vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x; deltaSource.x added to source.x\n* 'y' - delta.y added to start.y; deltaSource.y added to source.y\n* 'start', 'target' - delta added to start\n* 'source' - deltaSource added to source\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Cell.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 363,
            "description": "Subtracts delta values from the start vector; subtracts sourceDelta values from the source vector; subtracts deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x; deltaSource.x subtracted from source.x\n* 'y' - delta.y subtracted from start.y; deltaSource.y subtracted from source.y\n* 'start', 'target' - delta subtracted from start\n* 'source' - deltaSource subtracted from source\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "Cell.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 411,
            "description": "Zooms one cell in relation to another cell",
            "itemtype": "method",
            "name": "Cell.zoom",
            "params": [
                {
                    "name": "item",
                    "description": "Number of pixels to amend the zoomed cell's start and dimensions by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 465,
            "description": "Perform a splice-shift-join operation on the &lt;canvas&gt; element's current scene\n\nArgument is an Object in the form:\n\n* {edge:String, strip:Number}\n\nPermitted values for the argument Object's attributes are:\n\n* __edge__ - one from 'horizontal', 'vertical', 'top', 'bottom', 'left', 'right'\n* __strip__ - a width/height Number (in pixels) of the strip that is to be moved from the named edge of the &lt;canvas&gt; to the opposite edge\n\n_Note that this function is only effective in achieving a parallax effect if the user never clears or updates the cell's &lt;canvas&gt; element, and takes steps to shift the cell's source vector appropriately each time the splice operation is performed_",
            "itemtype": "method",
            "name": "Cell.spliceCell",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing data for the splice operation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 546,
            "description": "Ask all sprites in the Group to perform an updateStart() operation\n\nEach sprite will add their delta values to their start Vector, and/or add deltaPathPlace from pathPlace",
            "itemtype": "method",
            "name": "Group.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 561,
            "description": "Ask all sprites in the Group to perform a revertStart() operation\n\nEach sprite will subtract their delta values to their start Vector, and/or subtract deltaPathPlace from pathPlace",
            "itemtype": "method",
            "name": "Group.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 576,
            "description": "Ask all sprites in the group to perform a reverse() operation\n\nEach sprite will change the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "Group.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 596,
            "description": "Creates the gradient\n\n_This function replaces the one in the core module_",
            "itemtype": "method",
            "name": "Design.update",
            "params": [
                {
                    "name": "sprite",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 612,
            "description": "Gradient builder helper function - sorts color attribute Objects by their stop attribute values, after adding the roll value to them",
            "itemtype": "method",
            "name": "Design.sortStops",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 634,
            "description": "A __factory__ function to generate new Animation objects",
            "itemtype": "method",
            "name": "newAnimation",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Animation object"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 643,
            "description": "A __factory__ function to generate new Tween objects",
            "itemtype": "method",
            "name": "newTween",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Tween object"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 655,
            "description": "Animation flag: set to false to stop animation loop",
            "itemtype": "property",
            "name": "doAnimation",
            "type": "{Boolean}",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 661,
            "description": "Animation ordering flag - when set to false, the ordering of animations is skipped; default: true",
            "itemtype": "property",
            "name": "orderAnimations",
            "type": "{Boolean}",
            "default": "true",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 668,
            "description": "The Scrawl animation loop\n\nAnimation loop is invoked automatically as part of the initialization process\n\nScrawl will run all Animation objects whose ANIMATIONNAME Strings are included in the __scrawl.animate__ Array\n\nAll animation can be halted by setting the __scrawl.doAnimation__ flag to false\n\nTo restart animation, either call __scrawl.initialize()__, or set _scrawl.doAnimation_ to true and call __scrawl.animationLoop()",
            "itemtype": "method",
            "name": "animationLoop",
            "return": {
                "description": "Recursively calls itself - never returns"
            },
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 697,
            "description": "Animation sorting routine - animation objects are sorted according to their animation.order attribute value, in ascending order",
            "itemtype": "method",
            "name": "sortAnimations",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 737,
            "description": "Pseudo-attribute used to prevent immediate running of animation when first created\n\n_This attribute is not retained by the Animation object_",
            "itemtype": "property",
            "name": "delay",
            "type": "Boolean",
            "default": "false",
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 751,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Animation'",
            "final": 1,
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 760,
            "description": "Anonymous function for an animation routine",
            "itemtype": "property",
            "name": "fn",
            "type": "Function",
            "default": "function(){}",
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 767,
            "description": "Lower order animations are run during each frame before higher order ones",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 776,
            "description": "Run an animation",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 785,
            "description": "Stop an animation",
            "itemtype": "method",
            "name": "halt",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 794,
            "description": "Remove this Animation from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Animation",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 887,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Tween'",
            "final": 1,
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 896,
            "description": "Array of sprites, cells, etc to be animated using this tween; expects to be passed handles to the sprite objects, not SPRITENAME strings",
            "itemtype": "property",
            "name": "targets",
            "type": "Array",
            "default": "[]",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 903,
            "description": "Array of sprites, cells, etc currently being animated using this tween",
            "itemtype": "property",
            "name": "currentTargets",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 911,
            "description": "Object containing the start positions (for absolute transitions) or delta values (for relative transitions) for given settable (ie: Number) attributes",
            "itemtype": "property",
            "name": "start",
            "type": "Object",
            "default": "{}",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 918,
            "description": "Object containing attribute: value pairs determining which easing engine will be applied to each tweened attribute\n\nCurrently, Scrawl offers the following easing engines. _Out_ signifies that the end of the tween is faster than the start; _In_ signifies the the end of the tween is slower. (This is the opposite of 'Flash' usage, but in line with wider programming conventions):\n\n* __in__, __easeIn__, __easeIn3__, __easeIn4__, __easeIn5__\n* __out__, __easeOut__, __easeOut3__, __easeOut4__, __easeOut5__\n* __easeOutIn__, __easeOutIn3__, __easeOutIn4__, __easeOutIn5__\n* __linear__ (default) - an even speed throughout the duration of the tween",
            "itemtype": "property",
            "name": "engines",
            "type": "Object",
            "default": "{}",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 932,
            "description": "Object containing the end positions for given settable (ie: Number) attributes",
            "itemtype": "property",
            "name": "end",
            "type": "Object",
            "default": "{}",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 939,
            "description": "Object containing set instructions to be performed at the end of the tween",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Object",
            "default": "{}",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 946,
            "description": "Object containing runtime initial values for each object being tweened",
            "itemtype": "property",
            "name": "initVals",
            "type": "Object",
            "default": "{}",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 954,
            "description": "Object containing set instructions to be performed at the start of the tween",
            "itemtype": "property",
            "name": "onCommence",
            "type": "Object",
            "default": "{}",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 961,
            "description": "Datetime when the tween starts running",
            "itemtype": "property",
            "name": "startTime",
            "type": "Number - Date.now()",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 969,
            "description": "Duration of the tween, measured in milliseconds",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 976,
            "description": "Flag - when true, tween is running",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 984,
            "description": "Flag - when true, tween runs in reverse, from end values to start values (for absolute transitions) or applying negative start values (for relative transitions)",
            "itemtype": "property",
            "name": "reverse",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 991,
            "description": "Flag - when true, tween will automatically reverse its direction when it completes",
            "itemtype": "property",
            "name": "autoReverse",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 998,
            "description": "Callback function to run when tween completes - will not run if nextTween is set",
            "itemtype": "property",
            "name": "callback",
            "type": "Function",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1005,
            "description": "Flag - when true, tween will automatically reverse its direction when it completes, and immediately run again",
            "itemtype": "property",
            "name": "autoReverseAndRun",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1012,
            "description": "Counter for the number of cycles the tween will run; set to true for countinuous repetition",
            "itemtype": "property",
            "name": "count",
            "type": "Mixed - Number or Boolean",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1019,
            "description": "Internal attribute",
            "itemtype": "property",
            "name": "currentCount",
            "type": "Mixed - Number or Boolean",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1027,
            "description": "Flag - when true, tween will automatically delete itself when it completes",
            "itemtype": "property",
            "name": "killOnComplete",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1034,
            "description": "TWEENNAME Sring of the tween to be run when this tween completes",
            "itemtype": "property",
            "name": "nextTween",
            "type": "String",
            "default": "''",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1041,
            "description": "Lower order animations are run during each frame before higher order ones",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1050,
            "description": "Tween animation function",
            "itemtype": "method",
            "name": "fn",
            "return": {
                "description": "Always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1105,
            "description": "Tween engines",
            "itemtype": "method",
            "name": "engine",
            "return": {
                "description": "calculated current value for an attribute, which will vary depending on which engine has been selected"
            },
            "params": [
                {
                    "name": "start",
                    "description": "Start point for tween action",
                    "type": "Number"
                },
                {
                    "name": "change",
                    "description": "Total change required for tween action",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "Normalized time (time elapsed/duration)",
                    "type": "Number"
                },
                {
                    "name": "engine",
                    "description": "Calculation engine to be used",
                    "type": "String"
                },
                {
                    "name": "reverse",
                    "description": "Reverse flag - true if tween is reversed",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1168,
            "description": "Run a tween animation",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "Always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1238,
            "description": "Finish running a tween",
            "itemtype": "method",
            "name": "runComplete",
            "return": {
                "description": "Always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1263,
            "description": "Stop a tween animation",
            "itemtype": "method",
            "name": "halt",
            "return": {
                "description": "Always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlAnimation.js",
            "line": 1273,
            "description": "Remove this tween from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Tween",
            "module": "scrawlAnimation"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 48,
            "description": "A __factory__ function to generate new Block sprites",
            "itemtype": "method",
            "name": "newBlock",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Block object"
            },
            "example": [
                "\n\tscrawl.newBlock({\n\t\twidth: 100,\n\t\theight: 50,\n\t\tstartX: 150,\n\t\tstartY: 60,\n\t\tfillStyle: 'blue',\n\t\tstrokeStyle: 'red',\n\t\troll: 30,\n\t\tmethod: 'sinkInto',\n\t\t});"
            ],
            "class": "window.scrawl_Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 101,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Block'",
            "final": 1,
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 111,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 129,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 145,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 175,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 191,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 207,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 227,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 247,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlBlock.js",
            "line": 266,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Block",
            "module": "scrawlBlock"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 56,
            "description": "Collision vectors, for use in collision detection calculations",
            "itemtype": "property",
            "name": "scrawl.workcols",
            "type": "Object",
            "value": "Object containing three vectors - v1, v2, v3",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 68,
            "description": "A __general__ function which asks Cell objects to generate field collision tables",
            "itemtype": "method",
            "name": "scrawl.buildFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 85,
            "description": "Orders all Cell objects associated with this Pad to (re)create their field collision image maps",
            "itemtype": "method",
            "name": "Pad.buildFields",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 98,
            "description": "Cell constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Cell.collisionsCellInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 123,
            "description": "Builds a collision map image from sprites, for use in sprite field collision detection functions",
            "itemtype": "method",
            "name": "Cell.buildField",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 168,
            "description": "Cell field collision detection function\n\nArgument should be in the form of:\n\n* {channel:String, test:Number, coordinates:Array of Vectors, x:Number, y:Number}\n\nWhere:\n\n* __channel__ (optional) can be 'red', 'green', 'blue', 'alpha', or 'anycolor' (default)\n* __test__ (optional) can be a value between 0 and 254 (default: 0)\n* __coordinates__ (optional) is an array of Vector coordinates, in pixels, relative to the Cell's &lt;canvas&gt; element's top left corner\n* __x__ (optional) is the horizontal coordinate, in pixels, relative to the Cell's top left corner\n* __y__ (optional) is the vertical coordinate, in pixels, relative to the Cell's top left corner\n\nEither include a single coordinate (x, y), or an array of coordinate Vectors\n\nTest will return: \n* false if it encounters a coordinate outside the bou8ds of its image map\n* true if all coordinates exceed the test level (thus a sprite testing in the red channel will report true if it is entirely within a red part of the collision map\n* the first coordinate that falls below, or equals, the test level",
            "itemtype": "method",
            "name": "Cell.checkFieldAt",
            "params": [
                {
                    "name": "items",
                    "description": "Argument containing details of how and where to check the cell's collision map image",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector of first the first coordinates to 'pass' the test"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 245,
            "description": "Check all sprites in the Group to see if they are colliding with the supplied sprite object. An Array of all sprite objects colliding with the reference sprite will be returned",
            "itemtype": "method",
            "name": "Group.getSpritesCollidingWith",
            "params": [
                {
                    "name": "sprite",
                    "description": "SPRITENAME String of the reference sprite; alternatively the sprite Object itself can be passed as the argument",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of visible sprite Objects currently colliding with the reference sprite"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 269,
            "description": "Check all sprites in the Group against each other to see if they are in collision",
            "itemtype": "method",
            "name": "Group.getInGroupSpriteHits",
            "return": {
                "description": "Array of [SPRITENAME, SPRITENAME] Arrays, one for each pair of sprites currently in collision"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 315,
            "description": "Check all sprites in this Group against all sprites in the argument Group, to see if they are in collision",
            "itemtype": "method",
            "name": "Group.getBetweenGroupSpriteHits",
            "params": [
                {
                    "name": "g",
                    "description": "GROUPNAME of Group to be checked against this group; alternatively, the Group object itself can be supplied as the argument",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of [SPRITENAME, SPRITENAME] Arrays, one for each pair of sprites currently in collision"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 385,
            "description": "Check all sprites in this Group against a &lt;canvas&gt; element's collision field image\n\nIf no argument is supplied, the Group's default Cell's &lt;canvas&gt; element will be used for the check\n\nAn Array of Arrays is returned, with each constituent array consisting of the the SPRITENAME of the sprite that has reported a positive hit, alongside a coordinate Vector of where the collision is occuring",
            "itemtype": "method",
            "name": "Group.getFieldSpriteHits",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME of Cell whose &lt;canvas&gt; element is to be used for the check",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of [SPRITENAME, Vector] Arrays"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 418,
            "description": "Sprite constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Sprite.collisionsSpriteConstructor",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 431,
            "description": "Sprite.registerInLibrary hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Sprite.collisionsSpriteRegisterInLibrary",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 443,
            "description": "Sprite.set hook function - modified by collisions module",
            "itemtype": "method",
            "name": "Sprite.collisionsSpriteSet",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 463,
            "description": "Add this sprite to a (range of) Cell object field groups",
            "itemtype": "method",
            "name": "Sprite.addSpriteToCellFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 479,
            "description": "Add this sprite to a (range of) Cell object fence groups",
            "itemtype": "method",
            "name": "Sprite.addSpriteToCellFences",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 495,
            "description": "Remove this sprite from a (range of) Cell object field groups",
            "itemtype": "method",
            "name": "Sprite.removeSpriteFromCellFields",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 511,
            "description": "Remove this sprite from a (range of) Cell object fence groups",
            "itemtype": "method",
            "name": "Sprite.removeSpriteFromCellFences",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, a single CELLNAME String can be supplied",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 527,
            "description": "Check this sprite's collision Vectors against a Cell object's collision field image to see if any of them are colliding with the Cell's field sprites",
            "itemtype": "method",
            "name": "Sprite.checkField",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String of the Cell to be checked against",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "First Vector coordinate to 'pass' the Cell.checkFieldAt() function's test; true if none pass; false if the test parameters are out of bounds"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 541,
            "description": "Calculate the current positions of this sprite's collision Vectors, taking into account the sprite's current position, roll and scale",
            "itemtype": "method",
            "name": "Sprite.getCollisionPoints",
            "return": {
                "description": "Array of coordinate Vectors"
            },
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 575,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the sprite's collision points",
            "itemtype": "method",
            "name": "Sprite.buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlCollisions.js",
            "line": 613,
            "description": "Collision detection helper function\n\nParses user input for the collisionPoint attribute",
            "itemtype": "method",
            "name": "Sprite.parseCollisionPoints",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Collisions",
            "module": "scrawlCollisions"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 46,
            "description": "A __factory__ function to generate new Color objects",
            "itemtype": "method",
            "name": "newColor",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Color object"
            },
            "class": "window.scrawl_Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 93,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Color'",
            "final": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 102,
            "description": "Red channel value: 0 - 255",
            "itemtype": "property",
            "name": "r",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 109,
            "description": "Green channel value: 0 - 255",
            "itemtype": "property",
            "name": "g",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 116,
            "description": "Blue channel value: 0 - 255",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 123,
            "description": "Alpha channel value: 0 - 1",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "default": "1",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 130,
            "description": "Red channel delta value",
            "itemtype": "property",
            "name": "rShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 137,
            "description": "Green channel delta value",
            "itemtype": "property",
            "name": "gShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 144,
            "description": "Blue channel delta value",
            "itemtype": "property",
            "name": "bShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 151,
            "description": "Alpha channel delta value",
            "itemtype": "property",
            "name": "aShift",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 158,
            "description": "Red channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "rMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 165,
            "description": "Green channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "gMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 172,
            "description": "Blue channel maximum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "bMax",
            "type": "Number",
            "default": "255",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 179,
            "description": "Alpha channel maximum permitted value: 0 - 1",
            "itemtype": "property",
            "name": "aMax",
            "type": "Number",
            "default": "1",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 186,
            "description": "Red channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "rMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 193,
            "description": "Green channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "gMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 200,
            "description": "Blue channel minimum permitted value: 0 - 255",
            "itemtype": "property",
            "name": "bMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 207,
            "description": "Alpha channel minimum permitted value: 0 - 1",
            "itemtype": "property",
            "name": "aMin",
            "type": "Number",
            "default": "0",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 214,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "rBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 221,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "gBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 228,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "bBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 235,
            "description": "Drawing flag - if true, when color updates the delta value will reverse its sign just before the channel's maximum or minimum value is breached",
            "itemtype": "property",
            "name": "aBounce",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 242,
            "description": "Requires Color object to recalculate its attribute values before each display cycle commences",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 249,
            "description": "Generation flag - if true, Color object will set itself to a random color within minimum and maximum attributes\n\nThis attribute is not retained by the color object, and can only be used in the __scrawl.newColor()__ and __Color.set()__ functions",
            "itemtype": "property",
            "name": "random",
            "type": "Boolean",
            "default": "false",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 259,
            "description": "Augments Base.get()\n\n* If called with no argument, will return the current color String\n* if called with the String argument 'random', will generate a random color (within permitted limits) and return that",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value, or CSS color string"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 280,
            "description": "Augments Base.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned Color object"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 302,
            "description": "Returns current color, or next color value in sequence if .autoUpdate is true",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "CSS color String"
            },
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 315,
            "description": "Generates a random color\n\nArgument can include preset color channel values (0-255, 0-1 for alpha): {r:Number, g:Number, b:Number, a:Number}",
            "itemtype": "method",
            "name": "generateRandomColor",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 344,
            "description": "Checks that color channel values are of the permitted form (integer vs float) and within permitted ranges",
            "itemtype": "method",
            "name": "checkValues",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 368,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 384,
            "description": "Update the current color, taking into account shift and bounce attribute values",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 433,
            "description": "Add values to Number attributes - limited to altering __r__, __g__, __b__ and __a__ attributes",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 451,
            "description": "Convert a CSS color string value into native attribute values. \n\nConverts: '#nnn', '#nnnnnn', 'rgb(n, n, n)', 'rgba(n, n, n, a), color names.\n\nColor names are limited to those supported by SVGTiny: 'green', 'silver', 'lime', 'gray', 'grey', 'olive', 'white', 'yellow', 'maroon', 'navy', 'red', 'blue', 'purple', 'teal', 'fuchsia', 'aqua'. Default: 'black'.",
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "items",
                    "description": "CSS color String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 534,
            "description": "Convert a decimal Number to its hexidecimal String value",
            "itemtype": "method",
            "name": "toDecimal",
            "params": [
                {
                    "name": "items",
                    "description": "decimal value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Hexidecimal String"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 543,
            "description": "Convert a hexidecimal String to its decimal Number value",
            "itemtype": "method",
            "name": "toHex",
            "params": [
                {
                    "name": "Hexidecimal",
                    "description": "String value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Decimal Number"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlColor.js",
            "line": 552,
            "description": "Delete this Color object from the scrawl library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Color",
            "module": "scrawlColor"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 102,
            "description": "Scrawl.js version number",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "default": "3.1.4",
            "final": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 110,
            "description": "Array of array object keys used to define the sections of the Scrawl library",
            "itemtype": "property",
            "name": "nameslist",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 117,
            "description": "Array of objects which define the sections of the Scrawl library",
            "itemtype": "property",
            "name": "sectionlist",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 124,
            "description": "For converting between degrees and radians",
            "itemtype": "property",
            "name": "radian",
            "type": "{Number}",
            "default": "Math.PI/180",
            "final": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 132,
            "description": "An Object containing OBJECTTYPE:Object pairs which in turn contain default attribute values for each Scrawl object constructor",
            "itemtype": "property",
            "name": "d",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 139,
            "description": "Work vector, for calculations",
            "itemtype": "property",
            "name": "v",
            "type": "{Vector}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 146,
            "description": "Work quaternions, for calculations",
            "itemtype": "property",
            "name": "workquat",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 153,
            "description": "DOM document fragment",
            "itemtype": "property",
            "name": "f",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 160,
            "description": "Utility canvas - never displayed",
            "itemtype": "property",
            "name": "cv",
            "type": "{CasnvasObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 169,
            "description": "Utility canvas 2d context engine",
            "itemtype": "property",
            "name": "cvx",
            "type": "{CasnvasContextObject}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 176,
            "description": "Key:value pairs of module alias:filename Strings, used by scrawl.loadModules()",
            "itemtype": "property",
            "name": "loadAlias",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 198,
            "description": "A __general__ function that initializes (or resets) the Scrawl library and populates it with data, including existing &lt;canvas&gt; element data in the web page",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.init();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 214,
            "description": "scrawl.init hook function - modified by stacks module",
            "itemtype": "method",
            "name": "pageInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 222,
            "description": "scrawl.init hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 228,
            "description": "scrawl.init hook function - modified by physics module",
            "itemtype": "method",
            "name": "physicsInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 234,
            "description": "A __general__ function that resets the Scrawl library to empty arrays and objects",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.reset();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 251,
            "description": "A __general__ function that loads supporting modules and integrates them into the core\n\nModule names are supplied as an array of Strings and can be either the module filename (with or without the '.js' suffix), or an alias string.\n\nScrawl currently supports the following modules:\n* __scrawlAnimation.js__ - alias __animation__ - adds animation and tween functionality to the core\n* __scrawlBlock.js__ - alias __block__ - adds _Block_ (square and rectangle) sprites to the core\n* __scrawlCollisions.js__ - alias __collisions__ - adds sprite collision detection functionality to the core\n* __scrawlColor.js__ - alias __color__ - adds the _Color_ Design object to the core\n* __scrawlFilters.js__ - alias __filters__ - adds image filter functionality to the core\n* __scrawlImages.js__ - alias __images__ - adds all image functionality, including static and animated _Picture_ sprites and the _Pattern_ Design object, to the core\n* __scrawlPath.js__ - alias __path__ - adds _Path_ (SVGTiny path data) sprites to the core\n* __scrawlPathFactories.js__ - alias __factories__ - adds user-friendly Path and Shape factory functions (for lines, quadratic and bezier curves, ellipses, round-corner rectangles, regular shapes such as stars, triangles, etc) to the core\n* __scrawlPhrase.js__ - alias __phrase__ - adds _Phrase_ (single and multiline text) sprites to the core\n* __scrawlPhysics.js__ - alias __physics__ - adds a physics engine to the core (experimental)\n* __scrawlSaveLoad.js__ - alias __saveload__ - adds JSON object save and load functionality to the core (experimental)\n* __scrawlShape.js__ - alias __shape__ - adds _Shape_ (path-like shapes) sprites to the core\n* __scrawlStacks.js__ - alias __stacks__ - adds the ability to position, manipulate and animate &lt;canvas&gt; and other DOM elements in a 3d space on the web page\n* __scrawlWheel.js__ - alias __wheel__ - adds _Wheel_ (circle and segment) sprites to the core\n\nWhere permitted, Scrawl will load modules asynchronously. Modules have no dependencies beyond their need for the core module, and can be loaded in any order.\n\nAny supplied callback function will only be run once all modules have been loaded.",
            "example": [
                "\n\t<!DOCTYPE html>\n\t<html>\n\t\t<head></head>\n\t\t<body>\n\t\t\t<canvas></canvas>\n\t\t\t<script src=\"js/scrawlCore-min.js\"></script>\n\t\t\t<script>\n\t\t\t\tvar mycode = function(){\n\t\t\t\t\tscrawl.newWheel({\n\t\t\t\t\t\tstartX: 50,\n\t\t\t\t\t\tstartY: 50,\n\t\t\t\t\t\tradius: 40,\n\t\t\t\t\t\t});\n\t\t\t\t\tscrawl.render();\n\t\t\t\t\t};\n\t\t\t\tscrawl.loadModules({\n\t\t\t\t\tpath: 'js/',\n\t\t\t\t\tmodules: ['wheel'],\t\t\t\n\t\t\t\t\tcallback: function(){\n\t\t\t\t\t\twindow.addEventListener('load', function(){\n\t\t\t\t\t\t\tscrawl.init();\n\t\t\t\t\t\t\tmycode();\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t</script>\n\t\t</body>\n\t</html>\n\t\n<a href=\"../../demo1000.html\">Live demo</a>"
            ],
            "itemtype": "method",
            "name": "loadModules",
            "params": [
                {
                    "name": "path",
                    "description": "File path String to the directory where the Scrawl module scripts have been stored, relative to the web page's main file; default ('') will assume modules are in the same directory as the web page file",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "modules",
                    "description": "Array of module Strings (either filenames or module aliases), representing Scrawl modules to be loaded into the core",
                    "type": "Array"
                },
                {
                    "name": "mini",
                    "description": "When set to true (the default), will load minified versions of the modules; false will load source versions",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "An anonymous function to be run once module loading completes",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 350,
            "description": "A __utility__ function that adds the attributes of the additive object to those of the reference object, where those attributes don't already exist in the reference object",
            "itemtype": "method",
            "name": "mergeInto",
            "params": [
                {
                    "name": "o1",
                    "description": "reference object",
                    "type": "Object"
                },
                {
                    "name": "o2",
                    "description": "additive object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Merged object"
            },
            "example": [
                "\n\tvar old = {\n\t\t\tname: 'Peter',\n\t\t\tage: 42,\n\t\t\tjob: 'lawyer'\n\t\t\t},\n\t\tnew = {\n\t\t\tage: 32,\n\t\t\tjob: 'coder',\n\t\t\tpet: 'cat',\n\t\t\t};\n\tscrawl.mergeInto(old, new);\n\t//result is {\n\t//\tname: 'Peter',\n\t//\tage: 42,\n\t//\tjob: 'lawyer'\n\t//\tpet: 'cat',\n\t//\t}"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 383,
            "description": "A __utility__ function that adds the attributes of the additive object to those of the reference object, overwriting attributes where necessary",
            "itemtype": "method",
            "name": "mergeOver",
            "params": [
                {
                    "name": "o1",
                    "description": "reference object",
                    "type": "Object"
                },
                {
                    "name": "o2",
                    "description": "additive object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Merged object"
            },
            "example": [
                "\n\tvar old = {\n\t\t\tname: 'Peter',\n\t\t\tage: 42,\n\t\t\tjob: 'lawyer'\n\t\t\t},\n\t\tnew = {\n\t\t\tage: 32,\n\t\t\tjob: 'coder',\n\t\t\tpet: 'cat',\n\t\t\t};\n\tscrawl.mergeOver(old, new);\n\t//result is {\n\t//\tname: 'Peter',\n\t//\tage: 32,\n\t//\tjob: 'coder'\n\t//\tpet: 'cat',\n\t//\t}"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 416,
            "description": "A __utility__ function that checks an array to see if it contains a given value",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "k",
                    "description": "value to be checked",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if value is in array; false otherwise"
            },
            "example": [
                "\n\tvar myarray = ['apple', 'orange'];\n\tscrawl.contains(myarray, 'apple');\t//true\n\tscrawl.contains(myarray, 'banana');\t//false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 433,
            "description": "A __utility__ function that adds a value to an array if the array doesn't already contain an element with that value",
            "itemtype": "method",
            "name": "pushUnique",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "o",
                    "description": "value to be added to array",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Amended array"
            },
            "example": [
                "\n\tvar myarray = ['apple', 'orange'];\n\tscrawl.pushUnique(myarray, 'apple');\t//returns ['apple', 'orange']\n\tscrawl.pushUnique(myarray, 'banana');\t//returns ['apple', 'orange', 'banana']"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 450,
            "description": "A __utility__ function that removes a value from an array",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "item",
                    "description": "Reference array",
                    "type": "Array"
                },
                {
                    "name": "o",
                    "description": "value to be removed from array",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Amended array"
            },
            "example": [
                "\n\tvar myarray = ['apple', 'orange'];\n\tscrawl.removeItem(myarray, 'banana');\t//returns ['apple', 'orange']\n\tscrawl.removeItem(myarray, 'apple');\t//returns ['orange']"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 468,
            "description": "A __utility__ function that checks to see if a number is between two other numbers",
            "itemtype": "method",
            "name": "isBetween",
            "params": [
                {
                    "name": "no",
                    "description": "Reference number",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "Minimum or maximum number",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "Maximum or minimum number",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "If true, reference number can equal maximum/minimum number; on false, number must lie between the maximum and minimum (default: false)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if value is between maximum and minimum; false otherwise"
            },
            "example": [
                "\n\tscrawl.isBetween(3, 1, 5);\t\t\t//returns true\n\tscrawl.isBetween(3, 3, 5);\t\t\t//returns false\n\tscrawl.isBetween(3, 3, 5, true);\t//returns true"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 496,
            "description": "A __utility__ function for variable type checking\n\nValid identifier Strings include:\n\n* __num__ for numbers\n* __str__ for strings\n* __bool__ for booleans\n* __fn__ for Function objects\n* __arr__ for Array objects\n* __obj__ for Object objects (excluding DOM objects)\n* __date__ for Date objects\n* __vector__ for Scrawl Vector objects\n* __quaternion__ for Scrawl Quaternion objects",
            "itemtype": "method",
            "name": "isa",
            "params": [
                {
                    "name": "item",
                    "description": "Primative or object for identification",
                    "type": "Mixed"
                },
                {
                    "name": "identifier",
                    "description": "Identifier String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if item type matches the identifier"
            },
            "example": [
                "\n\tvar mystring = 'string',\n\t\tmyboolean = false;\n\tscrawl.isa(mystring, 'bool');\t//returns false\n\tscrawl.isa(mystring, 'str');\t//returns true\n\tscrawl.isa(myboolean, 'bool');\t//returns true\n\tscrawl.isa(myboolean, 'str');\t//returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 543,
            "description": "Check to see if variable is an Object",
            "itemtype": "method",
            "name": "safeObject",
            "params": [
                {
                    "name": "items",
                    "description": "Variable for checking",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Parameter being checked, if it is an object; returns an empty object on failure"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 553,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xt",
            "params": [
                {
                    "name": "item",
                    "description": "Primative or object for identification",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "False if item is 'undefined'"
            },
            "example": [
                "\n\tvar mystring = 'string',\n\t\tmyboolean;\n\tscrawl.xt(mystring);\t//returns true\n\tscrawl.xt(myboolean);\t//returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 567,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xta",
            "params": [
                {
                    "name": "item",
                    "description": "Array of primatives or objects for identification",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "False if any item is 'undefined'"
            },
            "example": [
                "\n\tvar mystring = 'string',\n\t\tmynumber = 0,\n\t\tmyboolean;\n\tscrawl.xta([mystring, mynumber]);\t//returns true\n\tscrawl.xta([mystring, myboolean]);\t//returns false"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 591,
            "description": "A __utility__ function for variable type checking",
            "itemtype": "method",
            "name": "xto",
            "params": [
                {
                    "name": "item",
                    "description": "Array of primatives or objects for identification",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True if any item is not 'undefined'"
            },
            "example": [
                "\n\tvar mystring = 'string',\n\t\tmynumber = 0,\n\t\tmyboolean;\n\tscrawl.xto([mystring, mynumber]);\t//returns true\n\tscrawl.xto([mystring, myboolean]);\t//returns true"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 614,
            "description": "Generate unique names for new Scrawl objects",
            "itemtype": "method",
            "name": "makeName",
            "params": [
                {
                    "name": "item",
                    "description": "Object with attributes: name, type, target",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Unique generated name"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 638,
            "description": "A __general__ function to reset display offsets for all pads, stacks and elements\n\nThe argument is an optional String - permitted values include 'stack', 'pad', 'element'; default: 'all'\n\n(This function is replaced by the scrawlStacks module)",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "params": [
                {
                    "name": "item",
                    "description": "Command string detailing which element types are to be set",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.setDisplayOffsets();"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 658,
            "description": "A __private__ function that searches the DOM for canvas elements and generates Pad/Cell/Context objects for each of them\n\n(This function is replaced by the scrawlStacks module)",
            "itemtype": "method",
            "name": "getCanvases",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 687,
            "description": "A __general__ function to add a visible &lt;canvas&gt; element to the web page, and create a Pad controller and Cell wrappers for it\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Pad and/or Cell object attribute\n\n(This function is replaced by the scrawlStacks module)",
            "itemtype": "method",
            "name": "addCanvasToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Cell's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The new Pad object"
            },
            "example": [
                "\n    <body>\n\t\t<div id=\"canvasholder\"></div>\n\t\t<script src=\"js/scrawlCore-min.js\"></script>\n\t\t<script>\n\t\t\tscrawl.addCanvasToPage({\n\t\t\t\tcanvasName:\t'mycanvas',\n\t\t\t\tparentElement: 'canvasholder',\n\t\t\t\twidth: 400,\n\t\t\t\theight: 200,\n\t\t\t\t}).makeCurrent();\n\t\t</script>\n    </body>\n\n<a href=\"../../demo002.html\">Live demo</a>"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 742,
            "description": "A __private__ function - def9ines the filter sections in the library",
            "itemtype": "method",
            "name": "prepareFilterSection",
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 756,
            "description": "A __general__ function which passes on requests to pads to update their drawOrder property - see Pad.setDrawOrder() for more details",
            "itemtype": "method",
            "name": "setDrawOrder",
            "params": [
                {
                    "name": "order",
                    "description": "Array of CELLNAMEs - Cells listed first will be drawn first (beneath other cells/layers)",
                    "type": "Array"
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMESs - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 771,
            "description": "A __display__ function to ask Pads to get their Cells to clear their &lt;canvas&gt; elements - see Pad.clear() for more details",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "command",
                    "description": "Command String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 788,
            "description": "A __display__ function to ask Pads to get their Cells to clear their &lt;canvas&gt; elements using their background color - see Pad.stampBackground() for more details",
            "itemtype": "method",
            "name": "stampBackground",
            "params": [
                {
                    "name": "command",
                    "description": "Command String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 805,
            "description": "A __display__ function to ask Pads to get their Cells to compile their scenes - see Pad.compile() for more details",
            "itemtype": "method",
            "name": "compile",
            "params": [
                {
                    "name": "command",
                    "description": "Command String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 822,
            "description": "A __display__ function to ask Pads to show the results of their latest display cycle - see Pad.show() for more details",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "command",
                    "description": "Command String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 839,
            "description": "A __display__ function to ask Pads to undertake a complete clear-compile-show display cycle",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "command",
                    "description": "Object with attributes: clear:COMMAND, compile:COMMAND, show:COMMAND - all are optional",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "pads",
                    "description": "Array of PADNAMEs - can also be a String",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 856,
            "description": "A __general__ function which passes on requests to Pads to generate new &lt;canvas&gt; elements and associated objects - see Pad.addNewCell() for more details",
            "itemtype": "method",
            "name": "addNewCell",
            "params": [
                {
                    "name": "data",
                    "description": "Initial attribute values for new object",
                    "type": "Object"
                },
                {
                    "name": "pad",
                    "description": "PADNAME",
                    "type": "String"
                }
            ],
            "return": {
                "description": "New Cell object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 867,
            "description": "A __general__ function which deletes Cell objects and their associated paraphinalia - see Pad.deleteCells() for more details",
            "itemtype": "method",
            "name": "deleteCells",
            "params": [
                {
                    "name": "cells",
                    "description": "Array of CELLNAMEs - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 897,
            "description": "A __private__ function which retrieves a value from a Cell object's image data table \n\nArgument takes the form:\n* {table:IMAGEDATANAME, channel:String, x:XCOORDINATE, y:YCOORDINATE}\n* where channel attribute can be one of 'red', 'blue', 'green', 'alpha', 'color'",
            "itemtype": "method",
            "name": "getImageDataValue",
            "params": [
                {
                    "name": "items",
                    "description": "Object argument",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Channel value (Number) at coordinates, or pixel color (String) at coordinates; false on failure"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 940,
            "description": "A __general__ function which adds supplied spritenames to Group.sprites attribute",
            "itemtype": "method",
            "name": "addSpritesToGroups",
            "params": [
                {
                    "name": "groups",
                    "description": "Array of GROUPNAME Strings - can also be a String",
                    "type": "Array"
                },
                {
                    "name": "sprites",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 960,
            "description": "A __general__ function which removes supplied spritenames from Group.sprites attribute",
            "itemtype": "method",
            "name": "removeSpritesFromGroups",
            "params": [
                {
                    "name": "groups",
                    "description": "Array of GROUPNAME Strings - can also be a String",
                    "type": "Array"
                },
                {
                    "name": "sprites",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 980,
            "description": "A __general__ function to delete sprite objects",
            "itemtype": "method",
            "name": "deleteSprite",
            "params": [
                {
                    "name": "items",
                    "description": "Array of SPRITENAME Strings - can also be a String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.newBlock({\n\t\tname: 'myblock',\n\t\t});\n\tscrawl.deleteSprite(['myblock']);"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1015,
            "description": "scrawl.deleteSprite hook function - modified by path module",
            "itemtype": "method",
            "name": "pathDeleteSprite",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1021,
            "description": "A __factory__ function to generate new Vector objects",
            "itemtype": "method",
            "name": "newVector",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector object"
            },
            "example": [
                "\n\tvar myVector = scrawl.newVector({\n\t\tx: 100,\n\t\ty: 200,\n\t\t});"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1035,
            "description": "A __factory__ function to generate new Quaternion objects - see also scrawl.makeQuaternion()",
            "itemtype": "method",
            "name": "newQuaternion",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Quaternion object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1044,
            "description": "A __factory__ function to build a Quaternion object from Euler angle values\n\nArgument object can be in the following form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "makeQuaternion",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.makeQuaternion({\n\t\tpitch: 90,\n\t\tyaw: 10,\n\t\t});"
            ],
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1063,
            "description": "A __factory__ function to generate new Pad objects",
            "itemtype": "method",
            "name": "newPad",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pad object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1073,
            "description": "A __factory__ function to generate new Cell objects",
            "itemtype": "method",
            "name": "newCell",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cell object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1083,
            "description": "A __factory__ function to generate new Context objects",
            "itemtype": "method",
            "name": "newContext",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Context object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1093,
            "description": "A __factory__ function to generate new Group objects",
            "itemtype": "method",
            "name": "newGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Group object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1102,
            "description": "A __factory__ function to generate new Gradient objects",
            "itemtype": "method",
            "name": "newGradient",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Gradient object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1111,
            "description": "A __factory__ function to generate new RadialGradient objects",
            "itemtype": "method",
            "name": "newRadialGradient",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "RadialGradient object"
            },
            "class": "window.scrawl",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1144,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Vector'",
            "final": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1152,
            "description": "X coordinate (px)",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1159,
            "description": "Y coodinate (px)",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1166,
            "description": "Z coordinate (px)",
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "default": "0",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1173,
            "description": "Vector name - not guaranteed to be unique",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "'generic'",
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1181,
            "description": "Set the Vector's coordinates to values that will result in the given magnitude",
            "itemtype": "method",
            "name": "setMagnitudeTo",
            "params": [
                {
                    "name": "item",
                    "description": "New magnitude",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1201,
            "description": "Normalize the Vector to a unit vector",
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1216,
            "description": "Set all attributes to zero",
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1228,
            "description": "Set attributes to new values",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1242,
            "description": "Compare two Vector objects for equality",
            "itemtype": "method",
            "name": "isEqual",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested against this",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if argument object is a Vector, and all attributes match; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1256,
            "description": "Comparea vector-like object to this one for equality",
            "itemtype": "method",
            "name": "isLike",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested against this",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if all attributes match; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1270,
            "description": "extracts x and y data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Object (not vector) with x and y attributes"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1278,
            "description": "Comparea vector-like object to this one for equality",
            "itemtype": "method",
            "name": "hasCoordinates",
            "params": [
                {
                    "name": "item",
                    "description": "Object to be tested against this",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if argument possesses x and y attributes"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1287,
            "description": "Add a Vector to this Vector",
            "itemtype": "method",
            "name": "vectorAdd",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be added to this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1302,
            "description": "Subtract a Vector from this Vector",
            "itemtype": "method",
            "name": "vectorSubtract",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be subtracted from this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1316,
            "description": "Multiply a Vector with this Vector",
            "itemtype": "method",
            "name": "vectorMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be multiplied with this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1330,
            "description": "Divide a Vector into this Vector",
            "itemtype": "method",
            "name": "vectorDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be divided into this; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1344,
            "description": "Multiply this Vector by a scalar value",
            "itemtype": "method",
            "name": "scalarMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Multiplier scalar",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1361,
            "description": "Divide this Vector by a scalar value",
            "itemtype": "method",
            "name": "scalarDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Division scalar",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1378,
            "description": "Retrieve Vector's magnitude value",
            "itemtype": "method",
            "name": "getMagnitude",
            "return": {
                "description": "Magnitude value"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1386,
            "description": "Check to see if Vector is a zero vector",
            "itemtype": "method",
            "name": "checkNotZero",
            "return": {
                "description": "True if Vector is non-zero; false otherwise"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1394,
            "description": "Return a clone of this Vector",
            "itemtype": "method",
            "name": "getVector",
            "return": {
                "description": "Clone of this Vector"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1407,
            "description": "Obtain the cross product of one Vector and a copy of this, or another, Vector\n\nArithmetic is v(crossProduct)u, not u(crossProduct)v",
            "itemtype": "method",
            "name": "getCrossProduct",
            "params": [
                {
                    "name": "u",
                    "description": "Vector to be used to calculate cross product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Source vector (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "New cross product Vector; this on failure"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1437,
            "description": "Obtain the dot product of one Vector and this, or another, Vector\n\nArithmetic is v(dotProduct)u, not u(dotProduct)v",
            "itemtype": "method",
            "name": "getDotProduct",
            "params": [
                {
                    "name": "u",
                    "description": "Vector to be used to calculate dot product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Source vector (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "Dot product result; false on failure"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1455,
            "description": "Obtain the triple scalar product of two Vectors and this, or a third, Vector",
            "itemtype": "method",
            "name": "getTripleScalarProduct",
            "params": [
                {
                    "name": "u",
                    "description": "First vector to be used to calculate triple scalar product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "Second vector to be used to calculate triple scalar product; can also be an Object with x, y and z attributes (all optional)",
                    "type": "Object"
                },
                {
                    "name": "w",
                    "description": "Third vector to be used to calculate triple scalar product (by default: this)",
                    "type": "Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "Triple scalar product result; false on failure"
            },
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1480,
            "description": "Rotate the Vector by a given angle",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "Rotation angle (in degrees)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1499,
            "description": "Rotate the Vector by 180 degrees",
            "itemtype": "method",
            "name": "reverse",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1511,
            "description": "Rotate a Vector object by a Quaternion rotation",
            "itemtype": "method",
            "name": "quaternionMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion object",
                    "type": "Quaternion"
                },
                {
                    "name": "mag",
                    "description": "Magnitude value to which Vector needs to be set after rotation",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amended version of Vector; this on failure"
            },
            "chainable": 1,
            "class": "Vector",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1561,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Quaternion'",
            "final": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1569,
            "description": "Quaternion name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "'generic'",
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1576,
            "description": "3d rotation value",
            "itemtype": "property",
            "name": "n",
            "type": "Number",
            "default": "1",
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1583,
            "description": "3d rotation axis",
            "itemtype": "property",
            "name": "v",
            "type": "Vector",
            "default": "{x:0, y:0, z:0}",
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1591,
            "description": "set to zero quaternion (n = 1)",
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1604,
            "description": "Calculate magnitude of a quaternion",
            "itemtype": "method",
            "name": "getMagnitude",
            "return": {
                "description": "Magnitude value"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1612,
            "description": "Normalize the quaternion",
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1628,
            "description": "Check to see if quaternion is a unit quaternion, within permitted tolerance",
            "itemtype": "method",
            "name": "checkNormal",
            "params": [
                {
                    "name": "tolerance",
                    "description": "Tolerance value; default: 0",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if quaternion is a normalized quaternion; false otherwise"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1642,
            "description": "Retrieve quaternion's vector (rotation axis) component",
            "itemtype": "method",
            "name": "getVector",
            "return": {
                "description": "Vector component"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1650,
            "description": "Retrieve quaternion's scalar (rotation around axis) component",
            "itemtype": "method",
            "name": "getScalar",
            "return": {
                "description": "Number - scalar component of this quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1658,
            "description": "Add a quaternion to this quaternion",
            "itemtype": "method",
            "name": "quaternionAdd",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to be added to this quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1676,
            "description": "Subtract a quaternion from this quaternion",
            "itemtype": "method",
            "name": "quaternionSubtract",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to be subtracted from this quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1694,
            "description": "Multiply quaternion by a scalar value",
            "itemtype": "method",
            "name": "scalarMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Value to multiply quaternion by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1711,
            "description": "Divide quaternion by a scalar value",
            "itemtype": "method",
            "name": "scalarDivide",
            "params": [
                {
                    "name": "item",
                    "description": "Value to divide quaternion by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1729,
            "description": "Conjugate (reverse) value for this quaternion",
            "itemtype": "method",
            "name": "conjugate",
            "return": {
                "description": "Conjugated quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1740,
            "description": "Set the values for this quaternion\n\nArgument object can contain the following attributes:\n\n* for the scalar (n) value, __scalar__ or __n__ (Number)\n* for the vector (v) value, __vector__ or __v__ (Vector object, or object containing xyz attribnutes)\n* for the x value (v.x), __x__ (Number)\n* for the y value (v.y), __y__ (Number)\n* for the z value (v.z), __z__ (Number)\n\nIf the argument object includes values for __pitch__, __yaw__ or __roll__, the set will be performed via the setFromEuler() function\n\nArgument can also be either an existing Quaternion object, or an existing Vector object - for vectors, the scalar value will be set to 0",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing key:value attributes"
                }
            ],
            "return": {
                "description": "Amended quaternion"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1781,
            "description": "Set the values for this quaternion based on the values of the argument quaternion",
            "itemtype": "method",
            "name": "setFromQuaternion",
            "params": [
                {
                    "name": "item",
                    "description": "Reference quaternion",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1799,
            "description": "Set the values for this quaternion based on the values of the reference vector",
            "itemtype": "method",
            "name": "setFromVector",
            "params": [
                {
                    "name": "item",
                    "description": "Reference vector",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1817,
            "description": "Multiply this quaternion by a second quaternion\n\n_Quaternion multiplication is not comutative - arithmetic is this*item, not item*this_",
            "itemtype": "method",
            "name": "quaternionMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to multiply this quaternion by",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1845,
            "description": "Multiply this quaternion by a Vector\n\n_Quaternion multiplication is not comutative - arithmetic is this*item, not item*this_",
            "itemtype": "method",
            "name": "getVectorMultiply",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to multiply this quaternion by",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1872,
            "description": "Retrieve rotational component of this quaternion",
            "itemtype": "method",
            "name": "getAngle",
            "params": [
                {
                    "name": "degree",
                    "description": "Returns rotation in degrees if true; false (radians) by default",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Rotation angle"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1883,
            "description": "Retrieve axis component of this quaternion",
            "itemtype": "method",
            "name": "getAxis",
            "return": {
                "description": "Normalized Vector (scrawl.v Vector)"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1893,
            "description": "Rotate this quaternion by another quaternion\n\n_Quaternion multiplication is not comutative - arithmetic is item (representing the local rotation to be applied) * this, not this * item (for which, use quaternionMultiply)_",
            "itemtype": "method",
            "name": "quaternionRotate",
            "params": [
                {
                    "name": "item",
                    "description": "Quaternion to rotate this quaternion by",
                    "type": "Quaternion"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1911,
            "description": "Rotate a Vector by this quaternion",
            "itemtype": "method",
            "name": "vectorRotate",
            "params": [
                {
                    "name": "item",
                    "description": "Vector to be rotated by this quaternion",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Vector (amended argument); false on failure"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1924,
            "description": "Build a quaternion from Euler angle values\n\nArgument object can be in the form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "makeFromEuler",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.quaternion.makeFromEuler({\n\t\troll: 30,\n\t\tpitch: 90,\n\t\tyaw: 125,\n\t\t});"
            ],
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1959,
            "description": "Update quaternion with Euler angle values\n\nArgument object can be in the form, where all values (which default to 0) are in degrees:\n* {pitch:Number, yaw:Number, roll:Number}\n* {x:Number, y:Number, z:Number}\n* or a mixture of the two",
            "itemtype": "method",
            "name": "setFromEuler",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "New quaternion"
            },
            "example": [
                "\n\tvar myQuart = scrawl.quaternion.setFromEuler({\n\t\troll: 30,\n\t\tpitch: 90,\n\t\tyaw: 125,\n\t\t});"
            ],
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 1993,
            "description": "Retrieve rotations (Euler angles) from a quaternion",
            "itemtype": "method",
            "name": "getEulerAngles",
            "return": {
                "description": "Object in the form",
                "type": "Pitch:Number, yaw:Number, roll:Number"
            },
            "class": "Quaternion",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2049,
            "description": "Unique identifier for each object; default: computer-generated String based on Object's type",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2055,
            "description": "Vector work space - not included in defaults",
            "itemtype": "property",
            "name": "work",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2065,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Base'",
            "final": 1,
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2074,
            "description": "Comment, for accessibility",
            "itemtype": "property",
            "name": "comment",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2081,
            "description": "Title, for accessibility",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2088,
            "description": "Creation timestamp",
            "itemtype": "property",
            "name": "timestamp",
            "type": "String",
            "default": "''",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2096,
            "description": "Retrieve an attribute value. If the attribute value has not been set, then the default value for that attribute will be returned.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "example": [
                "\n\tvar box = scrawl.newBlock({\n\t\twidth: 50,\n\t\t});\n\tbox.get('width');\t\t\t\t//returns 50\n\tbox.get('height');\t\t\t\t//returns 0\n\tbox.get('favouriteAnimal');\t\t//returns undefined"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2112,
            "description": "Set attribute values. Multiple attributes can be set in the one call by including the attribute key:value pair in the argument object.\n\nAn attribute value will only be set if the object already has a default value for that attribute. This restricts the ability of coders to add attributes to Scrawl objects.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "example": [
                "\n\tvar box = scrawl.newBlock({\n\t\twidth: 50,\n\t\theight: 50,\n\t\t});\n\tbox.set({\n\t\theight: 100,\n\t\tfavouriteAnimal: 'cat',\n\t\t});\n\tbox.get('width');\t\t\t\t//returns 50\n\tbox.get('height');\t\t\t\t//returns 100\n\tbox.get('favouriteAnimal');\t\t//returns undefined"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2141,
            "description": "Clone a Scrawl.js object, optionally altering attribute values in the cloned object\n\n(This function is replaced by the path module)",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs; will overwrite existing values in the cloned, but not the source, Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "example": [
                "\n\tvar box = scrawl.newBlock({\n\t\twidth: 50,\n\t\theight: 50,\n\t\t});\n\tvar newBox = box.clone({\n\t\theight: 100,\n\t\t});\n\tnewBox.get('width');\t\t//returns 50\n\tnewBox.get('height');\t\t//returns 100"
            ],
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2166,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2174,
            "description": "Restore workspece vector values to their current specified values",
            "itemtype": "method",
            "name": "resetWork",
            "return": {
                "description": "always true"
            },
            "access": "private",
            "tagname": "",
            "class": "Base",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2216,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Position'",
            "final": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2225,
            "description": "The coordinate Vector representing the object's rotation/flip point\n\nSubScrawl, and all Objects that prototype chain to Subscrawl, supports the following 'virtual' attributes for this attribute:\n\n* __startX__ - (Number) the x coordinate of the object's rotation/flip point, in pixels, from the left side of the object's cell\n* __startY__ - (Number) the y coordinate of the object's rotation/flip point, in pixels, from the top side of the object's cell",
            "itemtype": "property",
            "name": "start",
            "type": "Vector",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2237,
            "description": "An Object (in fact, a Vector) containing offset instructions from the object's rotation/flip point, where drawing commences. \n\nSubScrawl, and all Objects that prototype chain to Subscrawl, supports the following 'virtual' attributes for this attribute:\n\n* __handleX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __handleY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "handle",
            "type": "Object",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2251,
            "description": "The SPRITENAME or POINTNAME of a sprite or Point object to be used for setting this object's start point",
            "itemtype": "property",
            "name": "pivot",
            "type": "String",
            "default": "''",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2258,
            "description": "The object's scale value - larger values increase the object's size",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2265,
            "description": "Reflection flag; set to true to flip sprite, cell or element along the Y axis",
            "itemtype": "property",
            "name": "flipReverse",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2272,
            "description": "Reflection flag; set to true to flip sprite, cell or element along the X axis",
            "itemtype": "property",
            "name": "flipUpend",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2279,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the X axis",
            "itemtype": "property",
            "name": "lockX",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2286,
            "description": "Positioning flag; set to true to ignore path/pivot/mouse changes along the Y axis",
            "itemtype": "property",
            "name": "lockY",
            "type": "Boolean",
            "default": "false",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2293,
            "description": "Current rotation of the sprite, cell or element (in degrees)",
            "itemtype": "property",
            "name": "roll",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2300,
            "description": "Sprite, cell or element width (in pixels)",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2307,
            "description": "Sprite, cell or element height (in pixels)",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2314,
            "description": "(Added by the path module)\nThe SPRITENAME of a Shape sprite whose path is used to calculate this object's start point",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "default": "''",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2321,
            "description": "(Added by the path module)\nA value between 0 and 1 to represent the distance along a Shape object's path, where 0 is the path start and 1 is the path end",
            "itemtype": "property",
            "name": "pathPlace",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2328,
            "description": "(Added by the path module)\nA change value which can be applied to the object's pathPlace attribute",
            "itemtype": "property",
            "name": "deltaPathPlace",
            "type": "Number",
            "default": "0",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2335,
            "description": "(Added by the path module)\nA flag to determine whether the object will calculate its position along a Shape path in a regular (true), or simple (false), manner",
            "itemtype": "property",
            "name": "pathSpeedConstant",
            "type": "Boolean",
            "default": "true",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2344,
            "description": "Position constructor hook function - core functionality",
            "itemtype": "method",
            "name": "corePositionInit",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2374,
            "description": "Position constructor hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionInit",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2380,
            "description": "Position constructor hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionInit",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2386,
            "description": "Augments Base.get(), to allow users to get values for start, startX, startY, handle, handleX, handleY\n\nFor 'start' and 'handle', returns a copy of the Vector",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2406,
            "description": "Position.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionGet",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2412,
            "description": "Augments Base.set(), to allow users to set the start and handle attributes using startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2439,
            "description": "Position.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionSet",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2445,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function. This function also accepts startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2471,
            "description": "Position.setDelta hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionSetDelta",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2477,
            "description": "Augments Base.clone(), to allow users to set the start and handle attributes using startX, startY, handleX, handleY",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2504,
            "description": "Position.setDelta hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationPositionClone",
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2510,
            "description": "Position.getOffsetStartVector() helper function. Supervises the calculation of the pixel values for the object's handle attribute, where the object's frame of reference is its top-left corner\n\n* doesn't take into account the object's scaling or orientation\n* (badly named function - getPivotOffsetVector has nothing to do with pivots)",
            "itemtype": "method",
            "name": "getPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite/cell/element drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2526,
            "description": "Position.getOffsetStartVector() helper function. Supervises the calculation of the pixel values for the object's handle attribute, where the object's frame of reference is its center\n\n* doesn't take into account the object's scaling or orientation\n* (badly named function - getPivotOffsetVector has nothing to do with pivots)",
            "itemtype": "method",
            "name": "getCenteredPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite/cell/element drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2542,
            "description": "Position.getOffsetStartVector() helper function. Calculates the pixel values for the object's handle attribute",
            "itemtype": "method",
            "name": "calculatePOV",
            "params": [
                {
                    "name": "result",
                    "description": "- object's handle vector",
                    "type": "Vector"
                },
                {
                    "name": "width",
                    "description": "- object's width (pixels)",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- object's height (pixels)",
                    "type": "Number"
                },
                {
                    "name": "centered",
                    "description": "- true if object's frame of reference is its center point; false otherwise",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A Vector of calculated offset values"
            },
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2579,
            "description": "Calculates the pixel values of the object's handle attribute",
            "itemtype": "method",
            "name": "getOffsetStartVector",
            "return": {
                "description": "Final offset values (as a Vector) to determine where sprite, cell or element drawing should start"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2593,
            "description": "Stamp helper function - set this sprite, cell or element start values to its pivot sprite/point start value, or to the current mouse coordinates\n\nTakes into account lock flag settings",
            "itemtype": "method",
            "name": "setStampUsingPivot",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2637,
            "description": "Stamp helper function - correct mouse coordinates if pad dimensions not equal to base cell dimensions\n\nTakes into account lock flag settings",
            "itemtype": "method",
            "name": "correctCoordinates",
            "params": [
                {
                    "name": "coords",
                    "description": "An object containing x and y attributes",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amended coordinate object"
            },
            "class": "Position",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2689,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'PageElement'",
            "final": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2698,
            "description": "DOM element width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "300",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2705,
            "description": "DOM element height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "150",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2712,
            "description": "DOM element's current horizontal offset from the top of the web page",
            "itemtype": "property",
            "name": "displayOffsetX",
            "type": "Number",
            "default": "0",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2719,
            "description": "DOM element's current vertical offset from the left side of the web page",
            "itemtype": "property",
            "name": "displayOffsetY",
            "type": "Number",
            "default": "0",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2726,
            "description": "The object's scale value - larger values increase the object's size",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2733,
            "description": "Mouse vector - holds the mouse pointer coordinates relative to the top left corner of the element\n\nWhen instantiating DOM element wrappers (Pad, Stack, Element), setting this attribute to true will make Scrawl add a mousemove event listener to the element. By default, Pads and Stacks will add the event listener to the &lt;canvas&gt; or &lt;div&gt; element (mouse == true); Elements will not (mouse == false).\n\nThe event listener can be added to, or removed from, an element at any time using the set() function with an argument attribute of _mouse: true_ or _mouse: false_.\n\nThe functions _addMouseMove()_ and _removeMouseMove()_ can also be called directly.",
            "itemtype": "property",
            "name": "mouse",
            "type": "Vector",
            "default": "false",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2747,
            "description": "Element CSS position styling attribute",
            "itemtype": "property",
            "name": "position",
            "type": "String",
            "default": "'static'",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2756,
            "description": "PageElement constructor hook function - modified by stacks module",
            "itemtype": "method",
            "name": "stacksPageElementConstructor",
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2762,
            "description": "Augments Base.get() to retrieve DOM element width and height values\n\n(The stack module replaces this core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2785,
            "description": "Augments Base.set() to allow the setting of DOM element dimension values\n\n(The stack module replaces this core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2821,
            "description": "Handles the setting of DOM element title and data-comment attributes",
            "itemtype": "method",
            "name": "setAccessibility",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2841,
            "description": "Calculate the DOM element's current display offset values",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2865,
            "description": "Scale DOM element dimensions (width, height)",
            "itemtype": "method",
            "name": "scaleDimensions",
            "params": [
                {
                    "name": "item",
                    "description": "Scale value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2879,
            "description": "Helper function - set DOM element dimensions (width, height)",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2892,
            "description": "Retrieve details of the Mouse cursor position in relation to the DOM element's top left hand corner. Most useful for determining mouse cursor position over Stack and Pad (visible &lt;canvas&gt;) elements.\n\n_Note: if changes are made elsewhere to the web page (DOM) after the page loads, the function .getDisplayOffsets() will need to be called to recalculate the element's position within the page - failure to do so will lead to this function returning incorrect data. getDisplayOffsets() does not need to be called during/after page scrolling._\n\nThe returned object is a Vector containing the mouse cursor's current x and y coordinates in relation to the DOM element's top left corner, together with the following additional attributes:\n\n* __active__ - set to true if mouse is hovering over the element; false otherwise\n* __type__ - element's type ('stack', 'element', 'pad')\n* __element__ - Scrawl wrapper object's name attribute\n* __type__ - Scrawl wrapper object's type ('Pad', 'Stack', 'Element')\n* __layer__ - true if coordinates have been calculated using e.layerX, e.layerY; false otherwise",
            "itemtype": "method",
            "name": "getMouse",
            "return": {
                "description": "Vector containing localized mouse coordinates, with additional attributes"
            },
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2910,
            "description": "mousemove event listener function",
            "itemtype": "method",
            "name": "handleMouseMove",
            "params": [
                {
                    "name": "e",
                    "description": "window.event",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2959,
            "description": "mouseout event listener function",
            "itemtype": "method",
            "name": "handleMouseOut",
            "params": [
                {
                    "name": "e",
                    "description": "window.event",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2975,
            "description": "Constructor helper function",
            "itemtype": "method",
            "name": "initMouse",
            "params": [
                {
                    "name": "constructor",
                    "description": "argument object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 2997,
            "description": "Adds a mousemove event listener to the element",
            "itemtype": "method",
            "name": "addMouseMove",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3025,
            "description": "Remove the mousemove event listener from the element",
            "itemtype": "method",
            "name": "removeMouseMove",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "PageElement",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3130,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Pad'",
            "final": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3139,
            "description": "Array of CELLNAME Strings determining the order in which non-display &lt;canvas&gt; elements are to be copied onto the display &lt;canvas&gt;",
            "itemtype": "property",
            "name": "drawOrder",
            "type": "Array",
            "default": "[]",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3146,
            "description": "Array of CELLNAME Strings associated with this Pad",
            "itemtype": "property",
            "name": "cells",
            "type": "Array",
            "default": "[]",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3153,
            "description": "Pad's display (visible) &lt;canvas&gt; element - CELLNAME",
            "itemtype": "property",
            "name": "display",
            "type": "String",
            "default": "''",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3160,
            "description": "Pad's base (hidden) &lt;canvas&gt; element - CELLNAME",
            "itemtype": "property",
            "name": "base",
            "type": "String",
            "default": "''",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3167,
            "description": "Pad's currently active &lt;canvas&gt; element - CELLNAME",
            "itemtype": "property",
            "name": "current",
            "type": "String",
            "default": "''",
            "deprecated": true,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3177,
            "description": "Retrieve Pad's visible &lt;canvas&gt; element object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "DOM element object"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3186,
            "description": "Augments PageElement.set(), to allow users to set Pad.drawOrder correctly, and also cascade scale, backgroundColor, globalAlpha and globalCompositeOperation changes to associated Cell objects",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3227,
            "description": "Set the drawOrder attribute",
            "itemtype": "method",
            "name": "setDrawOrder",
            "params": [
                {
                    "name": "items",
                    "description": "Array of CELLNAME Strings; alternatively, supply a CELLNAME String argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.addCanvasToPage({\n\t\tname: 'mycanvas',\n\t\t});\n\tscrawl.pad.mycanvas.addNewCell({\n\t\tname: 'action',\n\t\t});\n\tscrawl.pad.mycanvas.addNewCell({\n\t\tname: 'background',\n\t\t});\n\tscrawl.pad.mycanvas.setDrawOrder(['background', 'action']);"
            ],
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3249,
            "description": "Display helper function - determines which Cell &lt;canvas&gt; elements need to be manipulated in line with the supplied 'command' argument\n\nArgument String can be in the form of:\n\n* 'all' - for all canvases\n* 'display' - for the display canvas only\n* 'base' - for the base canvas only\n* 'non-base' for all canvases except the base canvas\n* 'current' - for the current canvas only\n* 'non-current' - for all canvases except the current canvas\n* 'additionals' - for all canvases except the display and base canvases\n* 'non-additionals' - for the display and base canvases only\n* 'none' - for no canvases\n* the __default__ is to return an Array containing all canvases except the display canvas\n\nThe argument can also be an Array of CELLNAME strings",
            "itemtype": "method",
            "name": "getCellsForDisplayAction",
            "params": [
                {
                    "name": "command",
                    "description": "Command String; or alternatively an Array of CELLNAME Strings",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of CELLNAME Strings"
            },
            "access": "private",
            "tagname": "",
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3299,
            "description": "Display function - requests Cells to clear their &lt;canvas&gt; element\n\nArgument String can be in the form of:\n\n* 'all' - for all canvases\n* 'display' - for the display canvas only\n* 'base' - for the base canvas only\n* 'non-base' for all canvases except the base canvas\n* 'current' - for the current canvas only\n* 'non-current' - for all canvases except the current canvas\n* 'additionals' - for all canvases except the display and base canvases\n* 'non-additionals' - for the display and base canvases only\n* 'none' - for no canvases\n* the __default__ is to return an Array containing all canvases except the display canvas\n\nThe argument can also be an Array of CELLNAME strings",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "command",
                    "description": "Command String; or alternatively an Array of CELLNAME Strings",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3329,
            "description": "Display function - requests Cells to compile their &lt;canvas&gt; element\n\nArgument String can be in the form of:\n\n* 'all' - for all canvases\n* 'display' - for the display canvas only\n* 'base' - for the base canvas only\n* 'non-base' for all canvases except the base canvas\n* 'current' - for the current canvas only\n* 'non-current' - for all canvases except the current canvas\n* 'additionals' - for all canvases except the display and base canvases\n* 'non-additionals' - for the display and base canvases only\n* 'none' - for no canvases\n* the __default__ is to return an Array containing all canvases except the display canvas\n\nThe argument can also be an Array of CELLNAME strings",
            "itemtype": "method",
            "name": "compile",
            "params": [
                {
                    "name": "command",
                    "description": "Command String; or alternatively an Array of CELLNAME Strings",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3359,
            "description": "Display function - requests Cells to clear their &lt;canvas&gt; element using their backgroundColor\n\nArgument String can be in the form of:\n\n* 'all' - for all canvases\n* 'display' - for the display canvas only\n* 'base' - for the base canvas only\n* 'non-base' for all canvases except the base canvas\n* 'current' - for the current canvas only\n* 'non-current' - for all canvases except the current canvas\n* 'additionals' - for all canvases except the display and base canvases\n* 'non-additionals' - for the display and base canvases only\n* 'none' - for no canvases\n* the __default__ is to return an Array containing all canvases except the display canvas\n\nThe argument can also be an Array of CELLNAME strings",
            "itemtype": "method",
            "name": "stampBackground",
            "params": [
                {
                    "name": "command",
                    "description": "Command String; or alternatively an Array of CELLNAME Strings",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3389,
            "description": "Display function - Pad tells its visible &lt;canvas&gt; element to clear itself and then copy associated canvases onto itself\n\nArgument String can be in the form of:\n\n* 'wipe-base' - base canvas is cleared before copy operation starts\n* 'wipe both' - both the base canvas and the display canvas are cleared before the copy operation starts\n* the __default__ is to only clear the display canvas before the copy operation starts\n\nCanvases are copied onto the _base_ (not display) canvas in the order supplied by the Pad.drawOrder Array. This means that anything drawn on the base canvas will be at the bottom of the eventual scene.\n\nThe base canvas is then copied onto the display canvas, as the last copy operation.",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "command",
                    "description": "Command String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3427,
            "description": "Display function - Pad tells its associated Cell objects to undertake a complete clear-compile-show display cycle\n\nArgument Object can have the following (optional) attributes:\n\n* clear:COMMAND\n* compile:COMMAND\n* show:COMMAND",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "command",
                    "description": "Command Object",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3447,
            "description": "Create a new (hidden) &lt;canvas&gt; element and associated Cell wrapper, and add it to this Pad",
            "itemtype": "method",
            "name": "addNewCell",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing attribute data for the new canvas",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New Cell object; false on failure"
            },
            "example": [
                "\n\tscrawl.addCanvasToPage({\n\t\tname: 'mycanvas',\n\t\twidth: 200,\n\t\theight: 200,\n\t\t});\n\tscrawl.pad.mycanvas.addNewCell({\n\t\tname: 'background',\n\t\twidth: 400,\n\t\t});"
            ],
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3482,
            "description": "Associate existing &lt;canvas&gt; elements, and their Cell wrappers, with this Pad",
            "itemtype": "method",
            "name": "addCells",
            "params": [
                {
                    "name": "items",
                    "description": "An Array of CELLNAME Strings; alternatively the argument can be a single CELLNAME String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3499,
            "description": "Remove a Cell wrapper object from this Pad\n\n_Note: does not delete the canvas, or the Cell object, from the scrawl library_",
            "itemtype": "method",
            "name": "deleteCell",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3519,
            "description": "Set scrawl.currentPad attribute to this Pad's PADNAME String",
            "itemtype": "method",
            "name": "makeCurrent",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.addCanvasToPage({\n\t\tname: 'mycanvas',\n\t\twidth: 200,\n\t\theight: 200,\n\t\t}).makeCurrent();"
            ],
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3535,
            "description": "Augments PageElement.setAccessibility(); handles the setting of &lt;canvas&gt; element title and data-comment attributes\n\n* Title text is assigned to the display canvas's title attribute\n* Comments are placed between the display canvas element's tags, within &lt;p&gt; tags - this will remove any existing content between the canvas tags",
            "itemtype": "method",
            "name": "setAccessibility",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3560,
            "description": "Overrides PageElement.setDimensions(); &lt;canvas&gt; elements do not use styling to set their drawing region dimensions",
            "itemtype": "method",
            "name": "setDimensions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pad",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3610,
            "description": "The coordinate Vector representing the Cell's target position on the &lt;canvas&gt; to which it is to be copied\n\nCell supports the following 'virtual' attributes for this attribute:\n\n* __startX__ or __targetX__ - (Number) the x coordinate on the destination &lt;canvas&gt;\n* __startY__ or __targetY__ - (Number) the y coordinate on the destination &lt;canvas&gt;",
            "itemtype": "property",
            "name": "start",
            "type": "Vector",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3630,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Cell'",
            "final": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3639,
            "description": "PADNAME of the Pad object to which this Cell belongs",
            "itemtype": "property",
            "name": "pad",
            "type": "String",
            "default": "''",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3646,
            "description": "The coordinate Vector representing the Cell's copy source position on its &lt;canvas&gt;\n\nCell supports the following 'virtual' attributes for this attribute:\n\n* __sourceX__ - (Number) the x coordinate on the source &lt;canvas&gt;\n* __sourceY__ - (Number) the y coordinate on the source &lt;canvas&gt;",
            "itemtype": "property",
            "name": "source",
            "type": "Vector",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3658,
            "description": "Copy width, in pixels. Determines which portion of this Cell's &lt;canvas&gt; element will be copied to another &lt;canvas&gt;",
            "itemtype": "property",
            "name": "sourceWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3665,
            "description": "Copy height, in pixels. Determines which portion of this Cell's &lt;canvas&gt; element will be copied to another &lt;canvas&gt;",
            "itemtype": "property",
            "name": "sourceHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3672,
            "description": "Paste width, in pixels. Determines where, and at what scale, the copied portion of this Cell's &lt;canvas&gt; will appear on the target Cell's &lt;canvas&gt;",
            "itemtype": "property",
            "name": "targetWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3679,
            "description": "Paste height, in pixels. Determines where, and at what scale, the copied portion of this Cell's &lt;canvas&gt; will appear on the target Cell's &lt;canvas&gt;",
            "itemtype": "property",
            "name": "targetHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3686,
            "description": "DOM &lt;canvas&gt; element's width (not CSS width)\n\n_Never change this attribute directly_",
            "itemtype": "property",
            "name": "actualWidth",
            "type": "Number",
            "default": "300",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3695,
            "description": "DOM &lt;canvas&gt; element's height (not CSS height)\n\n_Never change this attribute directly_",
            "itemtype": "property",
            "name": "actualHeight",
            "type": "Number",
            "default": "150",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3704,
            "itemtype": "property",
            "name": "fieldLabel",
            "type": "String",
            "default": "''",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3710,
            "description": "Transparency level to be used when copying this Cell's &lt;canvas&gt; element to another &lt;canvas&gt;. Permitted values are between 0 (fully transparent) and 1 (fully opaque)",
            "itemtype": "property",
            "name": "globalAlpha",
            "type": "Number",
            "default": "1",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3717,
            "description": "Composition method to be used when copying this Cell's &lt;canvas&gt; element to another &lt;canvas&gt;. Permitted values include\n\n* 'source-over'\n* 'source-atop'\n* 'source-in'\n* 'source-out'\n* 'destination-over'\n* 'destination-atop'\n* 'destination-in'\n* 'destination-out'\n* 'lighter'\n* 'darker'\n* 'copy'\n* 'xor'\n\n_Be aware that different browsers render these operations in different ways, and some options are not supported by all browsers_",
            "itemtype": "property",
            "name": "globalCompositeOperation",
            "type": "String",
            "default": "'source-over'",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3739,
            "description": "DOM &lt;canvas&gt; element's background color; use any permitted CSS color String\n\n_Background colors are achieved via JavaScript canvas API drawing methods. Setting the CSS backgroundColor attribute on a &lt;canvas&gt; element is not recommended_",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'rgba(0,0,0,0)'",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3748,
            "description": "CTXNAME of this Cell's Context object\n\n_Cells use a Context object to keep track of the settings supplied to its &lt;canvas&gt; element's 2d context engine_",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3758,
            "description": "Array of GROUPNAMES that contribute to building this Cell's scene",
            "itemtype": "property",
            "name": "groups",
            "type": "Array",
            "default": "[]",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3765,
            "description": "Pad dimension flag: when true, instructs the Cell to use its Pad object's dimensions as its source dimensions (sourceWidth, sourceHeight)",
            "itemtype": "property",
            "name": "usePadDimensions",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3775,
            "description": "Cell constructor hook function - core module",
            "itemtype": "method",
            "name": "coreCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3828,
            "description": "Cell constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "collisionsCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3834,
            "description": "Cell constructor hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellInit",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3840,
            "description": "Augments Position.get(), to allow users to get values for sourceX, sourceY, startX, startY, targetX, targetY, handleX, handleY, width, height",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3869,
            "description": "Cell.get hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellGet",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3875,
            "description": "Augments Position.set(), to allow users to set the start, handle, and source attributes using startX, startY, targetX, targetY, handleX, handleY, sourceX, sourceY.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3914,
            "description": "Cell.set hook function - modified by animation module",
            "itemtype": "method",
            "name": "animationCellSet",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3920,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function\n\nAugments Position.setDelta to allow changes to be made using attributes: source, sourceX, sourceY, sourceWidth, sourceHeight, start, startX, startY, target, targetX, targetY, targetWidth, targetHeight, globalAlpha",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3959,
            "description": "Return the Cell object's default Pad (&lt;canvas&gt; element) width",
            "itemtype": "method",
            "name": "getPadWidth",
            "return": {
                "description": "Pad width"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3968,
            "description": "Return the Cell object's default Pad (&lt;canvas&gt; element) height",
            "itemtype": "method",
            "name": "getPadHeight",
            "return": {
                "description": "Pad height"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 3977,
            "description": "Set the Cell's &lt;canvas&gt; element's context engine to the specification supplied by the sprite about to be drawn on the canvas",
            "itemtype": "method",
            "name": "setEngine",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite object",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "Sprite object"
            },
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4076,
            "description": "Clear the Cell's &lt;canvas&gt; element using JavaScript ctx.clearRect()",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4088,
            "description": "Prepare to draw sprites onto the Cell's &lt;canvas&gt; element, in line with the Cell's group Array",
            "itemtype": "method",
            "name": "compile",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4108,
            "description": "Clear the Cell's &lt;canvas&gt; element using JavaScript ctx.fillRect(), using the cell's .backgroundColor attribute",
            "itemtype": "method",
            "name": "stampBackground",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4126,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "rotateDestination",
            "params": [
                {
                    "name": "engine",
                    "description": "Javascript canvas context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4143,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "prepareToCopyCell",
            "params": [
                {
                    "name": "engine",
                    "description": "Javascript canvas context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4166,
            "description": "Cell.prepareToCopyCell hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPrepareToCopyCell",
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4172,
            "description": "Cell copy helper function",
            "itemtype": "method",
            "name": "copyCellToSelf",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME of cell to be copied onto this cell's &lt;canvas&gt; element",
                    "type": "String"
                },
                {
                    "name": "usePadScale",
                    "description": "Set to true when copying cells onto the display canvas; false otherwise",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4218,
            "description": "Sprite stamp helper function",
            "itemtype": "method",
            "name": "clearShadow",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4238,
            "description": "Sprite stamp helper function",
            "itemtype": "method",
            "name": "restoreShadow",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4262,
            "description": "Sprite stamp helper function",
            "itemtype": "method",
            "name": "setToClearShape",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4282,
            "description": "Amend the physical dimensions of the Cell's &lt;canvas&gt; element\n\nOmitting the argument will force the &lt;canvas&gt; to set itself to its Pad object's dimensions",
            "itemtype": "method",
            "name": "setDimensions",
            "params": [
                {
                    "name": "items",
                    "description": "Argument with __width__ and/or __height__ attributes, in pixels",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4310,
            "description": "Perform a JavaScript ctx.save() operation",
            "itemtype": "method",
            "name": "saveContext",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4320,
            "description": "Perform a JavaScript ctx.restore() operation",
            "itemtype": "method",
            "name": "restoreContext",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4330,
            "description": "Capture an image of the cell's &lt;canvas&gt; element using the JavaScript ctx.getImageData() operation\n\nArgument is an Object in the form:\n\n* {x:Number, y:Number, width:Number, height:Number}\n\nDefault values are:\n\n* {0, 0, this.actualWidth, this.actualHeight}",
            "itemtype": "method",
            "name": "getImageData",
            "params": [
                {
                    "name": "dimensions",
                    "description": "Details of the &lt;canvas&gt; area to be saved",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "String label pointing to where the image has been saved in the scrawl library - scrawl.imageData[STRING]"
            },
            "class": "Cell",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4388,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Context'",
            "final": 1,
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4397,
            "description": "Color, gradient or pattern used to fill a sprite. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String\n* GRADIENTNAME String\n* RADIALGRADIENTNAME String\n* PATTERNNAME String",
            "itemtype": "property",
            "name": "fillStyle",
            "type": "String",
            "default": "'#000000'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4410,
            "description": "Shape and Path sprite fill method. Can be:\n\n* 'nonzero' - all areas enclosed by the sprite's path are flooded\n* 'evenodd' - only 'odd' areas of the sprite's path are flooded",
            "itemtype": "property",
            "name": "winding",
            "type": "String",
            "default": "'nonzero'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4420,
            "description": "Color, gradient or pattern used to outline a sprite. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String\n* GRADIENTNAME String\n* RADIALGRADIENTNAME String\n* PATTERNNAME String",
            "itemtype": "property",
            "name": "strokeStyle",
            "type": "String",
            "default": "'#000000'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4433,
            "description": "Sprite transparency - a value between 0 and 1, where 0 is completely transparent and 1 is completely opaque",
            "itemtype": "property",
            "name": "globalAlpha",
            "type": "Number",
            "default": "1",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4440,
            "description": "Compositing method for applying the sprite to an existing Cell (&lt;canvas&gt;) display. Permitted values include\n\n* 'source-over'\n* 'source-atop'\n* 'source-in'\n* 'source-out'\n* 'destination-over'\n* 'destination-atop'\n* 'destination-in'\n* 'destination-out'\n* 'lighter'\n* 'darker'\n* 'copy'\n* 'xor'\n\n_Be aware that different browsers render these operations in different ways, and some options are not supported by all browsers_",
            "itemtype": "property",
            "name": "globalCompositeOperation",
            "type": "String",
            "default": "'source-over'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4463,
            "description": "Line width, in pixels",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "default": "1",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4470,
            "description": "Line cap styling. Permitted values include:\n\n* 'butt'\n* 'round'\n* 'square'",
            "itemtype": "property",
            "name": "lineCap",
            "type": "String",
            "default": "'butt'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4482,
            "description": "Line join styling. Permitted values include:\n\n* 'miter'\n* 'round'\n* 'bevel'",
            "itemtype": "property",
            "name": "lineJoin",
            "type": "String",
            "default": "'miter'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4494,
            "description": "Line dash format - an array of Numbers representing line and gap values (in pixels), for example [5,2,2,2] for a long-short dash pattern",
            "itemtype": "property",
            "name": "lineDash",
            "type": "Array",
            "default": "[]",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4501,
            "description": "Line dash offset - distance along the sprite's outline at which to start the line dash. Changing this value can be used to create a 'marching ants effect",
            "itemtype": "property",
            "name": "lineDashOffset",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4508,
            "description": "miterLimit - affecting the 'pointiness' of the line join where two lines join at an acute angle",
            "itemtype": "property",
            "name": "miterLimit",
            "type": "Number",
            "default": "10",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4515,
            "description": "Horizontal offset of a sprite's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetX",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4522,
            "description": "Vertical offset of a sprite's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowOffsetY",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4529,
            "description": "Blur border for a sprite's shadow, in pixels",
            "itemtype": "property",
            "name": "shadowBlur",
            "type": "Number",
            "default": "0",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4536,
            "description": "Color, gradient or pattern used for sprite shadow effect. Can be:\n\n* Cascading Style Sheet format color String - '#fff', '#ffffff', 'rgb(255,255,255)', 'rgba(255,255,255,1)', 'white'\n* COLORNAME String",
            "itemtype": "property",
            "name": "shadowColor",
            "type": "String",
            "default": "'rgba(0,0,0,0)'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4546,
            "description": "Cascading Style Sheet font String, for Phrase sprites",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "default": "'10pt sans-serif'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4553,
            "description": "Text alignment for multi-line Phrase sprites. Permitted values include:\n\n* 'start'\n* 'left'\n* 'center'\n* 'right'\n* 'end'",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "default": "'start'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4567,
            "description": "Text baseline value for single-line Phrase sprites set to follow a Path sprite path. Permitted values include:\n\n* 'alphabetic'\n* 'top'\n* 'hanging'\n* 'middle'\n* 'ideographic'\n* 'bottom'",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "default": "'alphabetic'",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4585,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function - lineDashOffset, lineWidth, globalAlpha\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4623,
            "description": "Interrogates a &lt;canvas&gt; element's context engine and populates its own attributes with returned values\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "getContextFromEngine",
            "params": [
                {
                    "name": "ctx",
                    "description": "&lt;canvas&gt; element context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4642,
            "description": "Interrogates a &lt;canvas&gt; element's context engine and populates its own attributes with returned values\n\n(Only for use by Context objects)",
            "itemtype": "method",
            "name": "getChanges",
            "params": [
                {
                    "name": "ctx",
                    "description": "&lt;canvas&gt; element context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Context",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4754,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Group'",
            "final": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4763,
            "description": "Array of SPRITENAME Strings of sprites that comprise this Group",
            "itemtype": "property",
            "name": "sprites",
            "type": "Array",
            "default": "[]",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4770,
            "description": "CELLNAME of the default Cell object to which this group is associated",
            "itemtype": "property",
            "name": "cell",
            "type": "String",
            "default": "''",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4777,
            "description": "Group order value - lower order Groups are drawn on &lt;canvas&gt; elements before higher order Groups",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4784,
            "description": "Visibility flag - Group sprites will (in general) not be drawn on a &lt;canvas&gt; element when this flag is set to false",
            "itemtype": "property",
            "name": "visibility",
            "type": "Boolean",
            "default": "true",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4791,
            "description": "Sorting flag - when set to true, Groups will sort their constituent sprite object according to their sprite.order attribute for each iteration of the display cycle",
            "itemtype": "property",
            "name": "spriteSort",
            "type": "Boolean",
            "default": "true",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4798,
            "description": "Collision checking radius, in pixels - as a first step in a collision check, the Group will winnow potential collisions according to how close the checked sprite is to the current reference sprite or mouse coordinate; when set to 0, this collision check step is skipped and all sprites move on to the next step",
            "itemtype": "property",
            "name": "regionRadius",
            "type": "Number",
            "default": "0",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4807,
            "description": "Sprite sorting routine - sprites are sorted according to their sprite.order attribute value, in ascending order",
            "itemtype": "method",
            "name": "sortSprites",
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4820,
            "description": "Tell the Group to ask _all_ of its constituent sprites to draw themselves on a &lt;canvas&gt; element, regardless of their visibility",
            "itemtype": "method",
            "name": "forceStamp",
            "params": [
                {
                    "name": "method",
                    "description": "Drawing method String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME of cell on which sprites are to draw themselves",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4837,
            "description": "Tell the Group to ask its constituent sprites to draw themselves on a &lt;canvas&gt; element; only sprites whose visibility attribute is set to true will comply",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Drawing method String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME of cell on which sprites are to draw themselves",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4854,
            "description": "Add sprites to the Group",
            "itemtype": "method",
            "name": "addSpritesToGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of SPRITENAME Strings; alternatively, a single SPRITENAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4868,
            "description": "Remove sprites from the Group",
            "itemtype": "method",
            "name": "removeSpritesFromGroup",
            "params": [
                {
                    "name": "item",
                    "description": "Array of SPRITENAME Strings; alternatively, a single SPRITENAME String can be supplied as the argument",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4882,
            "description": "Ask all sprites in the Group to perform a setDelta() operation\n\nThe following sprite attributes can be amended by this function: startX, startY, scale, roll.",
            "itemtype": "method",
            "name": "updateSpritesBy",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4903,
            "description": "Ask all sprites in the Group to perform a set() operation",
            "itemtype": "method",
            "name": "setSpritesTo",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4916,
            "description": "Require all sprites in the Group to set their pivot attribute to the supplied POINTNAME or SPRITENAME string, and set their handle Vector to reflect the current vector between that sprite or Point object's start Vector and their own Vector\n\nThis has the effect of turning a set of disparate sprites into a single, coordinated group.",
            "itemtype": "method",
            "name": "pivotSpritesTo",
            "params": [
                {
                    "name": "item",
                    "description": "SPRITENAME or POINTNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4949,
            "description": "Check all sprites in the Group to see if they are colliding with the supplied coordinate. The check is done in reverse order after the sprites have been sorted; the sprite Object with the highest order value that is colliding with the coordinate is returned",
            "itemtype": "method",
            "name": "getSpriteAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Sprite object, or false if no sprites are colliding with the coordinate"
            },
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 4978,
            "description": "Check all sprites in the Group to see if they are colliding with the supplied coordinate. The check is done in reverse order after the sprites have been sorted; all sprites (in the group) colliding with the coordinate are returned as an array of sprite objects",
            "itemtype": "method",
            "name": "getSpriteAt",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an Object with x and y attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Sprite object, or false if no sprites are colliding with the coordinate"
            },
            "class": "Group",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5055,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Sprite'",
            "final": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5064,
            "description": "Sprite order value - lower order sprites are drawn on &lt;canvas&gt; elements before higher order sprites",
            "itemtype": "property",
            "name": "order",
            "type": "Number",
            "default": "0",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5071,
            "description": "Visibility flag - sprites will (in general) not be drawn on a &lt;canvas&gt; element when this flag is set to false",
            "itemtype": "property",
            "name": "visibility",
            "type": "Boolean",
            "default": "true",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5078,
            "description": "Sprite drawing method. A sprite can be drawn onto a &lt;canvas&gt; element in a variety of ways; these methods include:\n\n* 'draw' - stroke the sprite's path with the sprite's strokeStyle color, pattern or gradient\n* 'fill' - fill the sprite's path with the sprite's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the sprite's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the sprite's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the sprite's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the sprite's path; shadow offset is added to both actions\n* 'clear' - fill the sprite's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the sprite's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the sprite's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the sprite onto the canvas\n\n_Note: not all sprites support all of these operations_",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'fill'",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5098,
            "description": "Current SVGTiny data string for the sprite (only supported by Path and Shape sprites)",
            "itemtype": "property",
            "name": "data",
            "type": "String",
            "default": "''",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5105,
            "description": "Sprite radius, in pixels - not supported by all sprite objects",
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5112,
            "description": "Scaling flag; set to true to ensure lineWidth scales in line with the scale attribute value",
            "itemtype": "property",
            "name": "scaleOutline",
            "type": "Boolean",
            "default": "true",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5119,
            "description": "Display cycle flag; if set to true, sprite will not change the &lt;canvas&gt; element's context engine's settings before drawing itself on the cell",
            "itemtype": "property",
            "name": "fastStamp",
            "type": "Boolean",
            "default": "false",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5126,
            "description": "CTXNAME of this Sprite's Context object",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5134,
            "description": "GROUPNAME String for this sprite's default group\n\n_Note: a sprite can belong to more than one group by being added to other Group objects via the __scrawl.addSpritesToGroups()__ and __Group.addSpriteToGroup()__ functions_",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "default": "''",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5145,
            "description": "Sprite constructor hook function - modified by collisions module",
            "itemtype": "method",
            "name": "collisionsSpriteConstructor",
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5151,
            "description": "Constructor helper function - register sprite object in the scrawl library",
            "itemtype": "method",
            "name": "registerInLibrary",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5165,
            "description": "Sprite.registerInLibrary hook function - modified by collisions module",
            "itemtype": "method",
            "name": "collisionsSpriteRegisterInLibrary",
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5171,
            "description": "Augments Position.get()\n\nAllows users to retrieve a sprite's Context object's values via the sprite",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "attribute key string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5191,
            "description": "Augments Position.set()\n\nAllows users to:\n* set a sprite's Context object's values via the sprite\n* shift a sprite between groups",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5217,
            "description": "Sprite.set hook function - modified by collisions module",
            "itemtype": "method",
            "name": "collisionsSpriteSet",
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5223,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function\n\nAllows users to amend a sprite's Context object's values via the sprite, in addition to its own attribute values",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5247,
            "description": "Augments Position.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5270,
            "description": "Constructor helper function - discover this sprite's default group affiliation",
            "itemtype": "method",
            "name": "getGroup",
            "params": [
                {
                    "name": "items",
                    "description": "Constructor argument",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "GROUPNAME String"
            },
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5286,
            "description": "Stamp function - instruct sprite to draw itself on a Cell's &lt;canvas&gt; element, regardless of the setting of its visibility attribute\n\nPermitted methods include:\n\n* 'draw' - stroke the sprite's path with the sprite's strokeStyle color, pattern or gradient\n* 'fill' - fill the sprite's path with the sprite's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the sprite's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the sprite's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the sprite's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the sprite's path; shadow offset is added to both actions\n* 'clear' - fill the sprite's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the sprite's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the sprite's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the sprite onto the canvas",
            "itemtype": "method",
            "name": "forceStamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use sprite's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5314,
            "description": "Stamp helper function - get handle offset values",
            "itemtype": "method",
            "name": "prepareStamp",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5328,
            "description": "Stamp function - instruct sprite to draw itself on a Cell's &lt;canvas&gt; element, if its visibility attribute is true\n\nPermitted methods include:\n\n* 'draw' - stroke the sprite's path with the sprite's strokeStyle color, pattern or gradient\n* 'fill' - fill the sprite's path with the sprite's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the sprite's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the sprite's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the sprite's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the sprite's path; shadow offset is added to both actions\n* 'clear' - fill the sprite's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the sprite's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the sprite's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the sprite onto the canvas",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use sprite's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5364,
            "description": "Sprite.stamp hook function - modified by path module",
            "itemtype": "method",
            "name": "pathStamp",
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5370,
            "description": "Stamp helper function - direct sprite to the required drawing method function",
            "itemtype": "method",
            "name": "callMethod",
            "params": [
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "engine",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use sprite's own method setting",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5395,
            "description": "Stamp helper function - rotate and position canvas ready for drawing sprite",
            "itemtype": "method",
            "name": "rotateCell",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5412,
            "description": "Stamp helper function - perform a 'clear' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5424,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5436,
            "description": "Stamp helper function - perform a 'draw' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5448,
            "description": "Stamp helper function - perform a 'fill' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5460,
            "description": "Stamp helper function - perform a 'drawFill' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5472,
            "description": "Stamp helper function - perform a 'fillDraw' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5484,
            "description": "Stamp helper function - perform a 'sinkInto' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5496,
            "description": "Stamp helper function - perform a 'floatOver' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5508,
            "description": "Stamp helper function - perform a 'clip' method draw\n\n_Note: not supported by this sprite_",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5520,
            "description": "Stamp helper function - perform a 'none' method draw. This involves setting the &lt;canvas&gt; element's context engine's values with this sprite's context values, but not defining or drawing the sprite on the canvas.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5533,
            "description": "Stamp helper function - clear shadow parameters during a multi draw operation (drawFill and fillDraw methods)",
            "itemtype": "method",
            "name": "clearShadow",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5549,
            "description": "Stamp helper function - clear shadow parameters during a multi draw operation (Phrase text-along-path drawFill and fillDraw methods)",
            "itemtype": "method",
            "name": "restoreShadow",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5565,
            "description": "Set sprite's pivot to 'mouse'; set handles to supplied Vector value; set order to +9999",
            "itemtype": "method",
            "name": "pickupSprite",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate vector; alternatively an object with {x, y} attributes can be used",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5586,
            "description": "Revert pickupSprite() actions, ensuring sprite is left where the user drops it",
            "itemtype": "method",
            "name": "dropSprite",
            "params": [
                {
                    "name": "items",
                    "description": "Alternative pivot String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5604,
            "description": "Check Cell coordinates to see if any of them fall within this sprite's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the sprite's path; false if none fall within the path"
            },
            "class": "Sprite",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5658,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Design'",
            "final": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5667,
            "description": "Array of JavaScript Objects representing color stop data\n\nObjects take the form {color:String, stop:Number} where:\n\n* __color__ attribute can be any legitimate CSS color string\n* __stop can be any number between O and 0.999999 (not 1)",
            "itemtype": "property",
            "name": "color",
            "type": "Array of JavaScript objects",
            "default": "[{color: 'black', stop: 0},{color: 'white', stop: 0.999999}]",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5679,
            "description": "Drawing flag - when set to true, will use sprite-based 'range' coordinates to calculate the start and end points of the gradient; when false, will use Cell-based coordinates",
            "itemtype": "property",
            "name": "setToSprite",
            "type": "Boolean",
            "default": "false",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5686,
            "description": "CELLNAME String of &lt;canvas&gt; element context engine on which the gradient has been set",
            "itemtype": "property",
            "name": "cell",
            "type": "String",
            "default": "''",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5693,
            "description": "Horizontal start coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "startX",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5700,
            "description": "Vertical start coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "startY",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5707,
            "description": "Horizontal end coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "endX",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5714,
            "description": "Vertical end coordinate, in pixels, from the top-left corner of the gradient's &lt;canvas&gt; element",
            "itemtype": "property",
            "name": "endY",
            "type": "Number",
            "default": "0",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5721,
            "description": "Horizontal start coordinate, measured as a percentage from the center of a sprite, with 0 representing the center and 1 the left edge",
            "itemtype": "property",
            "name": "startRangeX",
            "type": "Number",
            "default": "1",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5728,
            "description": "Vertical start coordinate, measured as a percentage from the center of a sprite, with 0 representing the center and 1 the top edge",
            "itemtype": "property",
            "name": "startRangeY",
            "type": "Number",
            "default": "1",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5735,
            "description": "Horizontal end coordinate, measured as a percentage from the center of a sprite, with 0 representing the center and 1 the right edge",
            "itemtype": "property",
            "name": "endRangeX",
            "type": "Number",
            "default": "1",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5742,
            "description": "Vertical end coordinate, measured as a percentage from the center of a sprite, with 0 representing the center and 1 the bottom edge",
            "itemtype": "property",
            "name": "endRangeY",
            "type": "Number",
            "default": "1",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5751,
            "description": "Add values to Number attributes",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5777,
            "description": "Creates the gradient\n\n_This function is replaced by the animation module_",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "sprite",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5792,
            "description": "Returns &lt;canvas&gt; element's contenxt engine's gradient object, or 'rgba(0,0,0,0)' on failure",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "JavaScript Gradient object, or String"
            },
            "access": "private",
            "tagname": "",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5801,
            "description": "Design.update() helper function - builds &lt;canvas&gt; element's contenxt engine's gradient object",
            "itemtype": "method",
            "name": "makeGradient",
            "params": [
                {
                    "name": "sprite",
                    "description": "SPRITENAME String",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME String",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5873,
            "description": "Design.update() helper function - applies color attribute objects to the gradient",
            "itemtype": "method",
            "name": "applyStops",
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5889,
            "description": "Remove this gradient from the scrawl library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Design",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5931,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Gradient'",
            "final": 1,
            "class": "Gradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5941,
            "description": "Swap start and end attributes",
            "itemtype": "method",
            "name": "swap",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Gradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 5992,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'RadialGradient'",
            "final": 1,
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6001,
            "description": "Start circle radius, in pixels",
            "itemtype": "property",
            "name": "startRadius",
            "type": "Number",
            "default": "0",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6008,
            "description": "End circle radius, in pixels",
            "itemtype": "property",
            "name": "endRadius",
            "type": "Number",
            "default": "0",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6015,
            "description": "Start circle radius, as a percentage of the sprites width where 0 = 0px and 1 = width in pixels",
            "itemtype": "property",
            "name": "startRangeRadius",
            "type": "Number",
            "default": "0.5",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6022,
            "description": "End circle radius, as a percentage of the sprites width where 0 = 0px and 1 = width in pixels",
            "itemtype": "property",
            "name": "endRangeRadius",
            "type": "Number",
            "default": "0",
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlCore.js",
            "line": 6031,
            "description": "Swap start and end attributes",
            "itemtype": "method",
            "name": "swap",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "RadialGradient",
            "module": "scrawlCore"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 73,
            "description": "Grayscale filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of grayscaling effect: as a Number, between 0 (no effect) and 1 (full grayscale effect); as a String, between '0%' and '100%' (default: 1)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "grayscale",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 108,
            "description": "Sharpen filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of sharpen effect: as a Number, between 0 (no effect) and 1 (full sharpen effect); as a String, between '0%' and '100%' (default: 1)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "sharpen",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 140,
            "description": "Filter helper function - merge one image data object into another\n\nAttributes in the argument object:\n\n* __value__ - Number. Percentage value of merge, between 0 (image1 returned) and 1 (image2 returned)\n* __image1__ - First image data object - fully displayed when _value_ is 0\n* __image2__ - Second image data object - fully displayed when _value_ is 1",
            "itemtype": "method",
            "name": "mergeImages",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 180,
            "description": "Invert filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of invert effect: as a Number, between 0 (no effect) and 1 (full invert effect); as a String, between '0%' and '100%' (default: 1)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 211,
            "description": "Brightness filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of brightness effect: as a Number, between 0 (black) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Values can go above 1.\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "brightness",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 241,
            "description": "Saturation filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of saturation effect: as a Number, between 0 (gray) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Values can go above 1.\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "saturation",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 271,
            "description": "Threshold filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of threshold border: as a Number, between 0 (black) and 1 (white); as a String, between '0%' and '100%' (default: 0.5)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "threshold",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 308,
            "description": "Channels filter (added to the core by the scrawlFilters module)\n\nAlter the relative channel levels for an image\n\nAttributes in the argument object:\n\n* __red__ - Number or String. Percentage value of red channel effect on the pixel: as a Number, between 0 (set red channel to zero) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Can go above 1.\n* __green__ - Number or String. Percentage value of green channel effect on the pixel: as a Number, between 0 (set green channel to zero) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Can go above 1.\n* __blue__ - Number or String. Percentage value of blue channel effect on the pixel: as a Number, between 0 (set blue channel to zero) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Can go above 1.\n* __alpha__ - Number or String. Percentage value of alpha channel effect on the pixel: as a Number, between 0 (set alpha channel to zero) and 1 (no effect); as a String, between '0%' and '100%' (default: 1). Can go above 1.\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "channels",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 348,
            "description": "ChannelStep filter (added to the core by the scrawlFilters module)\n\nLimit the number of values used in each channel\n\nAttributes in the argument object:\n\n* __red__ - Number. Channel step size, between 1 (256 steps) and 128 (2 steps) - default: 1\n* __green__ - Number. Channel step size, between 1 (256 steps) and 128 (2 steps) - default: 1\n* __blue__ - Number. Channel step size, between 1 (256 steps) and 128 (2 steps) - default: 1\n* __alpha__ - Number. Channel step size, between 1 (256 steps) and 128 (2 steps) - default: 1\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "channelStep",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 384,
            "description": "Sepia filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of sepia effect: as a Number, between 0 (no effect) and 1 (full sepia tint); as a String, between '0%' and '100%' (default: 1).\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "sepia",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 401,
            "description": "Tint filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __value__ - Number or String. Percentage value of tint effect: as a Number, between 0 (no effect) and 1 (full tint); as a String, between '0%' and '100%' (default: 1).\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute \n\nThe argument object can take up to nine additional attributes, used to set the tinting effect. Default values for these attributes will generate a sepia tint. All values are Numbers between 0 and 1:\n\n* __redInRed__ or __rr__ - default 0.393\n* __redInGreen__ or __rg__ - default 0.349\n* __redInBlue__ or __rb__ - default 0.272\n* __greenInRed__ or __gr__ - default 0.769\n* __greenInGreen__ or __gg__ - default 0.686\n* __greenInBlue__ or __gb__ - default 0.534\n* __blueInRed__ or __br__ - default 0.189\n* __blueInGreen__ or __bg__ - default 0.168\n* __blueInBlue__ or __bb__ - default 0.131",
            "itemtype": "method",
            "name": "tint",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 461,
            "description": "Blur filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __brush__ - Array. A pre-compiled filter.getBrush() array to be used with the blur filter; alternatively, define the brush dynamically using the radius/radiusX/radiusY/roll attributes below\n* __radiusX__ - Number. Blur brush x radius (default: 2)\n* __radiusY__ - Number. Blur brush y radius (default: 2)\n* __roll__ - Number. Blur brush roll value (default: 0)\n* __radius__ - Number. Blur brush x and y radius (default: 0)\n* __includeAlpha__ - Boolean. When true, alpha values are included in the calculation (default: false)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "blur",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 497,
            "description": "Blur helper function",
            "itemtype": "method",
            "name": "getBrush",
            "params": [
                {
                    "name": "x",
                    "description": "brush x radius",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "brush y radius",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "brush roll (in degrees)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Array of objects used for the blur brush"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 537,
            "description": "Pixelate filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __width__ - Number. Block width (default: 5)\n* __height__ - Number. Block height (default: 5)\n* __includeAlpha__ - Boolean. When true, alpha values are included in the calculation (default: false)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "pixelate",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 602,
            "description": "Glass Tile filter (added to the core by the scrawlFilters module)\n\nAttributes in the argument object:\n\n* __width__ - Number. Block width (default: 5)\n* __height__ - Number. Block height (default: 5)\n* __outerWidth__ - Number. Block width (default: 8)\n* __outerHeight__ - Number. Block height (default: 8)\n* __use__ - Object. Image data object on which to apply the filter (default: undefined)\n* __save__ - Boolean. When true, will save the resulting image data for display by picture sprites using this image (default: true)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "glassTile",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 642,
            "description": "Matrix filter (added to the core by the scrawlFilters module)\n\nTransforms an image using a weighted matrix\n\nMatrix is composed of an array of weightings to be applied to the colors of surrounding pixels. The function expects the weightings data to equate to a square matrix with an odd number of colums/rows - thusthe data array should consist of 9, 25, 49, etc elements. if the data array is missing the requisite number of elements, the function will add zeros to it to pad it out.\n\nAttributes in the argument object:\n\n* __data__ - Array of Numbers. (default: [1])\n* __includeAlpha__ - Boolean. When true, alpha values are included in the calculation (default: false)\n* __wrap__ - Boolean. When true, offset pixels that fall outside the boundaries of the image will be wrapped to the opposite end of the image row or column; when false, the offset pixels are ignored and their weightings excluded from the calculation (default: false)\n* __useSourceData__ - Boolean. When true, applies filter to data from source image; when false, filters current image (default: false). Has no meaning if an image data object is supplied via the _use_ attribute",
            "itemtype": "method",
            "name": "matrix",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended data image object"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlFilters.js",
            "line": 697,
            "description": "Helper function\n\nThe matrix array consists of objects with the following attributes:\n\n* __ox__ horizontal offset from the current pixel\n* __oy__ vertical offset from the current pixel\n* __wt__ weighting to be used when adding the color values of the offset pixel to the resulting color for current pixel\n\nFunction used by matrix() and blur() filter functions",
            "itemtype": "method",
            "name": "doMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "Array of matrix objects",
                    "type": "Array"
                },
                {
                    "name": "args",
                    "description": "Arguments object supplied by filter",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Updated ImageData data on success; false otherwise"
            },
            "class": "window.scrawl_Filters",
            "module": "scrawlFilters"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 59,
            "description": "A __general__ function to generate ScrawlImage wrapper objects for &lt;img&gt;, &lt;video&gt; or &lt;svg&gt; elements identified by class string",
            "itemtype": "method",
            "name": "getImagesByClass",
            "params": [
                {
                    "name": "classtag",
                    "description": "Class string value of DOM objects to be imported into the scrawl library",
                    "type": "String"
                },
                {
                    "name": "kill",
                    "description": "when set to true, the &lt;img&gt; elements will be removed from the DOM when imported into the library",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of String names; false on failure"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 85,
            "description": "A __general__ function to generate a ScrawlImage wrapper object for an &lt;img&gt;, &lt;video&gt; or &lt;svg&gt; element identified by an id string",
            "itemtype": "method",
            "name": "getImageById",
            "params": [
                {
                    "name": "idtag",
                    "description": "Id string value of DOM object to be imported into the scrawl library",
                    "type": "String"
                },
                {
                    "name": "kill",
                    "description": "when set to true, the &lt;img&gt; element will be removed from the DOM when imported into the library",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "String name; false on failure"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 103,
            "description": "A __factory__ function to generate new Pattern objects",
            "itemtype": "method",
            "name": "newPattern",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pattern object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 112,
            "description": "A __factory__ function to generate new Picture sprites",
            "itemtype": "method",
            "name": "newPicture",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture sprite object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 121,
            "description": "A __factory__ function to generate new ScrawlImage objects",
            "itemtype": "method",
            "name": "newImage",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ScrawlImage object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 134,
            "description": "A __factory__ function to generate new AnimSheet objects",
            "itemtype": "method",
            "name": "newAnimSheet",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "AnimSheet object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 149,
            "description": "A __factory__ function to convert a sprite into a Picture sprite\n\nArgument attributes can include any sprite positioning and styling values, alongside the following flag:\n\n* __convert__ - when set to true, existing sprite will be deleted; default: false\n\nIf no name attribute is supplied in the argument object, the new Picture sprite will be given the name: SPRITENAME+'_picture'",
            "itemtype": "method",
            "name": "Sprite.convertToPicture",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture sprite object"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 176,
            "description": "A __factory__ function to convert a group of sprites into a single Picture sprite\n\nArgument attributes can include any sprite positioning and styling values, alongside the following flag:\n\n* __convert__ - when set to true, existing sprites in the group will be deleted; default: false\n\nIf no name attribute is supplied in the argument object, the new Picture sprite will be given the name: GROUPNAME+'_sprite'",
            "itemtype": "method",
            "name": "Group.convertToSprite",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Picture sprite object; false if no sprites contained in group"
            },
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 206,
            "description": "Helper function for convert functions",
            "itemtype": "method",
            "name": "prepareConvert",
            "return": {
                "description": "ImageData object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 239,
            "description": "Helper function for convert functions",
            "itemtype": "method",
            "name": "doConvert",
            "return": {
                "description": "Picture sprite object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Images",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 287,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Pattern'",
            "final": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 296,
            "description": "Drawing parameter",
            "itemtype": "property",
            "name": "repeat",
            "type": "String",
            "default": "'repeat'",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 303,
            "description": "CELLNAME String of &lt;canvas&gt; element context engine on which the gradient has been set",
            "itemtype": "property",
            "name": "cell",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 310,
            "description": "SCRAWLIMAGENAME String - used when pattern is based on an image already imported into the scrawl library",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 317,
            "description": "Full path to image file on server - used when pattern is based on a dynamically loaded image",
            "itemtype": "property",
            "name": "source",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 324,
            "description": "CELLNAME String - used when pattern is based on a &lt;canvas&gt; element's image",
            "itemtype": "property",
            "name": "canvas",
            "type": "String",
            "default": "''",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 333,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 345,
            "description": "Discover this Pattern's image source, loading it if necessary",
            "itemtype": "method",
            "name": "setImage",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "callback",
                    "description": "Function to be run once Image is successfully loaded",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 418,
            "description": "Returns &lt;canvas&gt; element's contenxt engine's pattern object, or 'rgba(0,0,0,0)' on failure",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "JavaScript pattern object, or String"
            },
            "access": "private",
            "tagname": "",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 427,
            "description": "Builds &lt;canvas&gt; element's contenxt engine's pattern object",
            "itemtype": "method",
            "name": "makeDesign",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 447,
            "description": "Remove this pattern from the scrawl library",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Always true"
            },
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 458,
            "description": "Alias for Pattern.makeDesign()",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Pattern",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 551,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Picture'",
            "final": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 560,
            "description": "SCRAWLIMAGE String - source image for this sprite",
            "itemtype": "property",
            "name": "source",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 567,
            "description": "IMAGEDATANAME String - name of the Image Data object\n\nCalculated automatically by Scrawl following a .getImageData() call",
            "itemtype": "property",
            "name": "imageData",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 576,
            "description": "Collision attribute - name of channel to be checked against during collision detection\n\nPermitted values: 'red', 'blue', 'green', 'alpha'",
            "itemtype": "property",
            "name": "imageDataChannel",
            "type": "String",
            "default": "'alpha'",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 585,
            "description": "ANIMSHEET String - Sprite sheet image linked to this sprite",
            "itemtype": "property",
            "name": "animSheet",
            "type": "String",
            "default": ";;",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 592,
            "description": "Identifier String - permitted values include: 'animation', 'canvas', 'img'\n\nDetected automatically by scrawl during sprite construction",
            "itemtype": "property",
            "name": "imageType",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 602,
            "description": "Collision flag - when true, Picture sprite will use imageData to determine whether a collision has occured; when false, a simpler box collision system is used",
            "itemtype": "property",
            "name": "checkHitUsingImageData",
            "type": "Boolean",
            "default": "false",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 609,
            "description": "Image display - horizontal offset, in pixels, from the image's top left corner",
            "itemtype": "property",
            "name": "copyX",
            "type": "Number",
            "default": "0",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 616,
            "description": "Image display - vertical offset, in pixels, from the image's top left corner",
            "itemtype": "property",
            "name": "copyY",
            "type": "Number",
            "default": "0",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 623,
            "description": "Image display - width, in pixels, from copy start point",
            "itemtype": "property",
            "name": "copyWidth",
            "type": "Number",
            "default": "0",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 630,
            "description": "Image display - height, in pixels, from copy start point",
            "itemtype": "property",
            "name": "copyHeight",
            "type": "Number",
            "default": "0",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 637,
            "description": "Object consisting of filter name keys and filter argument objects",
            "itemtype": "property",
            "name": "filters",
            "type": "Object",
            "default": "Object",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 644,
            "description": "Array of this.filters{} attribute keys",
            "itemtype": "property",
            "name": "filterKeys",
            "type": "Array",
            "default": "Array",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 652,
            "description": "Checksum - used to determine whether filters need to be calculated",
            "itemtype": "property",
            "name": "checkSum",
            "type": "Number",
            "default": "0",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 659,
            "description": "Dirty filter flag - if true, recalculate filtered image",
            "itemtype": "property",
            "name": "calculateFilters",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 667,
            "description": "Asynchronous loading of image file from the server - path/to/image file\n\nUsed only with __scrawl.newPicture()__ and __Picture.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "default": "''",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 675,
            "description": "Asynchronous loading of image file from the server - function to run once image has successfully loaded\n\nUsed only with __scrawl.newPicture()__ and __Picture.clone()__ operations. This attribute is not retained",
            "itemtype": "property",
            "name": "callback",
            "type": "Function",
            "default": "undefined",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 685,
            "description": "Augments Sprite.get()",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Attribute to be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 699,
            "description": "Augments Sprite.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 713,
            "description": "Augments Sprite.setDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 729,
            "description": "Constructor helper function\n\nLoads an image from an URL path, creates a ScrawlImage wrapper for it and then creates the Picture sprite\n\n_Note: this function is asynchronous_",
            "itemtype": "method",
            "name": "importImage",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New Picture object; false on failure"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 768,
            "description": "Augments Sprite.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 783,
            "description": "Clone helper function",
            "itemtype": "method",
            "name": "fitToImageSize",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 802,
            "description": "Constructor and clone helper function",
            "itemtype": "method",
            "name": "sourceImage",
            "return": {
                "description": "Correct imageType attribute value for this sprite"
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 818,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 836,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 851,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 875,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 891,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 911,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 937,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 963,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 988,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1013,
            "description": "Load the Picture sprite's image data (via JavaScript getImageData() function) into the scrawl library",
            "itemtype": "method",
            "name": "getImageData",
            "params": [
                {
                    "name": "label",
                    "description": "IMAGEDATANAME - default: PICTURENAME_data",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1041,
            "description": "Get the pixel color or channel data from Picture object's image at given coordinate\n\nArgument needs to have __x__ and __y__ data (pixel coordinates) and, optionally, a __channel__ string - 'red', 'blue', 'green', 'alpha', 'color' (default)",
            "itemtype": "method",
            "name": "getImageDataValue",
            "params": [
                {
                    "name": "items",
                    "description": "Coordinate Vector or Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Color value at coordinate; false if no color found"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1093,
            "description": "Display helper function - retrieve copy attributes for ScrawlImage, taking into account the current frame for sprite sheet images\n\nAlso generates new filtered images, when necessary",
            "itemtype": "method",
            "name": "getImage",
            "return": {
                "description": "Image Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1157,
            "description": "Display helper function - check to see if filtered image needs to be recalculated",
            "itemtype": "method",
            "name": "calculateCheckSum",
            "return": {
                "description": "Boolean False if filters need recalculating; true otherwise."
            },
            "access": "private",
            "tagname": "",
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1189,
            "description": "Check Cell coordinates to see if any of them fall within this sprite's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the sprite's path; false if none fall within the path"
            },
            "class": "Picture",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1299,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'ScrawlImage'",
            "final": 1,
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1308,
            "description": "DOM image actual width, in pixels",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1315,
            "description": "DOM image actual height, in pixels",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1322,
            "description": "Image element type: 'img' or 'video'",
            "itemtype": "property",
            "name": "elementType",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1330,
            "description": "Constructor/clone flag - if set to true (default), will remove the &lt;img&gt; element from the web page DOM\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "removeImageFromDOM",
            "type": "Boolean",
            "default": "true",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1338,
            "description": "Constructor argument attribute - either the DOM image/video element; or an image URL object\n\n_This attribute is not retained by the object_",
            "itemtype": "property",
            "name": "element",
            "type": "Object",
            "default": "undefined",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1348,
            "description": "Makes a virtual image from an imageDataUrl",
            "itemtype": "method",
            "name": "makeImage",
            "params": [
                {
                    "name": "data",
                    "description": "The imageDataUrl data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "new DOM &lt;img&gt; object"
            },
            "access": "private",
            "tagname": "",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1369,
            "description": "Get image data URL - uses JavScript canvas API function ctx.toDataURL()\n\n_Note: does not save the data in the scrawl library_",
            "itemtype": "method",
            "name": "getImageDataUrl",
            "params": [
                {
                    "name": "image",
                    "description": "DOM &lt;img&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "data.URL data"
            },
            "access": "private",
            "tagname": "",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1392,
            "description": "Get image data - uses JavScript canvas API function ctx.getImageData()\n\n_Note: does not save the data in the scrawl library_",
            "itemtype": "method",
            "name": "getImageData",
            "params": [
                {
                    "name": "source",
                    "description": "When true, retrieves image data from the source image; default is false",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "getImageData data object"
            },
            "access": "private",
            "tagname": "",
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1414,
            "description": "Clone a SpriteImage object\n\nAlso clones the virtual &lt;img&gt; element associated with the SpriteImage",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "new ScrawlImage object on success; false otherwise"
            },
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1429,
            "description": "Use a filter on the image",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "filtername",
                    "description": "Filter name string",
                    "type": "String"
                },
                {
                    "name": "items",
                    "description": "Key:value Object argument for filter function",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "amended image data object"
            },
            "class": "ScrawlImage",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1481,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'AnimSheet'",
            "final": 1,
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1490,
            "description": "An Array of animation frame data Objects, to be used for producing an animation sequence. Each Object in the Array has the following form:\n\n* {x:Number, y:Number, w:Number, h:Number, d:Number}\n\n... where:\n\n* __x__ and __y__ represent the starting coordinates for the animation frame, in pixels, from the top left corner of the image\n* __w__ and __h__ represent the dimensions of the animation frame, in pixels\n* __d__ is the duration for each frame, in milliseconds\n\nAnimation frames are played in the order they are presented in this Array",
            "itemtype": "property",
            "name": "frames",
            "type": "Array",
            "default": "[]",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1507,
            "description": "The current frame of the animation, from frame 0",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1514,
            "description": "The speed at which the animation is to play. Values less than 1 will slow the animation, while values greater than one will speed it up. Setting the speed to 0 will pause the animation",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "default": "1",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1521,
            "description": "Playback String; permitted values include:\n\n* 'pause' - pause the animation on the current frame\n* 'end' - play the animation once (default)\n* 'loop' - play the animation continuously \n* 'reverse' - reverse the direction in which the animation runs",
            "itemtype": "property",
            "name": "loop",
            "type": "String",
            "default": "'end'",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1533,
            "description": "Animation running String: permitted values include:\n\n* 'forward' - play the animation from the first frame towards the last frame\n* 'backward' - play the animation from the last frame towards the first frame\n* 'complete' - animation has reached the last (or first) frame and has completed",
            "itemtype": "property",
            "name": "running",
            "type": "String",
            "default": "'complete'",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1544,
            "description": "Datestamp when AnimSheet.getData() function was last called",
            "itemtype": "property",
            "name": "lastCalled",
            "type": "Date",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1555,
            "description": "Set attribute values - will also set the __currentFrame__ attribute to the appropriate value when the running __attribute__ is changed\n\n(Only used by AnimSheet objects)",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlImages.js",
            "line": 1591,
            "description": "Returns an Object in the form {copyX:Number, copyY:Number, copyWidth:Number, copyHeight:Number}, representing the coordinates and dimensions of the current frame to be displayed by a Picture sprite\n\n(Only used by AnimSheet objects)",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Data object"
            },
            "access": "private",
            "tagname": "",
            "class": "AnimSheet",
            "module": "scrawlImages"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 62,
            "description": "scrawl.deleteSprite hook function - modified by path module",
            "itemtype": "method",
            "name": "pathDeleteSprite",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 83,
            "description": "Clone a Scrawl.js object, optionally altering attribute values in the cloned object\n\n(This function replaces the core function)",
            "itemtype": "method",
            "name": "Base.clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attribute key:value pairs; will overwrite existing values in the cloned, but not the source, Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "example": [
                "\n\tvar box = scrawl.newBlock({\n\t\twidth: 50,\n\t\theight: 50,\n\t\t});\n\tvar newBox = box.clone({\n\t\theight: 100,\n\t\t});\n\tnewBox.get('width');\t\t//returns 50\n\tnewBox.get('height');\t\t//returns 100"
            ],
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 119,
            "description": "Position constructor hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 130,
            "description": "Position.setDelta hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPositionSetDelta",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 140,
            "description": "Cell.prepareToCopyCell hook function - modified by path module",
            "itemtype": "method",
            "name": "pathPrepareToCopyCell",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 154,
            "description": "Sprite.stamp hook function - modified by path module",
            "itemtype": "method",
            "name": "pathStamp",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 168,
            "description": "A __factory__ function to generate new Point objects",
            "itemtype": "method",
            "name": "newPoint",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Point object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 178,
            "description": "A __factory__ function to generate new Link objects",
            "itemtype": "method",
            "name": "newLink",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Link object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 188,
            "description": "A __factory__ function to generate new Path objects\n\n_Note: this function does NOT produce Path sprites_ - use scrawl.makePath()",
            "itemtype": "method",
            "name": "newPath",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Path object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 200,
            "description": "A __factory__ function to generate new Path sprites",
            "itemtype": "method",
            "name": "makePath",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Path sprite"
            },
            "example": [
                "\n\tscrawl.makePath({\n\t\tstartX: 50,\n\t\tstartY: 20,\n\t\tfillStyle: 'red',\n\t\tdata: 'M0,0 50,0 60,20, 10,20 0,0z',\n\t\t});"
            ],
            "class": "window.scrawl_Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 549,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Path'",
            "final": 1,
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 558,
            "description": "POINTNAME of the Point object that commences the drawing operation\n\nSet automatically by Path creation factory functions",
            "itemtype": "property",
            "name": "firstPoint",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 568,
            "description": "Drawing flag - when set to true, will treat the first drawing (not positioning) data point as the start point\n\nGenerally this is set automatically as part of an outline factory function",
            "itemtype": "property",
            "name": "isLine",
            "type": "Boolean",
            "default": "true",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 577,
            "description": "Drawing flag - when true, path will be closed\n\n_Note: this attribute must be set to true for those drawing methods that use a fill flood as part of their operation",
            "itemtype": "property",
            "name": "closed",
            "type": "Boolean",
            "default": "true",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 586,
            "description": "Array of LINKNAME Strings for Link objects associated with this Path sprite",
            "itemtype": "property",
            "name": "linkList",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 594,
            "description": "Array of length (Number) values for each Link object associated with this Path sprite",
            "itemtype": "property",
            "name": "linkDurations",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 602,
            "description": "Array of POINTNAME Strings for Point objects associated with this Path sprite",
            "itemtype": "property",
            "name": "pointList",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 610,
            "description": "Path length - calculated automatically by scrawl\n\n_Note: this value will be affected by the value of the precision attribute - hiher precisions lead to more accurate perimeterLength values, particularly along curves_",
            "itemtype": "property",
            "name": "perimeterLength",
            "type": "Number",
            "default": "0",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 619,
            "description": "Path marker sprites - SPRITENAME String of sprite used at start of the Path",
            "itemtype": "property",
            "name": "markStart",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 626,
            "description": "Path marker sprites - SPRITENAME String of sprite used at the line/curve joints along the Path",
            "itemtype": "property",
            "name": "markMid",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 633,
            "description": "Path marker sprites - SPRITENAME String of sprite used at end of the Path",
            "itemtype": "property",
            "name": "markEnd",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 640,
            "description": "Path marker sprites - SPRITENAME String of sprite used as the fallback when markStart, markMid or markEnd attributes are not set",
            "itemtype": "property",
            "name": "mark",
            "type": "String",
            "default": "''",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 647,
            "description": "Path sprite default method attribute is 'draw', not 'fill'",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'draw'",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 654,
            "description": "Set the iterations required for calculating path length and positioning data - higher figures (eg 100) ensure sprites will follow the path more accurately",
            "itemtype": "property",
            "name": "precision",
            "type": "Number",
            "default": "10",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 663,
            "description": "Helper function - define the sprite's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "prepareShape",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 684,
            "description": "Augments Position.getPivotOffsetVector()",
            "itemtype": "method",
            "name": "getPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 693,
            "description": "Display helper function\n\nStamp mark sprites onto Path",
            "itemtype": "method",
            "name": "stampMark",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite object to be stamped",
                    "type": "Sprite"
                },
                {
                    "name": "pos",
                    "description": "Path position (between 0 and 1)",
                    "type": "Number"
                },
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 730,
            "description": "Display helper function\n\nPrepare mark sprites for stamping onto Path",
            "itemtype": "method",
            "name": "addMarks",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 771,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 787,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 804,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 831,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 848,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 863,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 882,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 901,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 919,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 937,
            "description": "Stamp helper function - perform a 'none' method draw. This involves setting the &lt;canvas&gt; element's context engine's values with this sprite's context values and defining the sprites path, on the canvas, but not drawing (fill stroke) the sprite.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 950,
            "itemtype": "method",
            "name": "getFullPointList",
            "return": {
                "description": "Array containing POINTNAME Strings of all Point objects associated with this Path object"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 964,
            "itemtype": "method",
            "name": "getFullLinkList",
            "return": {
                "description": "Array containing LINKNAME Strings of all Link objects associated with this Path object"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 978,
            "description": "Calculate and return Path object's path length\n\nAccuracy of returned value depends on the setting of the __precision__ attribute; lower precision is less accurate for curves",
            "itemtype": "method",
            "name": "getPerimeterLength",
            "params": [
                {
                    "name": "force",
                    "description": "If set to true, forces a complete recalculation",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Path length, in pixels"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 992,
            "description": "Helper function - calculate the positions and lengths of the Path's constituent Point and Link objects",
            "itemtype": "method",
            "name": "buildPositions",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1025,
            "description": "Calculate coordinates of point at given distance along the Shape sprite's path",
            "itemtype": "method",
            "name": "getPerimeterPosition",
            "params": [
                {
                    "name": "val",
                    "description": "Distance along path, between 0 (start) and 1 (end); default: 1",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "steady",
                    "description": "Steady flag - if true, return 'steady calculation' coordinates; otherwise return 'simple calculation' coordinates. Default: true",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "roll",
                    "description": "Roll flag - if true, return tangent angle (degrees) at that point along the path. Default: false",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "local",
                    "description": "Local flag - if true, return coordinate Vector relative to Sprite start parameter; otherwise return Cell coordinate Vector. Default: false",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Vector coordinates"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1103,
            "description": "Check a set of coordinates to see if any of them fall within this sprite's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the sprite's path; false if none fall within the path"
            },
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1141,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the sprite's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Path",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1245,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Point'",
            "final": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1254,
            "description": "SPRITENAME String of point object's parent sprite",
            "itemtype": "property",
            "name": "sprite",
            "type": "String",
            "default": "''",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1261,
            "description": "Point's coordinate Vector - generally the Vector marks the Point's position (in pixels) from the Parent sprite's start coordinates, though this can be changed by setting the __fixed__ attribute to true.\n\nThe following argument attributes can be used to initialize, set and get this attribute's component values:\n\n* __startX__ or __currentX__ to set the x coordinate value\n* __startY__ or __currentY__ to set the y coordinate value",
            "itemtype": "property",
            "name": "local",
            "type": "Vector",
            "default": "zero value Vector",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1273,
            "description": "LINKNAME of Link object for which this Point acts as the start coordinate; generated automatically by the Shape creation factory functions",
            "itemtype": "property",
            "name": "startLink",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1281,
            "description": "Fixed attribute is used to fix the Point to a specific Cell coordinate Vector (true), or to a Sprite start Vector (SPRITENAME). Default action is to treat the Point as local to its parent Sprite's start coordinate",
            "itemtype": "property",
            "name": "fixed",
            "type": "Boolean",
            "default": "false",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1290,
            "description": "Augments Base.set(), to allow users to set the local attributes using startX, startY, currentX, currentY, distance, angle",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1310,
            "description": "Add values to the local attribute. Permitted attributes of the argument object include:\n\n* __startX__, __currentX__ - added to _local.x\n* __startY__, __currentY__ - added to _local.y\n* __distance__ - recalculates the _local_ vector to set its values to equal vector's current magnitude + distance (in pixels)\n* __angle__ - recalculates the _local_ vector to rotate it by the angle value (in degrees)",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1345,
            "description": "Sets the local attribute using angle and/or distance parameters:\n\n* __distance__ - calculates the _local_ vector to set its values to equal vector's current magnitude + distance (in pixels)\n* __angle__ - calculates the _local_ vector to rotate it by the angle value (in degrees)",
            "itemtype": "method",
            "name": "setPolar",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1381,
            "description": "Retrieve Point object's coordinates, together with additional data\n\n* Coordinate reference frame determined by the value of Point.local\n* Coordinate values determined by setting of Point.fixed, Point.local and the parent Shape object's position and settings\n\nReturn object has the following attributes:\n\n* __name__ - Point.name\n* __current__ - coordinate Vector\n* __startLink__ - Point.startLink",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Result object"
            },
            "access": "private",
            "tagname": "",
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1437,
            "description": "Retrieve Point object's coordinates\n\n* Coordinate reference frame determined by the value of Point.local\n* Coordinate values determined by setting of Point.fixed, Point.local and the parent Shape object's position and settings",
            "itemtype": "method",
            "name": "getCurrentCoordinates",
            "return": {
                "description": "Coordinate Vector"
            },
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1448,
            "description": "Set Point.fixed attribute",
            "itemtype": "method",
            "name": "setToFixed",
            "params": [
                {
                    "name": "items",
                    "description": "- either a coordinate Vector; or an Object with x and y attributes; or a Number representing the horizontal coordinate, in pixels, from &lt;canvas&gt; element's left edge; or a pivot SPRITENAME, POINTNAME or PARTICLENAME String",
                    "type": "Mixed"
                },
                {
                    "name": "y",
                    "description": "- vertical coordinate, in pixels, from &lt;canvas&gt; element's top edge",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Point",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1516,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Link'",
            "final": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1536,
            "description": "Type of link - permitted values include: 'line', 'quadratic', 'bezier'",
            "itemtype": "property",
            "name": "species",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1543,
            "description": "POINTNAME of start Point object - used by line, quadratic and bezier links",
            "itemtype": "property",
            "name": "startPoint",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1550,
            "description": "SPRITENAME of this Link's parent sprite object",
            "itemtype": "property",
            "name": "sprite",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1557,
            "description": "POINTNAME of end Point object - used by line, quadratic and bezier links",
            "itemtype": "property",
            "name": "endPoint",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1564,
            "description": "POINTNAME of first control Point object - used by quadratic and bezier links",
            "itemtype": "property",
            "name": "controlPoint1",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1571,
            "description": "POINTNAME of second control Point object - used by bezier links",
            "itemtype": "property",
            "name": "controlPoint2",
            "type": "String",
            "default": "''",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1578,
            "description": "Link object's action - permitted values include: 'add', 'move', 'close', 'end'",
            "itemtype": "property",
            "name": "startLink",
            "type": "String",
            "default": "'add'",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1585,
            "description": "Link length - this value will be affected by the value of the parent Sprite object's __precision__ attribute",
            "itemtype": "property",
            "name": "length",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1593,
            "description": "Positions Array along the length of the Link's path - these values will be affected by the value of the parent Sprite object's __precision__ attribute",
            "itemtype": "property",
            "name": "positions",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1603,
            "description": "Augments Base.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1626,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "pointOnLine",
            "params": [
                {
                    "name": "origin",
                    "description": "Start Point for calculation",
                    "type": "Point"
                },
                {
                    "name": "destination",
                    "description": "End Point for calculation",
                    "type": "Point"
                },
                {
                    "name": "val",
                    "description": "Distance between start and end points, where 0 = start and 1 = end",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1642,
            "description": "Position calculation helper function\n\nResult Object contains the following attributes:\n\n* __start__ - Link.start Point object's local Vector\n* __end__ - Link.end Point object's local Vector\n* __control1__ - Link.controlPoint1 Point object's local Vector\n* __control2__ - Link.controlPoint2 Point object's local Vector",
            "itemtype": "method",
            "name": "getPointCoordinates",
            "return": {
                "description": "Result Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1662,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getLocalPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1702,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1720,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getLocalSteadyPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1748,
            "description": "Position calculation helper function",
            "itemtype": "method",
            "name": "getSteadyPositionOnLink",
            "params": [
                {
                    "name": "val",
                    "description": "- distance along link, where 0 = start and 1 = end",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "coordinate Vector"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1761,
            "description": "Returns length of Link, in pixels",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "Length, in pixels"
            },
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1770,
            "description": "(re)Calculate the Link object's __positions__ array",
            "itemtype": "method",
            "name": "setPositions",
            "params": [
                {
                    "name": "val",
                    "description": "- precision level for the calculation. Default: parent Shape object's precision value",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPath.js",
            "line": 1820,
            "description": "Path object drawing helper function\n\n_Note: this function is recursive_",
            "itemtype": "method",
            "name": "sketch",
            "params": [
                {
                    "name": "ctx",
                    "description": "Sprite Cell's &lt;canvas&gt; element's context engine Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True (eventually)"
            },
            "access": "private",
            "tagname": "",
            "class": "Link",
            "module": "scrawlPath"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 45,
            "description": "A __factory__ function to generate elliptical Shape or Path sprite objects\n\nThe argument can include:\n* __radiusX__ - Number, horizontal radius of ellipse; default: 0 (not retained)\n* __radiusY__ - Number, vertical radius of ellipse; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path (not retained)\n* any other legitimate Sprite, Context or Shape/Path attribute",
            "itemtype": "method",
            "name": "makeEllipse",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 116,
            "description": "A __factory__ function to generate rectangular Shape or Path sprite objects, with optional rounded corners\n\nThe argument can include:\n* __width__ - Number, default: 0\n* __height__ - Number, default: 0\n* also, 0, 1 or more of the following __radius__ attributes (all Number, default: radius=0): radiusTopLeftX, radiusTopLeftY, radiusTopRightX, radiusTopRightY, radiusBottomRightX, radiusBottomRightY, radiusBottomLeftX, radiusBottomLeftY, radiusTopLeft, radiusTopRight, radiusBottomRight, radiusBottomLeft, radiusTopX, radiusTopY, radiusBottomX, radiusBottomY, radiusLeftX, radiusLeftY, radiusRightX, radiusRightY, radiusTop, radiusBottom, radiusRight, radiusLeft, radiusX, radiusY, radius (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path (not retained)\n* any other legitimate Sprite, Context or Shape/Path attribute",
            "itemtype": "method",
            "name": "makeRectangle",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 215,
            "description": "A __factory__ function to generate bezier curve Shape or Path sprite objects\n\nThe argument can include:\n* __startX__ - Number; default: 0\n* __startY__ - Number; default: 0\n* __startControlX__ - Number; default: 0 (not retained)\n* __startControlY__ - Number; default: 0 (not retained)\n* __endControlX__ - Number; default: 0 (not retained)\n* __endControlY__ - Number; default: 0 (not retained)\n* __endX__ - Number; default: 0 (not retained)\n* __endY__ - Number; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Sprite, Context or Shape/Path attribute",
            "itemtype": "method",
            "name": "makeBezier",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 290,
            "description": "A __factory__ function to generate quadratic curve Shape or Path sprite objects\n\nThe argument can include:\n* __startX__ - Number; default: 0\n* __startY__ - Number; default: 0\n* __controlX__ - Number; default: 0 (not retained)\n* __controlY__ - Number; default: 0 (not retained)\n* __endX__ - Number; default: 0 (not retained)\n* __endY__ - Number; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Sprite, Context or Shape/Path attribute",
            "itemtype": "method",
            "name": "makeQuadratic",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 356,
            "description": "A __factory__ function to generate straight line Shape or Path sprite objects\n\nThe argument can include:\n* __startX__ - Number; default: 0\n* __startY__ - Number; default: 0\n* __endX__ - Number; default: 0 (not retained)\n* __endY__ - Number; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Sprite, Context or Shape/Path attribute",
            "itemtype": "method",
            "name": "makeLine",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPathFactories.js",
            "line": 408,
            "description": "A __factory__ function to generate straight-edged regular sprites such as triangles, stars, hexagons, etc\n\nThe argument can include:\n* __angle__ - Number; eg an angle of 72 produces a pentagon, while 144 produces a five-pointed star - default: 0\n* __sides__ - Number; number of sides to the regular sprite - default: 0\n* __outline__ - Number; default: 0\n* __radius__ - Number; default: 0 (not retained)\n* __shape__ - Boolean, true to create Shape; false (default) to create Path \n* any other legitimate Sprite, Context or Shape/Path attribute\n\n_(Either the 'angle' attribute or the 'sides' attribute (but not both) must be included in the argument object)_",
            "itemtype": "method",
            "name": "makeRegularShape",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape or Path sprite object"
            },
            "class": "window.scrawl_Factories",
            "module": "scrawlPathFactories"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 54,
            "description": "A __factory__ function to generate new Phrase sprites",
            "itemtype": "method",
            "name": "newPhrase",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Phrase object"
            },
            "example": [
                "\n\tscrawl.newPhrase({\n\t\tstartX: 50,\n\t\tstartY: 20,\n\t\tfillStyle: 'red',\n\t\tfont: '20pt Arial, sans-serif',\n\t\ttextAlign: 'center',\n\t\ttext: 'Hello, world!\\nHow are you today?',\n\t\t});"
            ],
            "class": "window.scrawl_Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 113,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Phrase'",
            "final": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 122,
            "description": "Text string to be displayed - for multiline text, insert __\\n__ where the text line breaks",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "''",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 129,
            "description": "Font style property - any permitted CSS style String (eg 'italic')",
            "itemtype": "property",
            "name": "style",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 136,
            "description": "Font variant property - any permitted CSS variant String (eg 'small-caps')",
            "itemtype": "property",
            "name": "variant",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 143,
            "description": "Font weight property - any permitted CSS weight String or number (eg 'bold', 700)",
            "itemtype": "property",
            "name": "weight",
            "type": "String",
            "default": "'normal'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 150,
            "description": "Font size",
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "default": "12",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 157,
            "description": "Font metrics property - any permitted CSS metrics String (eg 'pt', 'px')",
            "itemtype": "property",
            "name": "metrics",
            "type": "String",
            "default": "'pt'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 164,
            "description": "Font family property - any permitted CSS font family String\n\n_Note: a font needs to be pre-loaded by the web page before the &lt;canvas&gt; element can successfully use it_",
            "itemtype": "property",
            "name": "family",
            "type": "String",
            "default": "'sans-serif'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 173,
            "description": "Multiline text - line height",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "default": "1.5",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 180,
            "description": "Background color - any permitted CSS Color string",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "''",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 187,
            "description": "Background margin - additional padding around the text (in pixels), colored in by the background color",
            "itemtype": "property",
            "name": "backgroundMargin",
            "type": "Number",
            "default": "0",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 194,
            "description": "Text along path parameter - when placing text along a path, the text can be positioned in phrase blocks, word blocks or by individual letters. Permitted values: 'phrase', 'word', 'glyph' (for individual letters)\n\n_Note: the __path__ module needs to be added to the core to use this functionality_",
            "itemtype": "property",
            "name": "textAlongPath",
            "type": "String",
            "default": "'phrase'",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 203,
            "description": "Fixed width attribute for text along path. When using fixed width (monospace) fonts, set this flag to true for faster rendering\n\n_Note: the __path__ module needs to be added to the core to use this functionality_",
            "itemtype": "property",
            "name": "fixedWidth",
            "type": "Boolean",
            "default": "false",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 212,
            "description": "Array of TEXTNANE strings\n\nUsers should never interfere with Text objects, as they are destroyed and recreated after every Phrase.set() and Phrase.setDelta() function call",
            "itemtype": "property",
            "name": "texts",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 224,
            "description": "Augments Sprite.set()\n\nAllows users to:\n* alter the font either by the font attribute, or by individual font content attributes\n* update the text\n* change other Sprite and Phrase object attributes",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 253,
            "description": "Augments Sprite.detDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 272,
            "description": "Augments Sprite.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes, used to update the clone's attributes with new values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned object"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 283,
            "description": "Helper function - creates Text objects for each line of text in a multiline Phrase",
            "itemtype": "method",
            "name": "multiline",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 312,
            "description": "Helper function - checks to see if font needs to be (re)constructed from its parts",
            "itemtype": "method",
            "name": "checkFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 327,
            "description": "Helper function - creates font-related attributes from sprite's Context object's font attribute",
            "itemtype": "method",
            "name": "deconstructFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 395,
            "description": "Helper function - creates sprite's Context object's phrase attribute from other font-related attributes",
            "itemtype": "method",
            "name": "constructFont",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 419,
            "description": "Augments Sprite.stamp()",
            "itemtype": "method",
            "name": "stamp",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use sprite's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 440,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 466,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 490,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 517,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 544,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 571,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 598,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 625,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 652,
            "description": "Helper function - calculate sprite's width and height attributes, taking into account font size, scaling, etc",
            "itemtype": "method",
            "name": "getMetrics",
            "params": [
                {
                    "name": "cellname",
                    "description": "CELLNAME String (any &lt;canvas&gt; will do for this function)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 672,
            "description": "Drawing function - stamps a background block onto the &lt;canvas&gt; element",
            "itemtype": "method",
            "name": "addBackgroundColor",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "here",
                    "description": "Start coordinates for rectangle",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 692,
            "description": "Drawing function - get sprite offset values\n\nReturns an object with coordinates __x__ and __y__",
            "itemtype": "method",
            "name": "getOffset",
            "return": {
                "description": "JavaScript object"
            },
            "access": "private",
            "tagname": "",
            "class": "Phrase",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 770,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Text'",
            "final": 1,
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 779,
            "description": "Text to be displayed",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 787,
            "description": "PHRASENAME String of parent Phrase object",
            "itemtype": "property",
            "name": "phrase",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 795,
            "description": "CTXNAME String of parent Phrase object's Context object",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "default": "''",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 803,
            "description": "fixedWidth value of parent Phrase object",
            "itemtype": "property",
            "name": "fixedWidth",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 811,
            "description": "Text along path value of parent Phrase object",
            "itemtype": "property",
            "name": "textAlongPath",
            "type": "String",
            "default": "'phrase'",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 819,
            "description": "Text line width, accounting for font, scale, etc",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 827,
            "description": "Text line height, accounting for font, scale, lineHeight, etc",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 835,
            "description": "Glyphs array",
            "itemtype": "property",
            "name": "glyphs",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 843,
            "description": "Glyph widths array",
            "itemtype": "property",
            "name": "glyphWidths",
            "type": "Array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 853,
            "description": "Stamp function - stamp phrases, words or individual glyphs (letters and spaces) along a Shape sprite path\n\nPermitted methods include:\n\n* 'draw' - stroke the sprite's path with the sprite's strokeStyle color, pattern or gradient\n* 'fill' - fill the sprite's path with the sprite's fillStyle color, pattern or gradient\n* 'drawFill' - stroke, and then fill, the sprite's path; if a shadow offset is present, the shadow is added only to the stroke action\n* 'fillDraw' - fill, and then stroke, the sprite's path; if a shadow offset is present, the shadow is added only to the fill action\n* 'floatOver' - stroke, and then fill, the sprite's path; shadow offset is added to both actions\n* 'sinkInto' - fill, and then stroke, the sprite's path; shadow offset is added to both actions\n* 'clear' - fill the sprite's path with transparent color 'rgba(0, 0, 0, 0)'\n* 'clearWithBackground' - fill the sprite's path with the Cell's current backgroundColor\n* 'clip' - clip the drawing zone to the sprite's path (not tested)\n* 'none' - perform all necessary updates, but do not draw the sprite onto the canvas",
            "itemtype": "method",
            "name": "stampAlongPath",
            "params": [
                {
                    "name": "method",
                    "description": "Permitted method attribute String; by default, will use sprite's own method setting",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 933,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 948,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 967,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 982,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 997,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                },
                {
                    "name": "p",
                    "description": "Parent Phrase sprite object",
                    "type": "Phrase"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1016,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                },
                {
                    "name": "p",
                    "description": "Parent Phrase sprite object",
                    "type": "Phrase"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1035,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1051,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1067,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Glyph horizontal coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Glyph vertical coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhrase.js",
            "line": 1081,
            "description": "Calculate metrics for each phrase, word or glyph in the glyphs array",
            "itemtype": "method",
            "name": "getMetrics",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "scrawlPhrase"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 56,
            "description": "An Object containing parameter:value pairs representing the physical parameters within which a physics model operates",
            "itemtype": "property",
            "name": "physics",
            "type": "{Object}",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 62,
            "description": "Gravity - positive values are assumed to act downwards from the top of the &lt;canvas&gt; element. Measured in meters per second squared",
            "itemtype": "property",
            "name": "physics.gravity",
            "type": "Number",
            "default": "9.8",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 69,
            "description": "Air density, measured in kilograms per cubic meter; default is air density at seal level",
            "itemtype": "property",
            "name": "physics.airDensity",
            "type": "Number",
            "default": "1.23",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 76,
            "description": "Change in time since last update, measured in seconds",
            "itemtype": "property",
            "name": "physics.deltaTime",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 91,
            "description": "A __general__ function to undertake a round of calculations for Spring objects",
            "itemtype": "method",
            "name": "updateSprings",
            "params": [
                {
                    "name": "items",
                    "description": "Array of SPRINGNAMES; defaults to all Spring objects",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "True on success; false otherwise"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 113,
            "description": "scrawl.init hook function - modified by physics module\n\nInitiates two forces:\n\n* force.gravity() - gravity force at sea level\n* force.drag() - air drag force at sea level",
            "itemtype": "method",
            "name": "physicsInit",
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 142,
            "description": "A __factory__ function to generate new Particle objects",
            "itemtype": "method",
            "name": "newParticle",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Particle object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 151,
            "description": "A __factory__ function to generate new Spring objects",
            "itemtype": "method",
            "name": "newSpring",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Spring object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 160,
            "description": "A __factory__ function to generate new Force objects",
            "itemtype": "method",
            "name": "newForce",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Force object"
            },
            "class": "window.scrawl_Physics",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 218,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Particle'",
            "final": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 228,
            "description": "Current group",
            "itemtype": "property",
            "name": "group",
            "type": "String",
            "default": "''",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 236,
            "description": "Mobility flag; when false, particle is fixed to the Cell at its position attribute coordinate vector",
            "itemtype": "property",
            "name": "mobile",
            "type": "Boolean",
            "default": "true",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 243,
            "description": "Particle mass value, in kilograms",
            "itemtype": "property",
            "name": "mass",
            "type": "Number",
            "default": "1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 250,
            "description": "Particle radius, in meters",
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0.1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 257,
            "description": "Projected surface area - assumed to be of a sphere - in square meters",
            "itemtype": "property",
            "name": "area",
            "type": "Number",
            "default": "0.03",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 264,
            "description": "Air drag coefficient - assumed to be operating on a smooth sphere",
            "itemtype": "property",
            "name": "drag",
            "type": "Number",
            "default": "0.42",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 271,
            "description": "Elasticity coefficient, where 0.0 = 100% elastic and 1.0 is 100% inelastic",
            "itemtype": "property",
            "name": "elasticity",
            "type": "Number",
            "default": "1",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 278,
            "description": "Object in which user key:value pairs can be stored - clonable",
            "itemtype": "property",
            "name": "userVar",
            "type": "Object",
            "default": "{}",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 285,
            "description": "Position vector - assume 1 pixel = 1 meter\n\nVector attributes can be set using the following alias attributes:\n\n* place.x - __startX__ or __start.x__\n* place.y - __startY__ or __start.y__",
            "itemtype": "property",
            "name": "place",
            "type": "Vector",
            "default": "Zero values vector",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 297,
            "description": "Velocity vector - assume 1 pixel = 1 meter per second\n\nVector attributes can be set using the following alias attributes:\n\n* velocity.x - __deltaX__ or __delta.x__\n* velocity.y - __deltaY__ or __delta.y__",
            "itemtype": "property",
            "name": "velocity",
            "type": "Vector",
            "default": "Zero values vector",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 309,
            "description": "Particle calculator engine - a String value. \n\nCurrent engines include: 'rungeKutter' (most accurate), 'improvedEuler', 'euler' (default)",
            "itemtype": "property",
            "name": "engine",
            "type": "String",
            "default": "'euler'",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 318,
            "description": "An Array containing FORCENAME Strings and/or force Functions",
            "itemtype": "property",
            "name": "forces",
            "type": "Array",
            "default": "[]",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 325,
            "description": "An Array containing SPRINGNAME Strings",
            "itemtype": "property",
            "name": "springs",
            "type": "Array",
            "default": "[]",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 332,
            "description": "Load Vector - recreated at the start of every calculation cycle iteration",
            "itemtype": "property",
            "name": "load",
            "type": "Vector",
            "default": "Zero vector",
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 342,
            "description": "Augments Base.set()\n\nAllows users to set the Particle's position and velocity attributes using startX, startY, start, deltaX, deltaY, delta values",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 373,
            "description": "Augments Base.clone()",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Cloned Particle object"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 390,
            "description": "Add a force to the forces array",
            "itemtype": "method",
            "name": "addForce",
            "params": [
                {
                    "name": "item",
                    "description": "Anonymous Function, or FORCENAME String",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 407,
            "description": "Undertake a calculation cycle iteration",
            "itemtype": "method",
            "name": "stamp",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 429,
            "description": "Alias for Particle.stamp()",
            "itemtype": "method",
            "name": "forceStamp",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 438,
            "description": "Alias for Particle.stamp()",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 447,
            "description": "Calculate the loads (via forces) acting on the particle for this calculation cycle iteration",
            "itemtype": "method",
            "name": "calculateLoads",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 474,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateEuler",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 490,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateImprovedEuler",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 508,
            "description": "Calculation cycle engine",
            "itemtype": "method",
            "name": "updateRungeKutter",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 531,
            "description": "Calculation cycle engine - linear particle collisions",
            "itemtype": "method",
            "name": "linearCollide",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 551,
            "description": "Create a new Spring object and add it to this, and another, Particle objects' springs array\n\nArgument can be either a PARTICLENAME String, or an Object which includes an __end__ attribute set to a PARTICLENAME String",
            "itemtype": "method",
            "name": "addSpring",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes; alternatively, use a PARTICLENAME String",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 583,
            "description": "Delete all springs associated with this Particle",
            "itemtype": "method",
            "name": "removeSprings",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 599,
            "description": "Delete a named Spring object from this Particle",
            "itemtype": "method",
            "name": "removeSpringsTo",
            "params": [
                {
                    "name": "item",
                    "description": "SPRINGNAME String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Particle",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 678,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Spring'",
            "final": 1,
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 687,
            "description": "First Particle PARTICLENAME",
            "itemtype": "property",
            "name": "start",
            "type": "String",
            "default": "''",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 694,
            "description": "Second Particle PARTICLENAME",
            "itemtype": "property",
            "name": "end",
            "type": "String",
            "default": "''",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 701,
            "description": "Spring constant",
            "itemtype": "property",
            "name": "springConstant",
            "type": "Number",
            "default": "1000",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 708,
            "description": "Spring damper constant",
            "itemtype": "property",
            "name": "damperConstant",
            "type": "Number",
            "default": "100",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 715,
            "description": "Rest length, in pixels, between the Spring object's two Particle objects",
            "itemtype": "property",
            "name": "restLength",
            "type": "Number",
            "default": "1",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 722,
            "description": "Current length, in pixels, between the Spring object's two Particle objects\n\nRecalculated as part of each  calculation cycle iteration",
            "itemtype": "property",
            "name": "currentLength",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 732,
            "description": "Vector representing the Spring object's current force on its Particles\n\nRecalculated as part of each  calculation cycle iteration",
            "itemtype": "property",
            "name": "force",
            "type": "Vector",
            "default": "Zero value vector",
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 744,
            "description": "Calculate the force exerted by the spring for this calculation cycle iteration",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 759,
            "description": "Remove this Spring from its Particle objects, and from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Spring",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 803,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Force'",
            "final": 1,
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 812,
            "description": "Anonymous function for calculating a force on a Particle\n\nFunctions need to be in the form:\n\n\tfunction(ball){\n\t\t//get or build a Vector object to hold the result\n\t\tvar result = scrawl.newVector();\t//creating the vector\n\t\tvar result = scrawl.workphys.v1;\t//using an existing work vector: scrawl.workphys.v1 to v5\n\n\t\t//calculate the force - Particle attributes are available via the _ball_ argument\n\t\t\n\t\t//add the force to the Particle's load Vector\n\t\tball.load.vectorAdd(result);\n\t\t}",
            "itemtype": "property",
            "name": "fn",
            "type": "Function",
            "default": "function(){}",
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 835,
            "description": "Calculate the force for this calculation cycle iteration",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "force Vector, as defined in the force function"
            },
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlPhysics.js",
            "line": 843,
            "description": "Remove this Force from the scrawl library",
            "itemtype": "method",
            "name": "kill",
            "return": {
                "description": "Always true"
            },
            "class": "Force",
            "module": "scrawlPhysics"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 48,
            "description": "A __load__ function\n\nArgument should be a JSON String, or an Array of JSON Strings, of objects to be loaded or updated",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "item",
                    "description": "Array of JSON Strings; alternatively, a JSON String",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 111,
            "description": "A __save__ function\n\nArgument should be a String literal: 'pads', 'groups', 'sprites', 'designs', 'animsheets'\n\n_Note: this function does not check for duplicate objects_",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "item",
                    "description": "A String literal: 'pads', 'cells', 'groups', 'sprites', 'designs', 'animsheets', 'springs'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of saved data"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 167,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Base.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 186,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Position.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 210,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "PageElement.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 247,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Pad.toString",
            "params": [
                {
                    "name": "noexternalobjects",
                    "description": "True to exclude external objects such as sprites, designs and groups",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 313,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Cell.toString",
            "params": [
                {
                    "name": "noexternalobjects",
                    "description": "True to exclude external objects such as sprites, designs and groups",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 368,
            "description": "Turn the object into a JSON String; doesn't include name and type attributes",
            "itemtype": "method",
            "name": "Context.toString",
            "return": {
                "description": "JSON string of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 387,
            "description": "Turn the object into a JSON String\n\nAutomatically removes the sprites attribute from the result; when loading, existing sprites need to be re-added to the group",
            "itemtype": "method",
            "name": "Group.toString",
            "params": [
                {
                    "name": "nosprites",
                    "description": "True to exclude the sprites attribute; false will return an array containing this and each of the sprites in the sprites array",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of JSON strings of non-default value attributes"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 434,
            "description": "Turn the object into a JSON String\n\nRetains the sprites attribute Array; does not include any other objects in the return Array",
            "itemtype": "method",
            "name": "Group.save",
            "return": {
                "description": "Array of JSON Strings"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlSaveLoad.js",
            "line": 455,
            "description": "Turn the object into a JSON String",
            "itemtype": "method",
            "name": "Sprite.toString",
            "return": {
                "description": "JSON string of non-default value attributes, including non-default context values"
            },
            "class": "window.scrawl_SaveLoad",
            "module": "scrawlSaveLoad"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 49,
            "description": "A __factory__ function to generate new Shape sprites",
            "itemtype": "method",
            "name": "newShape",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Shape object"
            },
            "example": [
                "\n\tscrawl.newShape({\n\t\tstartX: 50,\n\t\tstartY: 20,\n\t\tfillStyle: 'red',\n\t\tdata: 'M0,0 50,0 60,20, 10,20 0,0z',\n\t\t});"
            ],
            "class": "window.scrawl_Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 100,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Shape'",
            "final": 1,
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 109,
            "description": "Interpreted path data - calculated by scrawl from the data attribute",
            "itemtype": "property",
            "name": "dataSet",
            "type": "Array",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 117,
            "description": "Drawing flag - when set to true, will treat the first drawing (not positioning) data point as the start point\n\nGenerally this is set automatically as part of a shape factory function",
            "itemtype": "property",
            "name": "isLine",
            "type": "Boolean",
            "default": "true",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 126,
            "description": "Shape sprite default method attribute is 'draw', not 'fill'",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "'draw'",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 135,
            "description": "Augments Sprite.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 151,
            "description": "Augments Position.getPivotOffsetVector()",
            "itemtype": "method",
            "name": "getPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 160,
            "description": "Constructor, clone and set helper function\n\nCreate native path data from data attribute String",
            "itemtype": "method",
            "name": "buildDataSet",
            "params": [
                {
                    "name": "d",
                    "description": "Path string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Native path data"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 280,
            "description": "Helper function - define the sprite's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "doOutline",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 295,
            "description": "Helper function - define the sprite's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "completeOutline",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 470,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 485,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 501,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 519,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 533,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 547,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 563,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 579,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 594,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 609,
            "description": "Check Cell coordinates to see if any of them fall within this sprite's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the sprite's path; false if none fall within the path"
            },
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlShape.js",
            "line": 640,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the sprite's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Shape",
            "module": "scrawlShape"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 79,
            "description": "scrawl.init hook function - modified by stacks module",
            "itemtype": "method",
            "name": "pageInit",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 89,
            "description": "A __private__ function that searches the DOM for elements with class=\"scrawlstack\"; generates Stack objects",
            "itemtype": "method",
            "name": "getStacks",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 128,
            "description": "A __private__ function that searches the DOM for canvas elements and generates Pad/Cell/Context objects for each of them\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "getCanvases",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 179,
            "description": "A __private__ function that searches the DOM for elements with class=\"scrawl stack:STACKNAME\"; generates Element objects",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "True on success; false otherwise"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 214,
            "description": "A __general__ function to add a visible &lt;canvas&gt; element to the web page, and create a Pad controller and Cell wrappers for it\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Pad and/or Cell object attribute\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "addCanvasToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Cell's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The new Pad object"
            },
            "example": [
                "\n    <body>\n\t\t<div id=\"canvasholder\"></div>\n\t\t<script src=\"js/scrawlCore-min.js\"></script>\n\t\t<script>\n\t\t\tscrawl.addCanvasToPage({\n\t\t\t\tcanvasName:\t'mycanvas',\n\t\t\t\tparentElement: 'canvasholder',\n\t\t\t\twidth: 400,\n\t\t\t\theight: 200,\n\t\t\t\t}).makeCurrent();\n\t\t</script>\n    </body>\n\n<a href=\"../../demo002.html\">Live demo</a>"
            ],
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 293,
            "description": "A __general__ function to generates a new Stack object, together with a new DOM &lt;div&gt; element to act as the stack\n\nThe argument object should include the following attributes:\n\n* __stackName__ (String) - STACKNAME of existing or new stack (optional)\n* __parentElement__ - (String) CSS #id of parent element, or the DOM element itself; default: document.body\n* any other legitimate Stack object attribute",
            "itemtype": "method",
            "name": "addStackToPage",
            "params": [
                {
                    "name": "items",
                    "description": "Object containing new Stack's parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New stack object"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 320,
            "description": "A __general__ function to reset display offsets for all pads, stacks and elements\n\nThe argument is an optional String - permitted values include 'stack', 'pad', 'element'; default: 'all'\n\n(This function replaces the one defined in the core module)",
            "itemtype": "method",
            "name": "setDisplayOffsets",
            "params": [
                {
                    "name": "item",
                    "description": "Command string detailing which element types are to be set",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Scrawl library object (scrawl)"
            },
            "chainable": 1,
            "example": [
                "\n\tscrawl.setDisplayOffsets();"
            ],
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 352,
            "description": "A __display__ function to move DOM elements within a Stack",
            "itemtype": "method",
            "name": "renderElements",
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 370,
            "description": "A __display__ function to update DOM elements' 3d position/rotation\n\nArgument can contain the following (optional) attributes:\n\n* __quaternion__ - quaternion representing the rotation to be applied to the element\n* __distance__ - distance of element from the rotation origin\n* __action__ - elements to be rotated/positioned\n\nWhere the _action_ attribute can contain either an array of Scrawl objects to be operated upon, or one of the following Strings: '__all__' (default), '__stacks__', '__pads__', or '__elements__'",
            "itemtype": "method",
            "name": "update3d",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object containing key:value pairs",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Always true"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 413,
            "description": "The coordinate Vector representing the object's rotation/flip point\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __startX__ - (Mixed) the x coordinate of the object's rotation/flip point, in pixels, from the left side of the object's stack\n* __startY__ - (Mixed) the y coordinate of the object's rotation/flip point, in pixels, from the top side of the object's stack\n\nThis attribute's attributes accepts absolute number values (in pixels), or string percentages where the percentage is relative to the container stack's width or height, or string literals which again refer to the containing stack's dimensions:\n\n* _startX_ - 'left', 'right' or 'center'\n* _startY_ - 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "PageElement.start",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 431,
            "description": "A change Vector which can be applied to the object's rotation/flip point\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __deltaX__ - (Number) a horizontal change value, in pixels\n* __deltaY__ - (Number) a vertical change value, in pixels",
            "itemtype": "property",
            "name": "PageElement.delta",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 443,
            "description": "A change Vector for translating elements away from their start coordinate\n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __translateX__ - (Number) movement along the x axis, in pixels\n* __translateY__ - (Number) movement along the y axis, in pixels\n* __translateZ__ - (Number) movement along the z axis, in pixels",
            "itemtype": "property",
            "name": "PageElement.translate",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 456,
            "itemtype": "property",
            "name": "PageElement.deltaTranslate",
            "type": "Vector",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 461,
            "description": "An Object (in fact, a Vector) containing offset instructions from the object's rotation/flip point, where drawing commences. \n\nPageElement, and all Objects that prototype chain to PageElement, supports the following 'virtual' attributes for this attribute:\n\n* __handleX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __handleY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n\nWhere values are Numbers, handle can be treated like any other Vector",
            "itemtype": "property",
            "name": "PageElement.handle",
            "type": "Object",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 475,
            "description": "The SPRITENAME or POINTNAME of a sprite or Point object to be used for setting this object's start point",
            "itemtype": "property",
            "name": "PageElement.pivot",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 482,
            "description": "The element's parent stack's STACKNAME",
            "itemtype": "property",
            "name": "PageElement.stack",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 489,
            "description": "The SPRITENAME of a Shape sprite whose path is used to calculate this object's start point",
            "itemtype": "property",
            "name": "PageElement.path",
            "type": "String",
            "default": "''",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 496,
            "description": "A value between 0 and 1 to represent the distance along a Shape object's path, where 0 is the path start and 1 is the path end",
            "itemtype": "property",
            "name": "PageElement.pathPlace",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 503,
            "description": "A change value which can be applied to the object's pathPlace attribute",
            "itemtype": "property",
            "name": "PageElement.deltaPathPlace",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 510,
            "description": "A flag to determine whether the object will calculate its position along a Shape path in a regular (true), or simple (false), manner",
            "itemtype": "property",
            "name": "PageElement.pathSpeedConstant",
            "type": "Boolean",
            "default": "true",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 517,
            "description": "The rotation value (in degrees) of an object's current position along a Shape path",
            "itemtype": "property",
            "name": "PageElement.pathRoll",
            "type": "Number",
            "default": "0",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 524,
            "description": "A flag to determine whether the object will calculate the rotation value of its current position along a Shape path",
            "itemtype": "property",
            "name": "PageElement.addPathRoll",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 531,
            "description": "When true, element ignores horizontal placement data via pivot and path attributes",
            "itemtype": "property",
            "name": "PageElement.lockX",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 538,
            "description": "When true, element ignores vertical placement data via pivot and path attributes",
            "itemtype": "property",
            "name": "PageElement.lockY",
            "type": "Boolean",
            "default": "false",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 545,
            "description": "Element rotation around its transform (start) coordinate",
            "itemtype": "property",
            "name": "PageElement.rotation",
            "type": "Quaternion",
            "default": "Unit quaternion with no rotation",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 552,
            "description": "Element's delta (change in) rotation around its transform (start) coordinate",
            "itemtype": "property",
            "name": "PageElement.deltaRotation",
            "type": "Quaternion",
            "default": "Unit quaternion with no rotation",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 559,
            "description": "Element's rotation tolerance - all Quaternions need to be unit quaternions; this value represents the acceptable tolerance away from the norm",
            "itemtype": "property",
            "name": "PageElement.rotationTolerance",
            "type": "Number",
            "default": "0.001",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 566,
            "description": "A flag to determine whether an element displays itself",
            "itemtype": "property",
            "name": "PageElement.visibility",
            "type": "Boolean",
            "default": "true",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 574,
            "description": "PageElement constructor hook function - modified by stacks module",
            "itemtype": "method",
            "name": "stacksPageElementConstructor",
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 644,
            "description": "Augments Base.get() to retrieve DOM element width and height values, and stack-related attributes\n\n(The stack module replaces the core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "PageElement.get",
            "params": [
                {
                    "name": "get",
                    "description": "Attribute key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Attribute value"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 701,
            "description": "Augments Base.set() to allow the setting of DOM element dimension values, and stack-related attributes\n\n(The stack module replaces the core function rather than augmenting it via a hook function)",
            "itemtype": "method",
            "name": "PageElement.set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 798,
            "description": "Handles the setting of position, transformOrigin, backfaceVisibility, margin, border, padding",
            "itemtype": "method",
            "name": "PageElement.setStyles",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 838,
            "description": "Adds the value of each attribute supplied in the argument to existing values; only Number attributes can be amended using this function",
            "itemtype": "method",
            "name": "PageElement.setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 891,
            "description": "Adds delta values to the start vector; adds deltaPathPlace to pathPlace\n\nPermitted argument values include \n* 'x' - delta.x added to start.x\n* 'y' - delta.y added to start.y\n* 'path' - deltaPathPlace added to pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "PageElement.updateStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 926,
            "description": "Subtracts delta values from the start vector; subtracts deltaPathPlace from pathPlace\n\nPermitted argument values include \n* 'x' - delta.x subtracted from start.x\n* 'y' - delta.y subtracted from start.y\n* 'path' - deltaPathPlace subtracted from pathPlace \n* undefined: all values are amended",
            "itemtype": "method",
            "name": "PageElement.revertStart",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'x', 'y', 'path'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 961,
            "description": "Rotate and translate a DOM element around a quaternion rotation\n\n* Element's initial rotation values should be stored in the deltaRotation attribute quaternion\n* Element's initial translation values should be stored in the deltaTranslate attribute vector\n\nArgument can contain the following (optional) attributes:\n\n* __quaternion__ - quaternion representing the rotation to be applied to the element\n* __distance__ - distance of element from the rotation origin",
            "itemtype": "method",
            "name": "PageElement.update3d",
            "params": [
                {
                    "name": "items",
                    "description": "- Distance between the effective rotation point and the DOM element's start attribute - default: deltaTranslate vector's magnitude",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 993,
            "description": "Changes the sign (+/-) of specified attribute values",
            "itemtype": "method",
            "name": "PageElement.reverse",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1016,
            "description": "Calculates the pixels value of the object's handle attribute\n\n* doesn't take into account the object's scaling or orientation\n* (badly named function - getPivotOffsetVector has nothing to do with pivots)",
            "itemtype": "method",
            "name": "PageElement.getPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1029,
            "description": "Calculates the pixels value of the object's start attribute\n\n* doesn't take into account the object's scaling or orientation",
            "itemtype": "method",
            "name": "PageElement.getStartValues",
            "params": [
                {
                    "name": "item",
                    "description": "String used to limit this function's actions - permitted values include 'deltaX', 'deltaY', 'delta', 'deltaPathPlace'; default action: all values are amended",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Vector of calculated values to help determine where sprite drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1056,
            "description": "Calculates the pixels value of the object's handle attribute",
            "itemtype": "method",
            "name": "PageElement.getOffsetStartVector",
            "return": {
                "description": "Final offset values (as a Vector) to determine where sprite drawing should start"
            },
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1064,
            "description": "Reposition an element within its stack by changing 'left' and 'top' style attributes; rotate it using matrix3d transform",
            "itemtype": "method",
            "name": "PageElement.renderElement",
            "return": {
                "description": "This left"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1115,
            "description": "Calculate start Vector in reference to a Shape sprite object's path",
            "itemtype": "method",
            "name": "PageElement.setStampUsingPath",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1139,
            "description": "Calculate start Vector in reference to a sprite or Point object's position",
            "itemtype": "method",
            "name": "PageElement.setStampUsingPivot",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1196,
            "description": "Set the transform origin style attribute",
            "itemtype": "method",
            "name": "PageElement.setTransformOrigin",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1214,
            "description": "Calculate the element's display offset values",
            "itemtype": "method",
            "name": "PageElement.setDisplayOffsets",
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1235,
            "description": "A __factory__ function to generate new Stack objects",
            "itemtype": "method",
            "name": "newStack",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Stack object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1245,
            "description": "A __factory__ function to generate new Element objects",
            "itemtype": "method",
            "name": "newElement",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Element object"
            },
            "access": "private",
            "tagname": "",
            "class": "window.scrawl_Stacks",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1319,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Stack'",
            "final": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1328,
            "description": "An Object (in fact, a Vector) containing perspective details for the stack element. \n\nthe Stack constructor, and set() function, supports the following 'virtual' attributes for this attribute:\n\n* __perspectiveX__ - (Mixed) the horizontal offset, either as a Number (in pixels), or a percentage String of the object's width, or the String literal 'left', 'right' or 'center'\n* __perspectiveY__ - (Mixed) the vertical offset, either as a Number (in pixels), or a percentage String of the object's height, or the String literal 'top', 'bottom' or 'center'\n* __perspectiveZ__ - (Number) perspective depth, in pixels",
            "itemtype": "property",
            "name": "perspective",
            "type": "Object",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1340,
            "description": "A flag to indicate whether element text should be scaled at the same time as the stack. Default; false (do not scale text)",
            "itemtype": "property",
            "name": "scaleText",
            "type": "Boolean",
            "default": "false",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1350,
            "description": "Return the DOM element wrapped by this object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "Element"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1358,
            "description": "Augments PageElement.set(), to allow users to set the stack perspective using perspectiveX, perspectiveY, perspectiveZ",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1382,
            "description": "Import elements into the stack DOM object, and create element object wrappers for them",
            "itemtype": "method",
            "name": "addElementById",
            "params": [
                {
                    "name": "DOM",
                    "description": "element id String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Element wrapper object on success; false otherwise"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1400,
            "description": "Import elements into the stack DOM object, and create element object wrappers for them",
            "itemtype": "method",
            "name": "addElementsByClassName",
            "params": [
                {
                    "name": "DOM",
                    "description": "element class String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of element wrapper objects on success; false otherwise"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1429,
            "description": "Move DOM elements within a Stack",
            "itemtype": "method",
            "name": "renderElements",
            "return": {
                "description": "Always true"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1456,
            "description": "Parse the perspective Vector attribute",
            "itemtype": "method",
            "name": "parsePerspective",
            "return": {
                "description": "Object containing offset values (in pixels)"
            },
            "access": "private",
            "tagname": "",
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1468,
            "description": "Calculates the pixels value of the object's perspective attribute",
            "itemtype": "method",
            "name": "setPerspective",
            "return": {
                "description": "Set the Stack element's perspective point"
            },
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1489,
            "description": "Scale the stack, and all objects contained in stack\n\nAn item value of 1 will scale the stack to its preset size. Values less than 1 will shrink the stack; values greater than 1 will enlarge it.\n\nBy default, this function does not scale text contained in any stack element. If the scaleFont boolean is is passed as true, then the function will set the stack's font-size style attribute to (item * 100)%. Element font sizes will not scale unless they have been initially set to relative unit values.",
            "itemtype": "method",
            "name": "scaleStack",
            "params": [
                {
                    "name": "item",
                    "description": "- Scale value",
                    "type": "Number"
                },
                {
                    "name": "scaleFont",
                    "description": "- if set to true, will also scale element font sizes; default: false",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Stack",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1588,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Element'",
            "final": 1,
            "class": "Element",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlStacks.js",
            "line": 1599,
            "description": "Return the DOM element wrapped by this object",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "Element"
            },
            "class": "Element",
            "module": "scrawlStacks"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 50,
            "description": "A __factory__ function to generate new Wheel sprites",
            "itemtype": "method",
            "name": "newWheel",
            "params": [
                {
                    "name": "items",
                    "description": "Key:value Object argument for setting attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Wheel object"
            },
            "example": [
                "\n\tscrawl.newWheel({\n\t\tradius: 50,\n\t\tstartX: 150,\n\t\tstartY: 60,\n\t\tfillStyle: 'blue',\n\t\tstrokeStyle: 'red',\n\t\tmethod: 'drawFill',\n\t\t});"
            ],
            "class": "window.scrawl_Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 109,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'Wheel'",
            "final": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 118,
            "description": "Angle of the path's start point, from due east, in degrees",
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "default": "0",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 125,
            "description": "Angle of the path's end point, from due east, in degrees",
            "itemtype": "property",
            "name": "endAngle",
            "type": "Number",
            "default": "360",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 132,
            "description": "Drawing flag - true to draw the arc in a clockwise direction; false for anti-clockwise",
            "itemtype": "property",
            "name": "clockwise",
            "type": "Boolean",
            "default": "false",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 139,
            "description": "Drawing flag - true to close the path; false to keep the path open",
            "itemtype": "property",
            "name": "closed",
            "type": "Boolean",
            "default": "true",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 146,
            "description": "Drawing flag - true to include the center in the path (for wedge shapes); false for circles",
            "itemtype": "property",
            "name": "includeCenter",
            "type": "Boolean",
            "default": "false",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 153,
            "description": "Collision calculation flag - true to use a simple radius check; false to use the JavaScript isPointInPath() function",
            "itemtype": "property",
            "name": "checkHitUsingRadius",
            "type": "Boolean",
            "default": "true",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 160,
            "description": "Collision calculation value - collision radius, from start vector",
            "itemtype": "property",
            "name": "checkHitRadius",
            "type": "Number",
            "default": "0",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 169,
            "description": "Augments Sprite.set()",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 183,
            "description": "Augments Sprite.setDelta()",
            "itemtype": "method",
            "name": "setDelta",
            "params": [
                {
                    "name": "items",
                    "description": "Object consisting of key:value attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 204,
            "description": "Check a set of coordinates to see if any of them fall within this sprite's path - uses JavaScript's _isPointInPath_ function\n\nArgument object contains the following attributes:\n\n* __tests__ - an array of Vector coordinates to be checked; alternatively can be a single Vector\n* __x__ - X coordinate\n* __y__ - Y coordinate\n* __pad__ - PADNAME String\n\nEither the 'tests' attribute should contain a Vector, or an array of vectors, or the x and y attributes should be set to Number values\n\nIf the __checkHitUsingRadius__ attribute is true, collisions will be detected using a simple distance comparison; otherwise the JavaScript isPointInPath() function will be invoked",
            "itemtype": "method",
            "name": "checkHit",
            "params": [
                {
                    "name": "items",
                    "description": "Argument object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The first coordinate to fall within the sprite's path; false if none fall within the path"
            },
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 251,
            "description": "Position.getOffsetStartVector() helper function",
            "itemtype": "method",
            "name": "getPivotOffsetVector",
            "return": {
                "description": "A Vector of calculated offset values to help determine where sprite drawing should start"
            },
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 260,
            "description": "Stamp helper function - define the sprite's path on the &lt;canvas&gt; element's context engine",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 281,
            "description": "Stamp helper function - perform a 'clip' method draw",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 295,
            "description": "Stamp helper function - perform a 'clear' method draw",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 312,
            "description": "Stamp helper function - perform a 'clearWithBackground' method draw",
            "itemtype": "method",
            "name": "clearWithBackground",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 339,
            "description": "Stamp helper function - perform a 'draw' method draw",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 354,
            "description": "Stamp helper function - perform a 'fill' method draw",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 369,
            "description": "Stamp helper function - perform a 'drawFill' method draw",
            "itemtype": "method",
            "name": "drawFill",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 386,
            "description": "Stamp helper function - perform a 'fillDraw' method draw",
            "itemtype": "method",
            "name": "fillDraw",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 403,
            "description": "Stamp helper function - perform a 'sinkInto' method draw",
            "itemtype": "method",
            "name": "sinkInto",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 419,
            "description": "Stamp helper function - perform a 'floatOver' method draw",
            "itemtype": "method",
            "name": "floatOver",
            "params": [
                {
                    "name": "ctx",
                    "description": "JavaScript context engine for Cell's &lt;canvas&gt; element",
                    "type": "Object"
                },
                {
                    "name": "cell",
                    "description": "CELLNAME string of Cell to be drawn on; by default, will use the Cell associated with this sprite's Group object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        },
        {
            "file": "source\\scrawlWheel.js",
            "line": 435,
            "description": "Collision detection helper function\n\nParses the collisionPoints array to generate coordinate Vectors representing the sprite's collision points",
            "itemtype": "method",
            "name": "buildCollisionVectors",
            "params": [
                {
                    "name": "items",
                    "description": "Array of collision point data",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "This"
            },
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Wheel",
            "module": "scrawlWheel"
        }
    ],
    "warnings": []
}